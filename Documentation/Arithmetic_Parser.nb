(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    289439,       6010]
NotebookOptionsPosition[    284221,       5912]
NotebookOutlinePosition[    284555,       5927]
CellTagsIndexPosition[    284512,       5924]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Arithmetic parser", "Title",
 CellChangeTimes->{{3.757707687885583*^9, 
  3.757707690689005*^9}},ExpressionUUID->"d1ca6f13-3dc9-4753-8e1a-\
6160422fec5d"],

Cell[CellGroupData[{

Cell["Initialization", "Chapter",
 CellChangeTimes->{{3.757707699905423*^9, 
  3.757707702482992*^9}},ExpressionUUID->"a9651e77-d6d2-4a54-9ff9-\
ceba4ac659e9"],

Cell[CellGroupData[{

Cell["Finite state machine", "Subchapter",
 CellChangeTimes->{{3.757707715690061*^9, 3.757707721818841*^9}, {
  3.757707839577127*^9, 
  3.757707842542766*^9}},ExpressionUUID->"21a9500e-0fd4-4842-9564-\
1968489f3e69"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Protect", "[", "\[Epsilon]", "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "\[Epsilon]", " ", "will", " ", "be", " ", "used", " ", "as", " ", "a", 
    " ", "symbol", " ", "to", " ", "denote", " ", "the", " ", "empty", " ", 
    "string"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Transition", "[", 
    RowBox[{"parent_", ",", "child_", ",", "inputSymbol_"}], "]"}], ":=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Parent\>\"", "\[Rule]", "parent"}], ",", 
     RowBox[{"\"\<Node\>\"", "\[Rule]", "child"}], ",", 
     RowBox[{"\"\<InputSymbol\>\"", "\[Rule]", "inputSymbol"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EmptyTransition", "[", 
    RowBox[{"parent_", ",", "child_"}], "]"}], ":=", 
   RowBox[{"Transition", "[", 
    RowBox[{"parent", ",", "child", ",", "\[Epsilon]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FATransitions", "[", 
    RowBox[{"transitions_", ",", "state_"}], "]"}], ":=", 
   RowBox[{"Cases", "[", 
    RowBox[{"transitions", ",", 
     RowBox[{"KeyValuePattern", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Parent\>\"", "\[Rule]", "state"}], "}"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Concatenate", "[", "l_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"Join", ",", "l"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.74863044954312*^9, 3.748630549858803*^9}, {
  3.7486306598174953`*^9, 3.748630694423757*^9}, {3.748632233538381*^9, 
  3.748632245553666*^9}, {3.7486942316328907`*^9, 3.7486942320239067`*^9}, {
  3.7486943237098417`*^9, 3.748694324963642*^9}, {3.7486946577550783`*^9, 
  3.748694659233904*^9}, {3.74889494655582*^9, 3.7488949594597397`*^9}, {
  3.750262163674677*^9, 3.7502621646742783`*^9}},
 CellLabel->
  "(Debug) In[1]:=",ExpressionUUID->"31d7f42a-029d-48ad-a73a-d3afc3746dd0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NameTag", "[", 
     RowBox[{"machine_Association", ",", "state_"}], "]"}], ":=", 
    RowBox[{"Subscript", "[", 
     RowBox[{
      RowBox[{"machine", "[", "\"\<Name\>\"", "]"}], ",", 
      RowBox[{"ToString", "[", "state", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FAPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Legended\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<Labeled\>\"", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FAPlot", "[", 
    RowBox[{"machine_Association", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "graphData", ",", "startTag", ",", "acceptTags", ",", "legend", ",", 
       "graph"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<Labeled\>\"", "]"}], ",", 
        "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"graphData", " ", "=", " ", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"machine", "[", "\"\<Transitions\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"KeyValuePattern", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<Parent\>\"", "\[Rule]", "p_"}], ",", 
                RowBox[{"\"\<Node\>\"", "\[Rule]", "n_"}], ",", 
                RowBox[{"\"\<InputSymbol\>\"", "\[Rule]", "i_"}]}], "}"}], 
              "]"}], "\[RuleDelayed]", 
             RowBox[{"Labeled", "[", 
              RowBox[{
               RowBox[{"p", "\[Rule]", "n"}], ",", "i"}], "]"}]}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"startTag", " ", "=", " ", 
          RowBox[{
           RowBox[{"machine", "[", "\"\<StartState\>\"", "]"}], "\[Rule]", 
           "Red"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"acceptTags", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", " ", "\[NotEqual]", " ", 
                RowBox[{"machine", "[", "\"\<StartState\>\"", "]"}]}], ",", 
               RowBox[{"#", "\[Rule]", "Green"}], ",", 
               RowBox[{"#", "\[Rule]", "Purple"}]}], "]"}], "&"}], ",", 
            RowBox[{"machine", "[", "\"\<AcceptStates\>\"", "]"}]}], "]"}]}], 
         ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "False", 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"graphData", " ", "=", " ", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"machine", "[", "\"\<Transitions\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"KeyValuePattern", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<Parent\>\"", "\[Rule]", "p_"}], ",", 
                RowBox[{"\"\<Node\>\"", "\[Rule]", "n_"}], ",", 
                RowBox[{"\"\<InputSymbol\>\"", "\[Rule]", "i_"}]}], "}"}], 
              "]"}], "\[RuleDelayed]", 
             RowBox[{"p", "\[Rule]", "n"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"startTag", " ", "=", " ", 
          RowBox[{
           RowBox[{"machine", "[", "\"\<StartState\>\"", "]"}], "\[Rule]", 
           "Red"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"acceptTags", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", " ", "\[NotEqual]", " ", 
                RowBox[{"machine", "[", "\"\<StartState\>\"", "]"}]}], ",", 
               RowBox[{"#", "\[Rule]", "Green"}], ",", 
               RowBox[{"#", "\[Rule]", "Purple"}]}], "]"}], "&"}], ",", 
            RowBox[{"machine", "[", "\"\<AcceptStates\>\"", "]"}]}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"legend", " ", "=", " ", 
       RowBox[{"PointLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"LightBlue", ",", "Red", ",", "Green", ",", "Purple"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<State\>\"", ",", "\"\<Start state\>\"", ",", 
           "\"\<Accept state\>\"", ",", "\"\<Start/Accept state\>\""}], "}"}],
          ",", 
         RowBox[{"LegendMarkers", "\[Rule]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Disk", "[", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"graph", " ", "=", " ", 
       RowBox[{"Graph", "[", "\[IndentingNewLine]", 
        RowBox[{"graphData", ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", "startTag", "}"}], ",", "acceptTags"}], "]"}]}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"VertexSize", "\[Rule]", "0.1"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<Legended\>\"", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"Legended", "[", 
          RowBox[{"graph", ",", "legend"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "graph", "]"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.748703583696494*^9, {3.748717335552705*^9, 3.748717369089313*^9}, {
   3.7487174584052687`*^9, 3.748717459193922*^9}, 3.74871753815415*^9, {
   3.748717731275473*^9, 3.7487177431597853`*^9}, {3.748718023462709*^9, 
   3.748718024784854*^9}, {3.748718258122054*^9, 3.748718320605734*^9}, {
   3.748719213952038*^9, 3.748719215649395*^9}, {3.7488011555571203`*^9, 
   3.74880115834823*^9}, {3.748880460505911*^9, 3.7488805567965927`*^9}, {
   3.748880603048099*^9, 3.748880621274437*^9}, {3.750264951084629*^9, 
   3.750265014789797*^9}, 3.7502651890345573`*^9, {3.75045790436664*^9, 
   3.7504579050717087`*^9}, {3.750457965215435*^9, 3.750458042670035*^9}, {
   3.75045810531732*^9, 3.750458170800473*^9}, {3.750465993589058*^9, 
   3.750466003810172*^9}},
 CellLabel->
  "(Debug) In[6]:=",ExpressionUUID->"12bae02c-f6f8-47ab-9ab5-f8b6ebb6a3ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"DFA", " ", "object", " ", "constructor"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DFA", "[", 
      RowBox[{
      "name_", ",", "transitions_", ",", "start_", ",", "accept_", ",", 
       RowBox[{"stateExpr_:", 
        RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "\[Rule]", "name"}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Descriptive", " ", "name", " ", "to", " ", "keep", " ", "in", " ", 
         "track", " ", "the", " ", "regular", " ", "operations", " ", 
         "applied", " ", "to", " ", "it"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<DFA\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Transitions\>\"", "\[Rule]", "transitions"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<StartState\>\"", "\[Rule]", "start"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<AcceptStates\>\"", "\[Rule]", "accept"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<StateExpressions\>\"", "\[Rule]", "stateExpr"}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Each", " ", "state", " ", "may", " ", "have", " ", "an", " ", 
        "associated", " ", "expression"}], " ", "*)"}], "\[IndentingNewLine]",
       "|>"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Return", " ", "every", " ", "deterministic", " ", "transition", " ", 
     "leading", " ", "to", " ", "state"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DFATransitions", "[", 
      RowBox[{"transitions_", ",", "state_"}], "]"}], ":=", 
     RowBox[{"Cases", "[", 
      RowBox[{"transitions", ",", 
       RowBox[{"KeyValuePattern", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Parent\>\"", "\[Rule]", "state"}], "}"}], "]"}]}], "]"}]
      }], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Get", " ", "the", " ", "next", " ", "state"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "DFAIterate", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"\"\<Trace\>\"", "\[Rule]", "False"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DFAIterate", "[", 
      RowBox[{"transitions_", ",", "state_", ",", "inputSymbol_", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "next", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"next", " ", "=", " ", 
         RowBox[{"Cases", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"DFATransitions", "[", 
            RowBox[{"transitions", ",", "state"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"KeyValuePattern", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<InputSymbol\>\"", "\[Rule]", 
              RowBox[{"i_", "/;", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"i", ",", "inputSymbol"}], "]"}]}]}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "A", " ", "DFA", " ", "must", " ", "have", " ", "only", " ", "one", 
          " ", "available", " ", "transition"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "next", "]"}], "\[Equal]", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<Trace\>\"", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Return", "[", 
             RowBox[{"First", "[", "next", "]"}], "]"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Return", "[", 
              RowBox[{
               RowBox[{"First", "[", "next", "]"}], "[", "\"\<Node\>\"", 
               "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"TODO", ":", " ", 
            RowBox[{"Crear", " ", "mecanismo", " ", "de", " ", "alerta"}]}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Returns", " ", "the", " ", "trace", " ", "of", " ", "the", " ", 
     "computation", " ", "and", " ", "the", " ", "result", " ", "of", " ", 
     "whether", " ", "the", " ", "machine", " ", "accepts", " ", "the", " ", 
     "inputString"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DFACompute", "[", 
      RowBox[{"machine_Association", ",", "inputString_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"computation", ",", "result"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"computation", " ", "=", " ", 
         RowBox[{"FoldList", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"DFAIterate", "[", 
             RowBox[{
              RowBox[{"machine", "[", "\"\<Transitions\>\"", "]"}], ",", 
              RowBox[{"#1", "[", "\"\<Node\>\"", "]"}], ",", "#2", ",", 
              RowBox[{"\"\<Trace\>\"", "\[Rule]", "True"}]}], "]"}], "&"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{"\"\<Node\>\"", "\[Rule]", 
             RowBox[{"machine", "[", "\"\<StartState\>\"", "]"}]}], "|>"}], 
           ",", "\[IndentingNewLine]", "inputString"}], "\[IndentingNewLine]",
           "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"machine", "[", "\"\<AcceptStates\>\"", "]"}], ",", 
           RowBox[{
            RowBox[{"Last", "[", "computation", "]"}], "[", "\"\<Node\>\"", 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"computation", ",", "result"}], "}"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7486944026200647`*^9, 3.748694431856285*^9}, {
   3.748694463718862*^9, 3.748694511118013*^9}, {3.748694638883589*^9, 
   3.748694682179003*^9}, {3.7486947181076593`*^9, 3.748694744613942*^9}, {
   3.748695667903243*^9, 3.7486956915023117`*^9}, {3.7486958274053373`*^9, 
   3.748695899653247*^9}, {3.748695946982939*^9, 3.748695947502063*^9}, {
   3.748695997879771*^9, 3.748696002073357*^9}, {3.74869611727765*^9, 
   3.748696163820511*^9}, {3.748696233292552*^9, 3.748696413377371*^9}, {
   3.748696491389463*^9, 3.748696524052392*^9}, {3.74869658995395*^9, 
   3.748696593760084*^9}, {3.748703307880711*^9, 3.748703326225828*^9}, {
   3.748703367086596*^9, 3.748703383678033*^9}, {3.748703419136819*^9, 
   3.748703454047913*^9}, {3.748703484657639*^9, 3.748703485296896*^9}, {
   3.748801149430265*^9, 3.748801150396734*^9}, {3.74889367469322*^9, 
   3.748893826840029*^9}, 3.748893895761705*^9, {3.74889402959659*^9, 
   3.7488940352397423`*^9}, {3.748894980807784*^9, 3.748895011747181*^9}, {
   3.75025561350286*^9, 3.750255745901127*^9}, {3.750255897147194*^9, 
   3.750255910369213*^9}, {3.750256208805339*^9, 3.7502562256182756`*^9}, {
   3.7502562694987507`*^9, 3.750256277587036*^9}, {3.750261486482411*^9, 
   3.7502615142919807`*^9}, {3.7502627764170923`*^9, 
   3.7502627866744547`*^9}, {3.7502652041189337`*^9, 3.750265256846733*^9}, {
   3.750265535917069*^9, 3.7502655647458143`*^9}, {3.750547336438621*^9, 
   3.750547372594603*^9}},
 CellLabel->
  "(Debug) In[9]:=",ExpressionUUID->"a7881061-cda5-4880-93b1-dea8fe53412d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NFA", "[", 
     RowBox[{"name_", ",", "transitions_", ",", "start_", ",", "accept_", ",", 
      RowBox[{"stateExpr_:", 
       RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Name\>\"", "\[Rule]", "name"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<NFA\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Transitions\>\"", "\[Rule]", "transitions"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<StartState\>\"", "\[Rule]", "start"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<AcceptStates\>\"", "\[Rule]", "accept"}], " ", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<StateExpressions\>\"", "\[Rule]", "stateExpr"}]}], 
     "\[IndentingNewLine]", "|>"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContainsQ", "[", 
    RowBox[{"list_List", ",", "form_"}], "]"}], ":=", 
   RowBox[{"MemberQ", "[", 
    RowBox[{"list", ",", "form"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ContainsQ", "[", 
     RowBox[{"form1_", ",", "form2_"}], "]"}], ":=", 
    RowBox[{"form1", "===", "form2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PureNondetStateQ", "[", 
     RowBox[{"transitions_", ",", "state_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{
        RowBox[{"FATransitions", "[", 
         RowBox[{"transitions", ",", "state"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\"\<InputSymbol\>\""}], "]"}], "]"}], "]"}], 
      " ", "===", " ", 
      RowBox[{"{", "\[Epsilon]", "}"}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Return", " ", "the", " ", "list", " ", "of", " ", "nodes", " ", 
    "accesible", " ", "via", " ", "empty", " ", "transitions"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NFANondetNodes", "[", 
    RowBox[{"transitions_", ",", "state_Association"}], "]"}], ":=", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"FATransitions", "[", 
      RowBox[{"transitions", ",", 
       RowBox[{"state", "[", "\"\<Node\>\"", "]"}]}], "]"}], ",", 
     RowBox[{"KeyValuePattern", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<InputSymbol\>\"", "\[Rule]", 
        RowBox[{"i_", "/;", 
         RowBox[{"ContainsQ", "[", 
          RowBox[{"i", ",", "\[Epsilon]"}], "]"}]}]}], "}"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NFANondetNodes", "[", 
    RowBox[{"transitions_", ",", "state_Integer"}], "]"}], ":=", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"FATransitions", "[", 
      RowBox[{"transitions", ",", "state"}], "]"}], ",", 
     RowBox[{"KeyValuePattern", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<InputSymbol\>\"", "\[Rule]", 
        RowBox[{"i_", "/;", 
         RowBox[{"ContainsQ", "[", 
          RowBox[{"i", ",", "\[Epsilon]"}], "]"}]}]}], "}"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NFANondetNodes", "[", 
    RowBox[{"transitions_", ",", "state_List"}], "]"}], ":=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NFANondetNodes", "[", 
         RowBox[{"transitions", ",", "#"}], "]"}], "&"}], ",", "state"}], 
      "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NFANondetNodesRecursive", "[", 
     RowBox[{"transitions_", ",", "states_"}], "]"}], " ", ":=", " ", 
    RowBox[{"FixedPoint", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"#", ",", 
          RowBox[{"NFANondetNodes", "[", 
           RowBox[{"transitions", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}]}], "]"}]}], 
         "]"}], "]"}], "&"}], ",", "states"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "NFAIterate", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<Trace\>\"", "\[Rule]", "False"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NFAIterate", "[", 
    RowBox[{"transitions_", ",", 
     RowBox[{"state_", "?", "AtomQ"}], ",", "inputSymbol_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "next", ",", "deterministicTransitions", ",", "forkTransitions", ",", 
       "deterministicNodes", ",", "emptyTransition"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Get", " ", "all", " ", "the", " ", "transitions", " ", "corresponding",
        " ", "to", " ", "a", " ", "DFA"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"deterministicTransitions", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"FATransitions", "[", 
          RowBox[{"transitions", ",", "state"}], "]"}], ",", 
         RowBox[{"KeyValuePattern", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<InputSymbol\>\"", "\[Rule]", 
            RowBox[{"i_", "/;", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"i", ",", "inputSymbol"}], "]"}]}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"deterministicNodes", " ", "=", " ", 
       RowBox[{"Sort", "[", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"deterministicTransitions", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Run", " ", "through", " ", "the", " ", "empty", " ", "transitions", 
        " ", "of", " ", "the", " ", "DFA", " ", "nodes"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"forkTransitions", " ", "=", " ", 
       RowBox[{"NFANondetNodes", "[", 
        RowBox[{"transitions", ",", "deterministicNodes"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Get", " ", "past", " ", "the", " ", "current", " ", "deterministic", 
        " ", "nodes"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"forkTransitions", " ", "=", " ", 
       RowBox[{"NFANondetNodesRecursive", "[", 
        RowBox[{"transitions", ",", "forkTransitions"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Append", " ", "every", " ", "valid", " ", "nondet", " ", 
        "transition"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "The", " ", "next", " ", "nodes", " ", "will", " ", "be", " ", "a", 
        " ", "union", " ", "between", " ", "the", " ", "deterministic", " ", 
        "transitions", " ", "and", " ", "the", " ", "nodes", " ", "reachable",
         " ", "from", " ", "nondet", " ", "transitions"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"next", " ", "=", " ", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"deterministicTransitions", ",", "forkTransitions"}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "next", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<Trace\>\"", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "next", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"next", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NFAIterate", "[", 
     RowBox[{"transitions_", ",", "state_List", ",", "inputSymbol_", ",", 
      RowBox[{"opt", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NFAIterate", "[", 
          RowBox[{"transitions", ",", "#", ",", "inputSymbol", ",", "opt"}], 
          "]"}], "&"}], ",", "state"}], "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NFACompute", "[", 
    RowBox[{"machine_Association", ",", "inputString_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"computation", ",", "result", ",", "start"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"start", " ", "=", " ", 
       RowBox[{"NFANondetNodesRecursive", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"machine", "[", "\"\<Transitions\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"<|", 
           RowBox[{"\"\<Node\>\"", "\[Rule]", 
            RowBox[{"machine", "[", "\"\<StartState\>\"", "]"}]}], "|>"}], 
          "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"computation", " ", "=", " ", 
       RowBox[{"FoldList", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"NFAIterate", "[", 
           RowBox[{
            RowBox[{"machine", "[", "\"\<Transitions\>\"", "]"}], ",", 
            RowBox[{"#1", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}], ",", "#2", 
            ",", 
            RowBox[{"\"\<Trace\>\"", "\[Rule]", "True"}]}], "]"}], "&"}], ",",
          "\[IndentingNewLine]", "start", ",", "\[IndentingNewLine]", 
         "inputString"}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"result", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"Or", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"machine", "[", "\"\<AcceptStates\>\"", "]"}], ",", 
              "#"}], "]"}], "&"}], ",", 
           RowBox[{
            RowBox[{"Last", "[", "computation", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}]}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"computation", ",", "result"}], "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.748696660242413*^9, 3.7486966647459993`*^9}, {
   3.7486967021050158`*^9, 3.748696831536084*^9}, {3.74869697189542*^9, 
   3.7486969809648447`*^9}, 3.748697215466445*^9, 3.74869751995757*^9, {
   3.7487002667885447`*^9, 3.748700369011458*^9}, {3.748700419261013*^9, 
   3.74870044744256*^9}, {3.748700478215622*^9, 3.7487004832193537`*^9}, {
   3.7487005955665207`*^9, 3.7487006595068207`*^9}, {3.748700694288843*^9, 
   3.748700746453335*^9}, 3.748700817284863*^9, {3.74870133603623*^9, 
   3.748701338714301*^9}, {3.748701412553027*^9, 3.748701433385751*^9}, {
   3.748703690592517*^9, 3.7487036910563593`*^9}, {3.74872577206177*^9, 
   3.748725873675222*^9}, {3.748726096655231*^9, 3.748726097862135*^9}, {
   3.748726161467107*^9, 3.7487261661149473`*^9}, 3.748726593319901*^9, {
   3.748726796627596*^9, 3.748726818991522*^9}, {3.7487268513408527`*^9, 
   3.748726851865614*^9}, {3.748726887823266*^9, 3.748726897576947*^9}, {
   3.748727017532686*^9, 3.7487270198114967`*^9}, {3.74872708125178*^9, 
   3.7487270820410557`*^9}, {3.7487288780661297`*^9, 3.74872887985073*^9}, {
   3.748730819090145*^9, 3.748730822972616*^9}, {3.748732013638582*^9, 
   3.748732058344652*^9}, {3.74880113462694*^9, 3.748801136463613*^9}, {
   3.7488035603062153`*^9, 3.748803604623309*^9}, {3.74880375095224*^9, 
   3.748803753859046*^9}, {3.7488042695495777`*^9, 3.748804274425645*^9}, {
   3.7488047683020563`*^9, 3.7488047718077297`*^9}, {3.748804812399547*^9, 
   3.7488049951363697`*^9}, {3.74880505264699*^9, 3.748805053420678*^9}, {
   3.748805470504953*^9, 3.748805476503813*^9}, {3.748807279102119*^9, 
   3.7488072869248123`*^9}, {3.748807328740156*^9, 3.748807400696988*^9}, {
   3.748807808587181*^9, 3.748807836949627*^9}, {3.748808099301045*^9, 
   3.748808174415368*^9}, {3.7488082143482523`*^9, 3.748808217419037*^9}, {
   3.748808272406879*^9, 3.748808275718526*^9}, {3.748808399482581*^9, 
   3.748808399578511*^9}, {3.7488084453504753`*^9, 3.748808510178919*^9}, {
   3.748808549481038*^9, 3.748808553538176*^9}, {3.748808682742573*^9, 
   3.748808682986268*^9}, {3.748808785518733*^9, 3.748808809006649*^9}, 
   3.74880891383162*^9, {3.748809105368822*^9, 3.7488091409700403`*^9}, {
   3.7488094667814283`*^9, 3.7488094694792128`*^9}, {3.7488096384105253`*^9, 
   3.748809641309116*^9}, 3.748809871655493*^9, {3.748809926286551*^9, 
   3.748809926477386*^9}, {3.74880996291532*^9, 3.748809993168223*^9}, 
   3.748810655609845*^9, {3.748810913056004*^9, 3.748811010806554*^9}, {
   3.748811060755949*^9, 3.748811061282751*^9}, {3.748811135937064*^9, 
   3.748811136115068*^9}, 3.748811387794766*^9, {3.748811455189604*^9, 
   3.748811493198897*^9}, {3.748811570454311*^9, 3.7488115713057337`*^9}, {
   3.7488183364958467`*^9, 3.748818347315804*^9}, 3.7488184138505573`*^9, {
   3.748818476964366*^9, 3.7488184974181433`*^9}, {3.748818632924273*^9, 
   3.748818656918626*^9}, {3.748818795287841*^9, 3.748818963348254*^9}, {
   3.748819708145546*^9, 3.748819721079083*^9}, {3.74881982125387*^9, 
   3.748819821436996*^9}, {3.748819866580336*^9, 3.748819871655216*^9}, {
   3.748819980285425*^9, 3.748819984589164*^9}, {3.748820625590354*^9, 
   3.748820705429714*^9}, {3.748820745775682*^9, 3.748820746633438*^9}, {
   3.748820992073642*^9, 3.748821001058663*^9}, {3.748821103036991*^9, 
   3.748821111674374*^9}, {3.7488211428106337`*^9, 3.74882115195549*^9}, {
   3.748821305823208*^9, 3.748821306269497*^9}, {3.7488242901542473`*^9, 
   3.748824290476968*^9}, 3.7488247109240713`*^9, {3.748873218603817*^9, 
   3.748873337382937*^9}, {3.7488733681466618`*^9, 3.748873411836718*^9}, {
   3.7488734559127913`*^9, 3.7488734846393967`*^9}, 3.748874369479238*^9, {
   3.7488748523353148`*^9, 3.7488748915303173`*^9}, {3.748874984927391*^9, 
   3.748875042232397*^9}, {3.748875076959214*^9, 3.7488751458652973`*^9}, {
   3.748875251786681*^9, 3.7488752642448053`*^9}, {3.748875340638957*^9, 
   3.7488753476113367`*^9}, {3.7488753838410873`*^9, 3.748875405935307*^9}, {
   3.748875555618806*^9, 3.748875559889102*^9}, {3.748875658590469*^9, 
   3.748875658864766*^9}, {3.748875696679154*^9, 3.7488756969853992`*^9}, {
   3.748889791049992*^9, 3.748889811896161*^9}, {3.74889007150378*^9, 
   3.7488901091101933`*^9}, {3.74889048215899*^9, 3.74889051222755*^9}, {
   3.748890629123641*^9, 3.7488906440530777`*^9}, {3.748890753176607*^9, 
   3.748890805779504*^9}, {3.7488908426502247`*^9, 3.7488908689660378`*^9}, {
   3.7488909142413054`*^9, 3.748890914664418*^9}, {3.748891441953947*^9, 
   3.748891446155963*^9}, {3.748891538016032*^9, 3.748891582391594*^9}, {
   3.7488916155734787`*^9, 3.748891712650625*^9}, {3.748894094876234*^9, 
   3.748894099111452*^9}, {3.748895551322866*^9, 3.748895570330468*^9}, {
   3.7502559198574057`*^9, 3.7502559502206593`*^9}, {3.750256329382059*^9, 
   3.75025635028307*^9}, {3.750256700770001*^9, 3.750256741046235*^9}, {
   3.750261562702235*^9, 3.7502616043085537`*^9}, {3.750262809143704*^9, 
   3.7502628357536173`*^9}, {3.75026619353651*^9, 3.7502662181861563`*^9}, {
   3.750266316706027*^9, 3.750266374824163*^9}, {3.7503647141078377`*^9, 
   3.750364714673781*^9}, {3.750364767204461*^9, 3.750364816349908*^9}, {
   3.750366727570877*^9, 3.750366734490394*^9}, {3.75042022868252*^9, 
   3.750420229108513*^9}},
 CellLabel->
  "(Debug) In[14]:=",ExpressionUUID->"680049cd-df21-43fa-aec4-f635d6151bc8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TransitionApplyThreshold", "[", 
    RowBox[{"transition_", ",", "threshold_"}], "]"}], ":=", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "+", "threshold"}], "&"}], ",", "transition", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Key", "[", "\"\<Parent\>\"", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Key", "[", "\"\<Node\>\"", "]"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MachineApplyThreshold", "[", 
    RowBox[{"machine_Association", ",", "threshold_"}], "]"}], ":=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Name\>\"", "\[Rule]", 
      RowBox[{"machine", "[", "\"\<Name\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Transitions\>\"", "\[Rule]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"TransitionApplyThreshold", "[", 
          RowBox[{"#", ",", "threshold"}], "]"}], "&"}], ",", 
        RowBox[{"machine", "[", "\"\<Transitions\>\"", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<StartState\>\"", "\[Rule]", 
      RowBox[{
       RowBox[{"machine", "[", "\"\<StartState\>\"", "]"}], "+", 
       "threshold"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<AcceptStates\>\"", "\[Rule]", 
      RowBox[{
       RowBox[{"machine", "[", "\"\<AcceptStates\>\"", "]"}], "+", 
       "threshold"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<StateExpressions\>\"", "\[Rule]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"machine", "[", "\"\<StateExpressions\>\"", "]"}], "]"}], 
         "\[NotEqual]", " ", "0"}], ",", 
        RowBox[{"MapAt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "+", "threshold"}], "&"}], ",", 
          RowBox[{"machine", "[", "\"\<StateExpressions\>\"", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"All", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "|>"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.7488011080330544`*^9, {3.750257081825346*^9, 3.7502571060047483`*^9}, {
   3.750257582428767*^9, 3.7502576073845387`*^9}},
 CellLabel->
  "(Debug) In[26]:=",ExpressionUUID->"18e97e79-dd4c-4401-9d37-c7849cf9ddef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetDirectSuccesors", "[", 
     RowBox[{"machine_", ",", "state_"}], "]"}], ":=", 
    RowBox[{"Select", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Nest", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NFANondetNodes", "[", 
          RowBox[{
           RowBox[{"machine", "[", "\"\<Transitions\>\"", "]"}], ",", "#"}], 
          "]"}], "&"}], ",", 
        RowBox[{"{", "state", "}"}], ",", "2"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ContainsQ", "[", 
           RowBox[{
            RowBox[{"machine", "[", "\"\<AcceptStates\>\"", "]"}], ",", 
            RowBox[{"#", "[", "\"\<Parent\>\"", "]"}]}], "]"}]}], " ", "&&", 
         RowBox[{"PureNondetStateQ", "[", 
          RowBox[{
           RowBox[{"machine", "[", "\"\<Transitions\>\"", "]"}], ",", 
           RowBox[{"#", "[", "\"\<Parent\>\"", "]"}]}], "]"}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"FAParents", "[", 
            RowBox[{
             RowBox[{"machine", "[", "\"\<Transitions\>\"", "]"}], ",", 
             RowBox[{"#", "[", "\"\<Parent\>\"", "]"}]}], "]"}], "]"}], 
          "\[Equal]", "1"}]}], ")"}], "\[IndentingNewLine]", "&"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReplaceKey", "[", 
     RowBox[{"assoc_", ",", "key_", ",", "replaceTo_"}], "]"}], ":=", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{"replaceTo", "&"}], ",", "assoc", ",", 
      RowBox[{"Key", "[", "key", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DeleteIntermediateTransition", "[", 
     RowBox[{"transitions_", ",", "startState_", ",", "endState_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "deleteState", ",", "replacement", ",", "newTransitions", ",", 
        "cleanedUp"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"deleteState", " ", "=", " ", 
        RowBox[{"endState", "[", "\"\<Parent\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"replacement", " ", "=", " ", 
        RowBox[{"ReplaceKey", "[", 
         RowBox[{"endState", ",", "\"\<Parent\>\"", ",", 
          RowBox[{"startState", "[", "\"\<Node\>\"", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"cleanedUp", " ", "=", " ", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{"transitions", ",", 
          RowBox[{"KeyValuePattern", "[", 
           RowBox[{"\"\<Parent\>\"", "\[Rule]", "deleteState"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cleanedUp", " ", "=", " ", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{"cleanedUp", ",", 
          RowBox[{"KeyValuePattern", "[", 
           RowBox[{"\"\<Node\>\"", "\[Rule]", "deleteState"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"newTransitions", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"cleanedUp", ",", "replacement"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "newTransitions", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SimplifyStateIteration", "[", 
    RowBox[{"nfa_", ",", "state_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newMachine", ",", "newTransitions"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newMachine", " ", "=", " ", "nfa"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newTransitions", " ", "=", " ", 
       RowBox[{"Fold", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"DeleteIntermediateTransition", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"<|", 
             RowBox[{"\"\<Node\>\"", "\[Rule]", "state"}], "|>"}], ",", 
            "#2"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
         RowBox[{"nfa", "[", "\"\<Transitions\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GetDirectSuccesors", "[", 
          RowBox[{"nfa", ",", "state"}], "]"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newMachine", "[", "\"\<Transitions\>\"", "]"}], " ", "=", " ",
        "newTransitions"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "newMachine", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SimplifyState", "[", 
     RowBox[{"nfa_", ",", "state_"}], "]"}], ":=", 
    RowBox[{"FixedPoint", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"SimplifyStateIteration", "[", 
        RowBox[{"#", ",", "state"}], "]"}], "&"}], ",", "nfa"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SimplifyMachine", "[", "nfa_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"simplified", ",", "oldStates", ",", "newStates", ",", 
       RowBox[{"stateRelabelRule", " ", "=", " ", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"simplified", " ", "=", " ", 
       RowBox[{"Fold", "[", 
        RowBox[{"SimplifyState", ",", "nfa", ",", 
         RowBox[{"GetStates", "[", 
          RowBox[{"nfa", "[", "\"\<Transitions\>\"", "]"}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"oldStates", " ", "=", " ", 
       RowBox[{"GetStates", "[", 
        RowBox[{"simplified", "[", "\"\<Transitions\>\"", "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"newStates", " ", "=", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"Length", "[", "oldStates", "]"}], "-", "1"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"stateRelabelRule", " ", "=", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{"oldStates", "\[Rule]", "newStates"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simplified", "[", "\"\<Transitions\>\"", "]"}], " ", "=", " ", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"MapAt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Replace", "[", 
            RowBox[{"#", ",", "stateRelabelRule"}], "]"}], "&"}], ",", 
          RowBox[{"simplified", "[", "\"\<Transitions\>\"", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"All", ",", 
              RowBox[{"Key", "[", "\"\<Parent\>\"", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"All", ",", 
              RowBox[{"Key", "[", "\"\<Node\>\"", "]"}]}], "}"}]}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simplified", "[", "\"\<StartState\>\"", "]"}], " ", "=", " ", 
       
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"simplified", "[", "\"\<StartState\>\"", "]"}], ",", 
         "stateRelabelRule"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simplified", "[", "\"\<AcceptStates\>\"", "]"}], " ", "=", 
       " ", 
       RowBox[{"ReplaceAll", "[", 
        RowBox[{
         RowBox[{"simplified", "[", "\"\<AcceptStates\>\"", "]"}], ",", 
         "stateRelabelRule"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"simplified", "[", "\"\<StateExpressions\>\"", "]"}], "]"}],
          "\[NotEqual]", " ", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"simplified", "[", "\"\<StateExpressions\>\"", "]"}], " ", 
          "=", " ", 
          RowBox[{"MapAt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Replace", "[", 
              RowBox[{"#", ",", "stateRelabelRule"}], "]"}], "&"}], ",", 
            RowBox[{"simplified", "[", "\"\<StateExpressions\>\"", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "simplified", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.750364998620798*^9, 3.7503650158668737`*^9}, {
   3.75036515975064*^9, 3.750365172407138*^9}, {3.750365205458529*^9, 
   3.7503652380323153`*^9}, {3.7503660801827383`*^9, 3.750366090758335*^9}, {
   3.7503663461945887`*^9, 3.750366374019957*^9}, {3.750366748755925*^9, 
   3.750366778092875*^9}, {3.750366929251663*^9, 3.7503669714568996`*^9}, {
   3.750418126799262*^9, 3.75041812711924*^9}, {3.7504188815057087`*^9, 
   3.750418882737925*^9}, {3.750419763370091*^9, 3.750419802856162*^9}, {
   3.750420144465686*^9, 3.750420144797082*^9}, {3.7504557414041567`*^9, 
   3.7504557418426123`*^9}, {3.750455807898966*^9, 3.7504558158804197`*^9}, {
   3.750455885104082*^9, 3.7504558890245743`*^9}, {3.7504559602622547`*^9, 
   3.7504559609399433`*^9}, {3.750456077257615*^9, 3.7504560776730328`*^9}, {
   3.750456563904047*^9, 3.7504566001341677`*^9}, {3.75045683067983*^9, 
   3.750456850430387*^9}, 3.750456945376627*^9, {3.7504569899984837`*^9, 
   3.750457054656065*^9}, {3.7504571702230186`*^9, 3.7504571903594513`*^9}, 
   3.750457228095786*^9, {3.750457755513661*^9, 3.750457768254644*^9}, 
   3.750460239484729*^9, {3.750460316589691*^9, 3.75046037279637*^9}, {
   3.75046046293909*^9, 3.750460489202183*^9}, {3.7504605243792677`*^9, 
   3.7504605285463743`*^9}, 3.750460626232395*^9, {3.750460756664249*^9, 
   3.750460757604216*^9}, {3.750460858165915*^9, 3.7504608718712378`*^9}, {
   3.75046129217626*^9, 3.7504613431681747`*^9}, {3.7504613795029593`*^9, 
   3.7504613815429*^9}, {3.750462019486672*^9, 3.750462043861949*^9}, 
   3.750462125452442*^9, {3.750462202208126*^9, 3.75046236819396*^9}, {
   3.750462408880802*^9, 3.750462413123973*^9}, {3.750462667053422*^9, 
   3.7504626872869053`*^9}, {3.7504627358468637`*^9, 
   3.7504627581677322`*^9}, {3.750463038129942*^9, 3.750463077273861*^9}, {
   3.750463175146579*^9, 3.750463191360002*^9}, {3.750463564110938*^9, 
   3.75046357731059*^9}, {3.750463648460927*^9, 3.750463660917789*^9}, {
   3.750466103797947*^9, 3.750466106124605*^9}, {3.7506138823329782`*^9, 
   3.750613899429646*^9}},
 CellLabel->
  "(Debug) In[28]:=",ExpressionUUID->"8ce2d6db-5913-4394-bbf7-b9e791eb5e48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NFAUnion", "[", 
    RowBox[{"machine1_Association", ",", "machine2_Association"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "minIndex", ",", "newIndexThreshold", ",", "newM1", ",", "newM2", ",", 
       "newAccept", ",", "newTransitions", ",", "newMachine", ",", 
       "newStateExpressions"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"minIndex", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"machine1", "[", "\"\<Transitions\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "\"\<Parent\>\""}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newIndexThreshold", " ", "=", " ", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"machine1", "[", "\"\<Transitions\>\"", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}], "]"}], "+", 
        "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newM1", " ", "=", " ", 
       RowBox[{"MachineApplyThreshold", "[", 
        RowBox[{"machine1", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newM2", " ", "=", " ", 
       RowBox[{"MachineApplyThreshold", "[", 
        RowBox[{"machine2", ",", 
         RowBox[{"newIndexThreshold", "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newAccept", " ", "=", " ", 
       RowBox[{"Sort", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"newM1", "[", "\"\<AcceptStates\>\"", "]"}], ",", 
          RowBox[{"newM2", "[", "\"\<AcceptStates\>\"", "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newTransitions", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EmptyTransition", "[", 
          RowBox[{"minIndex", ",", 
           RowBox[{"newM1", "[", "\"\<StartState\>\"", "]"}]}], "]"}], ",", 
         " ", 
         RowBox[{"EmptyTransition", "[", 
          RowBox[{"minIndex", ",", 
           RowBox[{"newM2", "[", "\"\<StartState\>\"", "]"}]}], "]"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newStateExpressions", " ", "=", " ", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"newM1", "[", "\"\<StateExpressions\>\"", "]"}], ",", 
           RowBox[{"newM2", "[", "\"\<StateExpressions\>\"", "]"}]}], "]"}], 
         ",", "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"newMachine", " ", "=", " ", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Name\>\"", "\[Rule]", 
          RowBox[{"StringJoin", "[", 
           RowBox[{
            RowBox[{"machine1", "[", "\"\<Name\>\"", "]"}], ",", 
            "\"\<\[Union]\>\"", ",", 
            RowBox[{"machine2", "[", "\"\<Name\>\"", "]"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<NFA\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Transitions\>\"", "\[Rule]", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"newM1", "[", "\"\<Transitions\>\"", "]"}], ",", 
            RowBox[{"newM2", "[", "\"\<Transitions\>\"", "]"}], ",", 
            "newTransitions"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StartState\>\"", "\[Rule]", "minIndex"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<AcceptStates\>\"", "\[Rule]", "newAccept"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
         "\"\<StateExpressions\>\"", "\[Rule]", "newStateExpressions"}]}], 
        "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "newMachine", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NFAUnion", "[", 
    RowBox[{"machines__", "/;", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"List", "[", "machines", "]"}], "]"}], ">", "2"}]}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{"NFAUnion", ",", 
     RowBox[{"First", "[", 
      RowBox[{"List", "[", "machines", "]"}], "]"}], ",", 
     RowBox[{"Rest", "[", 
      RowBox[{"List", "[", "machines", "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7487022125147448`*^9, 3.7487022284560547`*^9}, {
   3.7487037949551*^9, 3.748703810067548*^9}, {3.748703847611432*^9, 
   3.74870404079329*^9}, {3.74870407141705*^9, 3.748704089081665*^9}, {
   3.748704142419063*^9, 3.748704143225679*^9}, {3.748704223761829*^9, 
   3.748704353447658*^9}, {3.748704390442054*^9, 3.748704436263219*^9}, 
   3.7487046978191*^9, {3.748719121151486*^9, 3.748719139032186*^9}, {
   3.74871933691008*^9, 3.748719376249671*^9}, 3.748719468746488*^9, {
   3.748719573108873*^9, 3.748719631982278*^9}, {3.7487196623214493`*^9, 
   3.7487196895780582`*^9}, {3.74871973646187*^9, 3.748719752903273*^9}, {
   3.748801102369158*^9, 3.748801103866334*^9}, {3.750257229482656*^9, 
   3.750257289656272*^9}, {3.750257454533383*^9, 3.750257463970312*^9}, {
   3.7503655558430223`*^9, 3.750365561933421*^9}, {3.750458378519979*^9, 
   3.7504583839423647`*^9}, {3.7504587614814253`*^9, 3.7504587632883*^9}, {
   3.750458798210857*^9, 3.750458827119969*^9}, {3.7504607199153013`*^9, 
   3.7504607241374617`*^9}},
 CellLabel->
  "(Debug) In[34]:=",ExpressionUUID->"c2db15b0-7525-46b7-aaf5-dbf41f2c0288"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NFAConcatention", "[", 
    RowBox[{"machine1_Association", ",", "machine2_Association"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "newIndexThreshold", ",", "newM2", ",", "newTransitions", ",", 
       "newMachine", ",", "newStateExpressions"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newIndexThreshold", " ", "=", " ", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"machine1", "[", "\"\<Transitions\>\"", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}], "]"}], "+", 
        "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newM2", " ", "=", " ", 
       RowBox[{"MachineApplyThreshold", "[", 
        RowBox[{"machine2", ",", "newIndexThreshold"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"newTransitions", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"EmptyTransition", "[", 
           RowBox[{"#", ",", 
            RowBox[{"newM2", "[", "\"\<StartState\>\"", "]"}]}], "]"}], "&"}],
          ",", 
         RowBox[{"machine1", "[", "\"\<AcceptStates\>\"", "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"newStateExpressions", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"machine1", "[", "\"\<StateExpressions\>\"", "]"}], ",", 
         RowBox[{"newM2", "[", "\"\<StateExpressions\>\"", "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"newStateExpressions", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "newStateExpressions", "]"}], "\[NotEqual]", 
          " ", "0"}], ",", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"machine1", "[", "\"\<StateExpressions\>\"", "]"}], ",", 
             
             RowBox[{"newM2", "[", "\"\<StateExpressions\>\"", "]"}]}], "]"}],
            ",", "First"}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"newMachine", " ", "=", " ", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Name\>\"", "\[Rule]", 
          RowBox[{"StringJoin", "[", 
           RowBox[{
            RowBox[{"machine1", "[", "\"\<Name\>\"", "]"}], ",", 
            RowBox[{"machine2", "[", "\"\<Name\>\"", "]"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<NFA\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Transitions\>\"", "\[Rule]", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"machine1", "[", "\"\<Transitions\>\"", "]"}], ",", 
            RowBox[{"newM2", "[", "\"\<Transitions\>\"", "]"}], ",", 
            "newTransitions"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StartState\>\"", "\[Rule]", 
          RowBox[{"machine1", "[", "\"\<StartState\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<AcceptStates\>\"", "\[Rule]", 
          RowBox[{"newM2", "[", "\"\<AcceptStates\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
         "\"\<StateExpressions\>\"", "\[Rule]", "newStateExpressions"}]}], 
        "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "newMachine", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NFAConcatention", "[", 
    RowBox[{"machines__", "/;", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"List", "[", "machines", "]"}], "]"}], ">", "2"}]}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{"NFAConcatention", ",", 
     RowBox[{"First", "[", 
      RowBox[{"List", "[", "machines", "]"}], "]"}], ",", 
     RowBox[{"Rest", "[", 
      RowBox[{"List", "[", "machines", "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7487045581490107`*^9, 3.7487045719305487`*^9}, {
   3.7487047047346973`*^9, 3.748704885098873*^9}, 3.748705302383275*^9, {
   3.748719789148725*^9, 3.7487197944868813`*^9}, {3.7488010865882683`*^9, 
   3.748801088815999*^9}, {3.7488012499936447`*^9, 3.748801250218133*^9}, {
   3.750257712785565*^9, 3.750257750828499*^9}, 3.750458782188929*^9, {
   3.750458831040436*^9, 3.750458839488649*^9}, {3.750460710913538*^9, 
   3.750460715354344*^9}, {3.750465443814703*^9, 3.750465482733283*^9}},
 CellLabel->
  "(Debug) In[36]:=",ExpressionUUID->"0ad7f988-a0ee-4393-9822-32b09524ddfa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NFAStar", "[", "machine_Association", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "minIndex", ",", "newM", ",", "newTransitions", ",", "newAccept", ",", 
       "newMachine"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"minIndex", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"machine", "[", "\"\<Transitions\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "\"\<Parent\>\""}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newM", " ", "=", " ", 
       RowBox[{"MachineApplyThreshold", "[", 
        RowBox[{"machine", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newTransitions", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"EmptyTransition", "[", 
           RowBox[{"minIndex", ",", 
            RowBox[{"newM", "[", "\"\<StartState\>\"", "]"}]}], "]"}], "}"}], 
         ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"EmptyTransition", "[", 
             RowBox[{"#", ",", 
              RowBox[{"newM", "[", "\"\<StartState\>\"", "]"}]}], "]"}], 
            "&"}], ",", 
           RowBox[{"newM", "[", "\"\<AcceptStates\>\"", "]"}]}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newAccept", " ", "=", " ", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"newM", "[", "\"\<AcceptStates\>\"", "]"}], ",", 
         "minIndex"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"newMachine", " ", "=", " ", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Name\>\"", "\[Rule]", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\<(\>\"", ",", 
            RowBox[{"machine", "[", "\"\<Name\>\"", "]"}], ",", 
            "\"\<\!\(\*SuperscriptBox[\()\), \(*\)]\)\>\""}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<NFA\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Transitions\>\"", "\[Rule]", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"newM", "[", "\"\<Transitions\>\"", "]"}], ",", 
            "newTransitions"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StartState\>\"", "\[Rule]", "minIndex"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<AcceptStates\>\"", "\[Rule]", "newAccept"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<StateExpressions\>\"", "\[Rule]", 
          RowBox[{"newM", "[", "\"\<StateExpressions\>\"", "]"}]}]}], 
        "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "newMachine", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7487045581490107`*^9, 3.7487045719305487`*^9}, {
   3.7487047047346973`*^9, 3.748704885098873*^9}, 3.748705302383275*^9, {
   3.74870536295217*^9, 3.748705371149591*^9}, {3.748705402510075*^9, 
   3.7487054412116423`*^9}, {3.748705648603009*^9, 3.748705745937058*^9}, {
   3.7487058887337914`*^9, 3.748705894022087*^9}, {3.748705976402442*^9, 
   3.748705995321293*^9}, {3.748719272227729*^9, 3.74871928403937*^9}, {
   3.7487384672229953`*^9, 3.7487384675042257`*^9}, {3.748801068950972*^9, 
   3.748801079915145*^9}, {3.750258036678369*^9, 3.7502580535842323`*^9}, {
   3.750458883956998*^9, 3.7504588853391447`*^9}, {3.750459955991395*^9, 
   3.750459957270669*^9}},
 CellLabel->
  "(Debug) In[38]:=",ExpressionUUID->"78b93a45-c595-4808-a5eb-376b998b90df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "if", " ", "there", " ", "is", " ", "at", " ", "least", " ", 
    "one", " ", "of", " ", "the", " ", "accepted", " ", "states", " ", "in", 
    " ", "searchState"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ContainsStateQ", "[", 
      RowBox[{"stateList_", ",", 
       RowBox[{"searchState_", "?", "AtomQ"}]}], "]"}], ":=", 
     RowBox[{"MemberQ", "[", 
      RowBox[{"stateList", ",", "searchState"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ContainsStateQ", "[", 
      RowBox[{"stateList_", ",", "searchState_List"}], "]"}], ":=", 
     RowBox[{"Apply", "[", 
      RowBox[{"Or", ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"stateList", ",", "#"}], "]"}], "&"}], ",", 
         "searchState"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Get", " ", "parents", " ", "of", " ", "the", " ", "current", " ", 
     "state"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FAParents", "[", 
      RowBox[{"transitions_", ",", "state_"}], "]"}], ":=", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{"transitions", ",", 
         RowBox[{"KeyValuePattern", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Node\>\"", "\[Rule]", "state"}], "}"}], "]"}]}], 
        "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "\"\<Parent\>\""}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Check", " ", "if", " ", "the", " ", "state", " ", "is", " ", 
     "inaccesible"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"JunkStateQ", "[", 
      RowBox[{"transitions_", ",", "start_", ",", "state_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"stateParents", ",", "nonSelfTransitions"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ContainsStateQ", "[", 
           RowBox[{"start", ",", "state"}], "]"}], ",", 
          RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"stateParents", " ", "=", " ", 
         RowBox[{"FAParents", "[", 
          RowBox[{"transitions", ",", "state"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nonSelfTransitions", " ", "=", " ", 
         RowBox[{"Complement", "[", 
          RowBox[{"stateParents", ",", 
           RowBox[{"{", "state", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "nonSelfTransitions", "]"}], "\[Equal]", 
           "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "True", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "False", "]"}]}], "\[IndentingNewLine]", 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SafeSort", "[", "l_List", "]"}], ":=", 
     RowBox[{"Sort", "[", "l", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SafeSort", "[", 
      RowBox[{"l_", "?", "AtomQ"}], "]"}], ":=", "l"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Infer", " ", "the", " ", "alphabet", " ", "from", " ", "the", " ", 
     "transition", " ", "list"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetAlphabet", "[", "transitions_", "]"}], ":=", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"transitions", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<InputSymbol\>\""}], "]"}], "]"}], "]"}], 
        "]"}], ",", "\[Epsilon]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Infer", " ", "the", " ", "states", " ", "from", " ", "the", " ", 
     "transition", " ", "list"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetStates", "[", "transitions_", "]"}], ":=", 
     RowBox[{"Sort", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Cases", "[", 
         RowBox[{"transitions", ",", 
          RowBox[{
           RowBox[{"KeyValuePattern", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<Parent\>\"", "\[Rule]", "p_"}], ",", 
              RowBox[{"\"\<Node\>\"", "\[Rule]", "n_"}]}], "}"}], "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{"p", ",", "n"}], "}"}]}]}], "]"}], "]"}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Get", " ", "the", " ", "states", " ", "reachable", " ", "from", " ", 
     "the", " ", "current", " ", "states", " ", "list"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Explore", "[", 
      RowBox[{"transitions_", ",", "states_"}], "]"}], ":=", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Transition", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"SafeSort", "[", "states", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"SafeSort", "[", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"NFAIterate", "[", 
             RowBox[{"transitions", ",", "states", ",", "#", ",", 
              RowBox[{"\"\<Trace\>\"", "\[Rule]", "False"}]}], "]"}], "]"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", "#", "}"}]}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
       RowBox[{"GetAlphabet", "[", "transitions", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Explore", " ", "one", " ", "step", " ", "down", " ", "each", " ", 
     "branch", " ", "of", " ", "the", " ", "computation", " ", "and", " ", 
     "append", " ", "it", " ", "to", " ", "the", " ", "explored", " ", 
     "branches", " ", "list"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"StepDown", "[", 
      RowBox[{"transitions_", ",", "branches_"}], "]"}], ":=", 
     RowBox[{"DeleteDuplicates", "[", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{"branches", ",", "\[IndentingNewLine]", 
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Explore", "[", "\[IndentingNewLine]", 
              RowBox[{"transitions", ",", "\[IndentingNewLine]", 
               RowBox[{"#", "[", "\"\<Node\>\"", "]"}]}], 
              "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]",
             "branches"}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "1"}], 
       "]"}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NewStateNode", "[", 
      RowBox[{"node_", ",", "newStateRules_"}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<Parent\>\"", "\[Rule]", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"node", "[", "\"\<Parent\>\"", "]"}], ",", 
          "newStateRules"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<Node\>\"", "\[Rule]", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"node", "[", "\"\<Node\>\"", "]"}], ",", "newStateRules"}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InputSymbol\>\"", "\[Rule]", 
        RowBox[{"node", "[", "\"\<InputSymbol\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "|>"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NFAToDFA", "[", "machine_Association", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "protoDFA", ",", "start", ",", "protoDFAStates", ",", "newStateRules",
          ",", "newStates", ",", "containsAccept", ",", "newMachine", ",", 
         "newAccept", ",", "newStart", ",", "newTransitions", ",", 
         "newTransitionsCleanedUp", ",", "protoDFAExpressionNodes", ",", 
         "newStateExpressionsNodes"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"machine", "[", "\"\<Type\>\"", "]"}], " ", "=!=", " ", 
           "\"\<NFA\>\""}], ",", 
          RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Explore", " ", "all", " ", "paths", " ", "until", " ", "there", " ",
           "is", " ", "no", " ", "unexplored", " ", "transition"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"start", " ", "=", " ", "\[IndentingNewLine]", 
         RowBox[{"FixedPoint", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"DeleteDuplicates", "[", "\[IndentingNewLine]", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{"#", ",", "\[IndentingNewLine]", 
               RowBox[{"NFANondetNodes", "[", 
                RowBox[{
                 RowBox[{"machine", "[", "\"\<Transitions\>\"", "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}]}], 
                "]"}]}], "]"}], "\[IndentingNewLine]", "]"}], "&"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"<|", 
             RowBox[{"\"\<Node\>\"", "\[Rule]", 
              RowBox[{"machine", "[", "\"\<StartState\>\"", "]"}]}], "|>"}], 
            "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Make", " ", "a", " ", "DFA", " ", "by", " ", "exploring", " ", 
          "all", " ", "possible", " ", "paths", " ", "in", " ", "the", " ", 
          "NFA"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"protoDFA", " ", "=", " ", 
         RowBox[{"FixedPoint", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StepDown", "[", 
             RowBox[{
              RowBox[{"machine", "[", "\"\<Transitions\>\"", "]"}], ",", 
              "#"}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"<|", 
             RowBox[{"\"\<Node\>\"", "\[Rule]", 
              RowBox[{"start", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}]}], "|>"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"protoDFAStates", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Drop", "[", 
              RowBox[{"protoDFA", ",", "1"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "\"\<Parent\>\""}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Drop", "[", 
              RowBox[{"protoDFA", ",", "1"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}]}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Match", " ", "old", " ", "NFA", " ", "parameters", " ", "to", " ", 
          "the", " ", "new", " ", "DFA"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"newStateRules", " ", "=", " ", 
         RowBox[{"Thread", "[", 
          RowBox[{"protoDFAStates", "\[Rule]", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "protoDFAStates", "]"}], "]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"newStates", " ", "=", 
         RowBox[{"newStateRules", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"containsAccept", " ", "=", " ", 
         RowBox[{"Position", "[", 
          RowBox[{"protoDFAStates", ",", 
           RowBox[{"s_", "/;", 
            RowBox[{"ContainsStateQ", "[", 
             RowBox[{"s", ",", 
              RowBox[{"machine", "[", "\"\<AcceptStates\>\"", "]"}]}], 
             "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"newAccept", " ", "=", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"newStates", ",", "containsAccept"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newStart", " ", "=", " ", 
         RowBox[{"Replace", "[", 
          RowBox[{
           RowBox[{"First", "[", "protoDFAStates", "]"}], ",", 
           "newStateRules"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"newTransitions", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"NewStateNode", "[", 
             RowBox[{"#", ",", "newStateRules"}], "]"}], "&"}], ",", 
           RowBox[{"Drop", "[", 
            RowBox[{"protoDFA", ",", "1"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newTransitionsCleanedUp", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{"newTransitions", ",", 
            RowBox[{"t_", "/;", " ", 
             RowBox[{"JunkStateQ", "[", 
              RowBox[{"newTransitions", ",", "newStart", ",", 
               RowBox[{"t", "[", "\"\<Node\>\"", "]"}]}], "]"}]}]}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"protoDFAExpressionNodes", " ", "=", " ", 
         RowBox[{"Concatenate", "[", "\[IndentingNewLine]", 
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Cases", "[", 
                RowBox[{"protoDFAStates", ",", 
                 RowBox[{"s_", "/;", 
                  RowBox[{"ContainsStateQ", "[", 
                   RowBox[{"s", ",", 
                    RowBox[{"First", "[", "#", "]"}]}], "]"}]}]}], "]"}], 
               "\[Rule]", 
               RowBox[{"Last", "[", "#", "]"}]}], "]"}], "&"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"machine", "[", "\"\<StateExpressions\>\"", "]"}]}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "protoDFAExpressionNodes", "]"}], 
           "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{"newStateExpressionsNodes", " ", "=", " ", 
           RowBox[{"MapAt", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Replace", "[", 
               RowBox[{"#", ",", "newStateRules"}], "]"}], "&"}], ",", 
             "protoDFAExpressionNodes", ",", 
             RowBox[{"{", 
              RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"newStateExpressionsNodes", " ", "=", " ", 
           RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"newMachine", " ", "=", " ", 
         RowBox[{"<|", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<Name\>\"", "\[Rule]", 
            RowBox[{"machine", "[", "\"\<Name\>\"", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<DFA\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
           "\"\<Transitions\>\"", "\[Rule]", "newTransitionsCleanedUp"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"\"\<StartState\>\"", "\[Rule]", "newStart"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<AcceptStates\>\"", "\[Rule]", "newAccept"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
           "\"\<StateExpressions\>\"", "\[Rule]", 
            "newStateExpressionsNodes"}]}], "\[IndentingNewLine]", "|>"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "newMachine", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.748738116522354*^9, 3.7487381169129496`*^9}, {
   3.748738158246546*^9, 3.7487382802511435`*^9}, {3.7487385894166284`*^9, 
   3.7487386169375763`*^9}, {3.748738680548212*^9, 3.748738682590212*^9}, {
   3.7487387313849397`*^9, 3.748738735385742*^9}, {3.748738769293524*^9, 
   3.7487387933746843`*^9}, {3.748738834312461*^9, 3.7487388501955876`*^9}, {
   3.74873910447606*^9, 3.7487391139458637`*^9}, {3.7487395671939325`*^9, 
   3.7487395678504243`*^9}, {3.7487399301793365`*^9, 
   3.7487400405796556`*^9}, {3.748778288431039*^9, 3.74877829725898*^9}, {
   3.748778336607294*^9, 3.748778346753574*^9}, {3.7487785536527443`*^9, 
   3.7487785656020393`*^9}, {3.748785833642488*^9, 3.748785833808627*^9}, {
   3.7487859100429697`*^9, 3.748785916181673*^9}, {3.748786505715897*^9, 
   3.748786505889102*^9}, {3.748786729968886*^9, 3.748786746499671*^9}, {
   3.748786912970744*^9, 3.748786960223692*^9}, {3.748787020551764*^9, 
   3.748787044188747*^9}, 3.7487872186123533`*^9, {3.748787419786417*^9, 
   3.748787431514227*^9}, {3.748787504666951*^9, 3.748787547671826*^9}, {
   3.74878766431117*^9, 3.748787680662057*^9}, {3.748787887520782*^9, 
   3.7487879249258432`*^9}, {3.748800292059382*^9, 3.748800301736413*^9}, {
   3.748800474346759*^9, 3.7488005101594152`*^9}, {3.74880060174504*^9, 
   3.7488006221840773`*^9}, {3.74880072485863*^9, 3.748800725441907*^9}, {
   3.74880075934431*^9, 3.7488008884978313`*^9}, {3.748800929965019*^9, 
   3.7488009310692883`*^9}, {3.74880099766628*^9, 3.748801043554268*^9}, 
   3.74881915174897*^9, 3.748819560915099*^9, {3.748875904270234*^9, 
   3.748875917410491*^9}, 3.7488760544994373`*^9, {3.748876104117798*^9, 
   3.748876107310285*^9}, {3.7488763188209*^9, 3.748876319090781*^9}, {
   3.748876352807436*^9, 3.7488763610884438`*^9}, {3.748876427632503*^9, 
   3.74887644305375*^9}, {3.7488767113568153`*^9, 3.7488767115476933`*^9}, {
   3.7488771269569473`*^9, 3.7488771388240423`*^9}, {3.748877175832747*^9, 
   3.7488771839931726`*^9}, 3.7488778401039343`*^9, {3.7488779312394753`*^9, 
   3.748877931346951*^9}, {3.748878639644886*^9, 3.748878641819347*^9}, {
   3.748878699517582*^9, 3.748878700291568*^9}, {3.748878733498934*^9, 
   3.7488787640588713`*^9}, 3.748879000885603*^9, 3.748879127485878*^9, 
   3.7488793518544416`*^9, {3.7488794386611223`*^9, 3.7488794399886427`*^9}, {
   3.748879574707954*^9, 3.7488795793609657`*^9}, {3.7488921119514236`*^9, 
   3.7488921221033173`*^9}, {3.7502581600826883`*^9, 
   3.7502582184878197`*^9}, {3.750258347344426*^9, 3.750258457650097*^9}, {
   3.750258588423644*^9, 3.750258608860096*^9}, {3.750258861819542*^9, 
   3.750258888330533*^9}, {3.750260101925166*^9, 3.750260116608245*^9}, {
   3.750260221820777*^9, 3.750260240317586*^9}, {3.7502602769409513`*^9, 
   3.750260308042882*^9}, {3.750260600918014*^9, 3.7502606148493357`*^9}, {
   3.7502606463933363`*^9, 3.7502607050158052`*^9}, {3.75026078890306*^9, 
   3.7502608036382427`*^9}, {3.750260872272193*^9, 3.750260916170094*^9}, {
   3.750260962485422*^9, 3.7502610194214087`*^9}, {3.750261299679121*^9, 
   3.750261300047111*^9}, {3.7502616501646*^9, 3.750261650977852*^9}, {
   3.750262300266654*^9, 3.7502623974920588`*^9}, {3.750262441013131*^9, 
   3.750262460331875*^9}, {3.750262583717654*^9, 3.7502626561775923`*^9}, {
   3.750266446011175*^9, 3.7502664486936817`*^9}, {3.7504203675709667`*^9, 
   3.750420393541206*^9}},
 CellLabel->
  "(Debug) In[39]:=",ExpressionUUID->"b7c7c195-cdf9-449c-857c-99e973ed93a0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Regular expressions", "Subchapter",
 CellChangeTimes->{{3.757707848639778*^9, 
  3.7577078522051353`*^9}},ExpressionUUID->"3b519190-0088-4cf5-bc8c-\
eba64cf01b88"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RegexUnion", "[", "args__", "]"}], ":=", 
   RowBox[{"NFAUnion", "[", "args", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegexConcatenation", "[", "args__", "]"}], ":=", 
   RowBox[{"NFAConcatention", "[", "args", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegexStar", "[", "machine_Association", "]"}], ":=", 
   RowBox[{"NFAStar", "[", "machine", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegexStar", "[", "c_String", "]"}], ":=", 
   RowBox[{"NFAStar", "[", 
    RowBox[{"Regex", "[", "c", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegexDagger", "[", "machine_Association", "]"}], ":=", 
   RowBox[{"NFAConcatention", "[", 
    RowBox[{"machine", ",", 
     RowBox[{"NFAStar", "[", "machine", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegexDagger", "[", "c_String", "]"}], ":=", 
   RowBox[{"NFAConcatention", "[", 
    RowBox[{
     RowBox[{"Regex", "[", "c", "]"}], ",", 
     RowBox[{"NFAStar", "[", 
      RowBox[{"Regex", "[", "c", "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.748777933298731*^9, 3.7487779371938334`*^9}, {
   3.748777969531754*^9, 3.748777985636819*^9}, {3.748778016512574*^9, 
   3.748778035290359*^9}, {3.7487883155664873`*^9, 3.748788355111487*^9}, {
   3.7488021749658833`*^9, 3.748802181448103*^9}, {3.748802220353901*^9, 
   3.748802263000498*^9}, {3.748802664752873*^9, 3.748802724474334*^9}, {
   3.7488028835151043`*^9, 3.748802893769829*^9}, {3.748822409064942*^9, 
   3.748822461250548*^9}, 3.748822615571062*^9, {3.7488815924639797`*^9, 
   3.748881618069347*^9}, {3.748894225641362*^9, 3.7488942260451813`*^9}, {
   3.7502646637720547`*^9, 3.750264664122982*^9}, {3.750336547211566*^9, 
   3.750336558039886*^9}, {3.750339686428809*^9, 3.750339686668764*^9}, {
   3.757707867112628*^9, 3.75770786729426*^9}},
 CellLabel->
  "(Debug) In[51]:=",ExpressionUUID->"415452a1-d59a-4d74-9820-866b75e2c230"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Regex", "[", 
    RowBox[{"c_String", "/;", 
     RowBox[{
      RowBox[{"StringLength", "[", "c", "]"}], "\[Equal]", "1"}]}], "]"}], ":=", 
   RowBox[{"NFA", "[", 
    RowBox[{"c", ",", 
     RowBox[{"{", 
      RowBox[{"Transition", "[", 
       RowBox[{"0", ",", "1", ",", 
        RowBox[{"{", "c", "}"}]}], "]"}], "}"}], ",", "0", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Regex", "[", 
    RowBox[{
     RowBox[{"c_String", "/;", 
      RowBox[{
       RowBox[{"StringLength", "[", "c", "]"}], "\[Equal]", "1"}]}], ",", 
     "stateExpr_"}], "]"}], ":=", 
   RowBox[{"NFA", "[", 
    RowBox[{"c", ",", 
     RowBox[{"{", 
      RowBox[{"Transition", "[", 
       RowBox[{"0", ",", "1", ",", 
        RowBox[{"{", "c", "}"}]}], "]"}], "}"}], ",", "0", ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", "\[Rule]", "stateExpr"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Regex", "[", 
    RowBox[{
     RowBox[{"s_String", "/;", 
      RowBox[{
       RowBox[{"StringLength", "[", "s", "]"}], ">", "1"}]}], ",", 
     RowBox[{"tokenRecognize_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "m", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", " ", "=", 
       RowBox[{"Apply", "[", 
        RowBox[{"NFAConcatention", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"Regex", ",", 
           RowBox[{"Characters", "[", "s", "]"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"tokenRecognize", "\[NotEqual]", " ", "\"\<\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", "\"\<StateExpressions\>\"", "]"}], " ", "=", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"m", "[", "\"\<AcceptStates\>\"", "]"}], "\[Rule]", 
            "tokenRecognize"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "m", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Regex", "[", 
    RowBox[{"r_Association", ",", "tokenRecognize_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", " ", "=", " ", "r"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"m", "[", "\"\<StateExpressions\>\"", "]"}], " ", "=", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<AcceptStates\>\"", "]"}], "\[Rule]", 
         "tokenRecognize"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "m", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.748740312676521*^9, 3.748740313645201*^9}, {
  3.7487403479479637`*^9, 3.748740397018611*^9}, {3.748743469717832*^9, 
  3.7487435934236317`*^9}, {3.7487436740558963`*^9, 3.748743681369012*^9}, {
  3.750336869429418*^9, 3.750336938835622*^9}, {3.750337329699889*^9, 
  3.750337380362454*^9}, {3.750340240062293*^9, 3.750340283654842*^9}, {
  3.75046574035165*^9, 3.750465753009005*^9}, {3.750531774957251*^9, 
  3.750531785197893*^9}, {3.750531895605538*^9, 3.7505319893143463`*^9}, {
  3.750532070050654*^9, 3.750532085952318*^9}, {3.750532550372366*^9, 
  3.750532553571492*^9}},
 CellLabel->
  "(Debug) In[57]:=",ExpressionUUID->"ecb51c45-66ee-4b33-a5df-86b968dffa26"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RegexAlphabet", "[", "alphabet_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "input", ",", "name", ",", "transitions", ",", "acceptStates", ",", 
        "newMachine"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"input", " ", "=", " ", 
        RowBox[{"Characters", "[", "alphabet", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"newMachine", " ", "=", " ", 
        RowBox[{"<|", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<Name\>\"", "\[Rule]", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"Riffle", "[", 
             RowBox[{"input", ",", "\"\<\[Union]\>\""}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<NFA\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<Transitions\>\"", "\[Rule]", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Transition", "[", 
               RowBox[{"0", ",", "#", ",", 
                RowBox[{"{", 
                 RowBox[{"input", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], "}"}]}], "]"}], "&"}], ",", 
             
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", "input", "]"}], "]"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<StartState\>\"", "\[Rule]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<AcceptStates\>\"", "\[Rule]", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "input", "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<StateExpressions\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "|>"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "newMachine", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegexAlphabetLowercase", "[", "]"}], ":=", 
   RowBox[{"RegexAlphabet", "[", 
    RowBox[{"StringJoin", "@", 
     RowBox[{"Alphabet", "[", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegexAlphabetUppercase", "[", "]"}], ":=", 
   RowBox[{"RegexAlphabet", "[", 
    RowBox[{"StringJoin", "@", 
     RowBox[{"ToUpperCase", "[", 
      RowBox[{"Alphabet", "[", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegexAlphabet", "[", "]"}], ":=", 
   RowBox[{"RegexAlphabet", "[", 
    RowBox[{"StringJoin", "@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Alphabet", "[", "]"}], ",", 
       RowBox[{"ToUpperCase", "[", 
        RowBox[{"Alphabet", "[", "]"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RegexDigits", "[", "]"}], ":=", 
    RowBox[{"RegexAlphabet", "[", 
     RowBox[{"StringJoin", "@", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "9"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"asciiChars", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\\t\>\"", ",", "\"\<\\n\>\"", ",", "\"\<\\f\>\"", ",", 
      "\"\<\\r\>\"", ",", "\"\< \>\"", ",", "\"\<!\>\"", ",", "\"\<#\>\"", 
      ",", "\"\<$\>\"", ",", "\"\<%\>\"", ",", "\"\<&\>\"", ",", "\"\<'\>\"", 
      ",", "\"\<(\>\"", ",", "\"\<)\>\"", ",", "\"\<*\>\"", ",", "\"\<+\>\"", 
      ",", "\"\<,\>\"", ",", "\"\<-\>\"", ",", "\"\<.\>\"", ",", "\"\</\>\"", 
      ",", "\"\<0\>\"", ",", "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\"", 
      ",", "\"\<4\>\"", ",", "\"\<5\>\"", ",", "\"\<6\>\"", ",", "\"\<7\>\"", 
      ",", "\"\<8\>\"", ",", "\"\<9\>\"", ",", "\"\<:\>\"", ",", "\"\<;\>\"", 
      ",", "\"\<<\>\"", ",", "\"\<=\>\"", ",", "\"\<>\>\"", ",", "\"\<?\>\"", 
      ",", "\"\<@\>\"", ",", "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\"", 
      ",", "\"\<D\>\"", ",", "\"\<E\>\"", ",", "\"\<F\>\"", ",", "\"\<G\>\"", 
      ",", "\"\<H\>\"", ",", "\"\<I\>\"", ",", "\"\<J\>\"", ",", "\"\<K\>\"", 
      ",", "\"\<L\>\"", ",", "\"\<M\>\"", ",", "\"\<N\>\"", ",", "\"\<O\>\"", 
      ",", "\"\<P\>\"", ",", "\"\<Q\>\"", ",", "\"\<R\>\"", ",", "\"\<S\>\"", 
      ",", "\"\<T\>\"", ",", "\"\<U\>\"", ",", "\"\<V\>\"", ",", "\"\<W\>\"", 
      ",", "\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\"", ",", "\"\<[\>\"", 
      ",", "\"\<\\\\\>\"", ",", "\"\<]\>\"", ",", "\"\<^\>\"", ",", 
      "\"\<_\>\"", ",", "\"\<`\>\"", ",", "\"\<a\>\"", ",", "\"\<b\>\"", ",", 
      "\"\<c\>\"", ",", "\"\<d\>\"", ",", "\"\<e\>\"", ",", "\"\<f\>\"", ",", 
      "\"\<g\>\"", ",", "\"\<h\>\"", ",", "\"\<i\>\"", ",", "\"\<j\>\"", ",", 
      "\"\<k\>\"", ",", "\"\<l\>\"", ",", "\"\<m\>\"", ",", "\"\<n\>\"", ",", 
      "\"\<o\>\"", ",", "\"\<p\>\"", ",", "\"\<q\>\"", ",", "\"\<r\>\"", ",", 
      "\"\<s\>\"", ",", "\"\<t\>\"", ",", "\"\<u\>\"", ",", "\"\<v\>\"", ",", 
      "\"\<w\>\"", ",", "\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\"", ",", 
      "\"\<{\>\"", ",", "\"\<|\>\"", ",", "\"\<}\>\"", ",", "\"\<~\>\"", ",", 
      "\"\<\.7f\>\""}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegexASCIIChars", "[", "]"}], ":=", 
   RowBox[{"RegexAlphabet", "[", 
    RowBox[{"StringJoin", "@", "asciiChars"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.750264626530047*^9, 3.7502646347630997`*^9}, {
  3.750264666135603*^9, 3.750264696357594*^9}, {3.7502647265015993`*^9, 
  3.750264778323572*^9}, {3.750336644015066*^9, 3.750336683110643*^9}, {
  3.750458653932007*^9, 3.750458669102903*^9}, {3.750504916952344*^9, 
  3.7505049209709597`*^9}, {3.7505057133816824`*^9, 3.7505058519705877`*^9}, {
  3.750506533506524*^9, 3.750506536475669*^9}, {3.7505067470086*^9, 
  3.75050675229692*^9}, {3.7505067838361444`*^9, 3.7505067970359073`*^9}, {
  3.7505071411031*^9, 3.7505071411968527`*^9}, {3.750530965582837*^9, 
  3.750531022527288*^9}},
 CellLabel->
  "(Debug) In[61]:=",ExpressionUUID->"f34515cd-4153-4c7f-acc6-0f2fe37ad4bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RegexCompute", "[", 
    RowBox[{"machine_", ",", "input_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"trace", ",", "result", ",", "recognizedTokens"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"machine", "[", "\"\<Type\>\"", "]"}], "\[Equal]", " ", 
         "\"\<NFA\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"trace", ",", "result"}], "}"}], " ", "=", " ", 
          RowBox[{"NFACompute", "[", 
           RowBox[{"machine", ",", 
            RowBox[{"Characters", "[", "input", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"recognizedTokens", " ", "=", " ", "\[IndentingNewLine]", 
          RowBox[{"Cases", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "trace", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"node_", " ", "/;", " ", 
               RowBox[{"ContainsQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"machine", "[", "\"\<StateExpressions\>\"", "]"}], 
                  "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "node"}], 
                "]"}]}], ")"}], "\[RuleDelayed]", " ", 
             RowBox[{"Replace", "[", 
              RowBox[{"node", ",", 
               RowBox[{"machine", "[", "\"\<StateExpressions\>\"", "]"}]}], 
              "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"trace", ",", "result"}], "}"}], " ", "=", 
          RowBox[{"DFACompute", "[", 
           RowBox[{"machine", ",", 
            RowBox[{"Characters", "[", "input", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"recognizedTokens", " ", "=", " ", "\[IndentingNewLine]", 
          RowBox[{"Cases", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Last", "[", "trace", "]"}], "[", "\"\<Node\>\"", "]"}],
              "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"node_", " ", "/;", " ", 
               RowBox[{"ContainsQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"machine", "[", "\"\<StateExpressions\>\"", "]"}], 
                  "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "node"}], 
                "]"}]}], ")"}], "\[RuleDelayed]", " ", 
             RowBox[{"Replace", "[", 
              RowBox[{"node", ",", 
               RowBox[{"machine", "[", "\"\<StateExpressions\>\"", "]"}]}], 
              "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"trace", ",", "result", ",", "recognizedTokens"}], "}"}], 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.750339694319202*^9, 3.750339761565926*^9}, {
  3.750457644064279*^9, 3.75045764564149*^9}, {3.7504584883737307`*^9, 
  3.750458519332707*^9}, {3.750531449449689*^9, 3.750531460840279*^9}, {
  3.7505315512323437`*^9, 3.750531579998457*^9}, {3.750532270345401*^9, 
  3.750532273742708*^9}},
 CellLabel->
  "(Debug) In[68]:=",ExpressionUUID->"414991df-16ec-4376-92c4-3229bd4568cc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Lexer", "Subchapter",
 CellChangeTimes->{{3.757707928174493*^9, 
  3.7577079289916077`*^9}},ExpressionUUID->"d07c23e9-1d59-4e51-ac14-\
31d0660d35e2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Token", "[", 
    RowBox[{"symbol_String", ",", "name_String"}], "]"}], ":=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Class\>\"", "\[Rule]", "\"\<Token\>\""}], ",", 
     RowBox[{"\"\<Symbol\>\"", "\[Rule]", "symbol"}], ",", 
     RowBox[{"\"\<Name\>\"", "\[Rule]", "name"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CreateTokens", "[", "list_", "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Token", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ",", "list"}], 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7500868562980757`*^9, 3.750086917600198*^9}, {
  3.759085932691271*^9, 3.759085933014975*^9}},
 CellLabel->
  "(Debug) In[69]:=",ExpressionUUID->"d141a225-5d1a-48c0-9caa-0ee703961ea8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TokenKeyword", "[", 
    RowBox[{"symbol_String", ",", "name_String"}], "]"}], ":=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Class\>\"", "\[Rule]", "\"\<TokenKeyword\>\""}], ",", 
     RowBox[{"\"\<Symbol\>\"", "\[Rule]", "symbol"}], ",", 
     RowBox[{"\"\<Name\>\"", "\[Rule]", "name"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CreateTokenKeywords", "[", "list_", "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TokenKeyword", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ",", "list"}], 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7500869240403347`*^9, 3.750086928616561*^9}, {
  3.759085938057332*^9, 3.759085938358575*^9}},
 CellLabel->
  "(Debug) In[71]:=",ExpressionUUID->"dd1a2e4b-3d9f-46b9-b5c8-8985b121e954"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetToken", "[", 
     RowBox[{"input_", ",", "symbolTokens_", ",", "keywordTokens_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "symbolAccept", ",", "symbolResult", ",", "keywordAccept", ",", 
        "keywordResult"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"symbolAccept", ",", "symbolResult"}], "}"}], " ", "=", " ", 
        
        RowBox[{"Rest", "[", 
         RowBox[{"RegexCompute", "[", 
          RowBox[{"symbolTokens", ",", "input"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"keywordAccept", ",", "keywordResult"}], "}"}], " ", "=", 
        " ", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Rest", "[", 
          RowBox[{"RegexCompute", "[", 
           RowBox[{"keywordTokens", ",", "input"}], "]"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"keywordAccept", ",", 
         RowBox[{"Return", "[", 
          RowBox[{"First", "[", "keywordResult", "]"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"symbolAccept", ",", 
         RowBox[{"Return", "[", 
          RowBox[{"First", "[", "symbolResult", "]"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "\"\<Nothing\>\"", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SafeStringTake", "[", 
    RowBox[{"string_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"StringTake", "[", 
    RowBox[{"string", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"n", ",", 
       RowBox[{"StringLength", "[", "string", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SafeStringTake", "[", 
     RowBox[{"string_", ",", 
      RowBox[{"{", 
       RowBox[{"m_", ",", "n_"}], "}"}]}], "]"}], ":=", 
    RowBox[{"StringTake", "[", 
     RowBox[{"string", ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"Min", "[", 
         RowBox[{"n", ",", 
          RowBox[{"StringLength", "[", "string", "]"}]}], "]"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetNextToken", "[", 
     RowBox[{"program_", ",", "symbolTokens_", ",", "keywordTokens_"}], "]"}],
     ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tokenizerResult", ",", "nextToken"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tokenizerResult", " ", "=", " ", 
        RowBox[{"NestWhileList", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "+", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"GetToken", "[", 
              RowBox[{
               RowBox[{"SafeStringTake", "[", 
                RowBox[{"program", ",", 
                 RowBox[{
                  RowBox[{"First", "[", "#", "]"}], "+", "1"}]}], "]"}], ",", 
               "symbolTokens", ",", "keywordTokens"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "&"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"0", ",", "\[IndentingNewLine]", "None"}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "=!=", " ", 
               "\"\<Nothing\>\""}], ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"First", "[", "#", "]"}], "\[LessEqual]", 
               RowBox[{"StringLength", "[", "program", "]"}]}], ")"}]}], 
            ")"}], "&"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"nextToken", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "tokenizerResult", "]"}], ">", "2"}], ",", 
          RowBox[{"tokenizerResult", "[", 
           RowBox[{"[", 
            RowBox[{"-", "2"}], "]"}], "]"}], ",", 
          RowBox[{"Last", "[", "tokenizerResult", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "nextToken", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SafeMod", "[", 
    RowBox[{"m_", ",", "0"}], "]"}], ":=", "m"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SafeMod", "[", 
    RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Mod", "[", 
    RowBox[{"m", ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LinePosition", "[", 
    RowBox[{"pos_", ",", "lineBreaks_"}], "]"}], ":=", 
   RowBox[{"SafeMod", "[", 
    RowBox[{"pos", ",", 
     RowBox[{"Last", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"lineBreaks", "+", "1"}], ",", " ", "0"}], "]"}], ",", 
        RowBox[{
         RowBox[{"#", "\[LessEqual]", "pos"}], "&"}]}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ColumnPosition", "[", 
     RowBox[{"pos_", ",", "lineBreaks_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"Ordering", "[", 
         RowBox[{"Prepend", "[", 
          RowBox[{"lineBreaks", ",", " ", "pos"}], "]"}], "]"}], ",", "1"}], 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tokenize", "[", 
    RowBox[{"program_", ",", "symbolTokens_", ",", "keywordTokens_"}], "]"}], 
   ":=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "length", ",", "type", ",", "formattedTokens", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"cursor", " ", "=", " ", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"tokenList", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"omitTokens", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<Whitespace\>\"", ",", "\"\<LineComment\>\""}], 
         "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"cursor", "<", 
         RowBox[{"StringLength", "[", "program", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"length", ",", "type"}], "}"}], " ", "=", " ", 
          RowBox[{"GetNextToken", "[", 
           RowBox[{
            RowBox[{"StringDrop", "[", 
             RowBox[{"program", ",", "cursor"}], "]"}], ",", "symbolTokens", 
            ",", "keywordTokens"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"omitTokens", ",", "type"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"tokenList", ",", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<Type\>\"", "\[Rule]", "type"}], ",", 
                RowBox[{"\"\<Value\>\"", "\[Rule]", 
                 RowBox[{"SafeStringTake", "[", 
                  RowBox[{"program", ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cursor", ",", 
                    RowBox[{"cursor", "+", "length", "-", "1"}]}], "}"}], "+",
                     "1"}]}], "]"}]}]}], "|>"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"cursor", "+=", "length"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"formattedTokens", " ", "=", " ", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", "\"\<Type\>\"", "]"}], " ", "=!=", 
             RowBox[{"#", "[", "\"\<Value\>\"", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"<|", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\"\<Type\>\"", "->", 
               RowBox[{"#", "[", "\"\<Type\>\"", "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<Value\>\"", "\[Rule]", 
               RowBox[{"#", "[", "\"\<Value\>\"", "]"}]}]}], 
             "\[IndentingNewLine]", "|>"}], ",", "\[IndentingNewLine]", 
            RowBox[{"<|", "\[IndentingNewLine]", 
             RowBox[{"\"\<Type\>\"", "->", 
              RowBox[{"#", "[", "\"\<Type\>\"", "]"}]}], 
             "\[IndentingNewLine]", "|>"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", "&"}], ",", "\[IndentingNewLine]", 
         "tokenList"}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "formattedTokens", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7505467952931557`*^9, 3.750546921093223*^9}, {
   3.750546955860371*^9, 3.750546956268186*^9}, {3.75054702722803*^9, 
   3.750547157418901*^9}, {3.750547385123595*^9, 3.750547389067976*^9}, {
   3.7505486456200666`*^9, 3.7505487233998413`*^9}, {3.750614439670219*^9, 
   3.7506144944474382`*^9}, 3.750614612478499*^9, 3.750614674239463*^9, {
   3.750614725493066*^9, 3.750614777471882*^9}, {3.750614812101779*^9, 
   3.7506148537990294`*^9}, {3.750614901115054*^9, 3.7506149036731863`*^9}, {
   3.75061495486823*^9, 3.7506149573642397`*^9}, 3.7506150298739557`*^9, {
   3.750615118034342*^9, 3.7506151500911837`*^9}, {3.750616327714858*^9, 
   3.750616381609274*^9}, {3.750616462525311*^9, 3.750616462932968*^9}, {
   3.750689611104656*^9, 3.7506896131770763`*^9}, {3.750689782032683*^9, 
   3.750689904839724*^9}, {3.750689949718709*^9, 3.7506899850806103`*^9}, {
   3.750690035354953*^9, 3.7506900600413847`*^9}, {3.750690248383431*^9, 
   3.7506902485445127`*^9}, {3.7506922266888533`*^9, 3.750692265015525*^9}, {
   3.750692297732071*^9, 3.750692343698224*^9}, {3.7506924282715883`*^9, 
   3.750692455826165*^9}, {3.750692609973333*^9, 3.750692688737253*^9}, 
   3.750692993505443*^9, {3.750693767600814*^9, 3.7506939070694313`*^9}, {
   3.750693957222479*^9, 3.750694072526411*^9}, {3.75719022484966*^9, 
   3.7571902954715023`*^9}, {3.7577079574640083`*^9, 3.75770798407833*^9}, {
   3.7577083211942244`*^9, 3.757708348091176*^9}, {3.7590863993871202`*^9, 
   3.7590864787741613`*^9}, 3.759086533002945*^9, {3.759086586506453*^9, 
   3.759086644949649*^9}},
 CellLabel->
  "(Debug) In[73]:=",ExpressionUUID->"33941b84-ca61-4ed5-848e-153c6f0dacbc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Parser", "Subchapter",
 CellChangeTimes->{{3.7577080324779577`*^9, 
  3.757708033312429*^9}},ExpressionUUID->"491b6222-dc01-403a-a304-\
3cbf3275f40d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Protect", "[", 
    RowBox[{"EmptyString", ",", "Term", ",", "NonTerm"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetArgument", "[", 
    RowBox[{"_", "[", "arg_", "]"}], "]"}], ":=", "arg"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Substitute", "[", 
     RowBox[{"l1_", ",", "l2_"}], "]"}], ":=", 
    RowBox[{"Join", "[", 
     RowBox[{"l1", ",", 
      RowBox[{"Drop", "[", 
       RowBox[{"l2", ",", 
        RowBox[{"Length", "[", "l1", "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TermMatchQ", "[", 
    RowBox[{"input_", ",", 
     RowBox[{"{", "}"}]}], "]"}], ":=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TermMatchQ", "[", 
    RowBox[{"input_", ",", "terms_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{"input", ",", 
        RowBox[{"Length", "[", "terms", "]"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "\"\<Type\>\""}], "]"}], "]"}], " ", "\[Equal]", 
     " ", 
     RowBox[{"Map", "[", 
      RowBox[{"GetArgument", ",", "terms"}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenerateTransition", "[", 
     RowBox[{"rule_", ",", "stateId_", ",", "lastId_"}], "]"}], ":=", 
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rule", "[", "\"\<From\>\"", "]"}], ",", "stateId"}], "}"}],
         "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"#1", ",", 
          RowBox[{"lastId", "+", 
           RowBox[{"First", "[", "#2", "]"}]}]}], "}"}]}], "&"}], ",", 
      RowBox[{"rule", "[", "\"\<To\>\"", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MatchTerminalsWithRule", "[", 
     RowBox[{"stateId_", ",", "lastId_", ",", "input_", ",", "rule_"}], "]"}],
     ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "terms", ",", "transition", ",", "rest", ",", "cuttedInput", ",", 
        "currentState", ",", "lastIndex", ",", "matchTransitions"}], "}"}], 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"currentState", " ", "=", " ", 
        RowBox[{"rule", "[", "\"\<From\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"rule", "[", "\"\<To\>\"", "]"}], "===", "EmptyString"}], 
         ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"currentState", ",", "stateId"}], "}"}], "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"EmptyString", ",", 
                RowBox[{"lastId", "+", "1"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}], ",", "input", ",", 
            RowBox[{"lastId", "+", "1"}]}], "}"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"transition", " ", "=", " ", 
        RowBox[{"GenerateTransition", "[", 
         RowBox[{"rule", ",", "stateId", ",", "lastId"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lastIndex", " ", "=", " ", 
        RowBox[{"Last", "@", 
         RowBox[{"Last", "@", 
          RowBox[{"Last", "@", "transition"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"terms", " ", "=", " ", 
        RowBox[{"TakeWhile", "[", 
         RowBox[{
          RowBox[{"rule", "[", "\"\<To\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "#", "]"}], "=!=", "NonTerm"}], "&"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rest", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"transition", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"Length", "[", "terms", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "terms", "]"}], ">", 
          RowBox[{"Length", "[", "input", "]"}]}], ",", 
         RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TermMatchQ", "[", 
          RowBox[{"input", ",", "terms"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{
          RowBox[{"matchTransitions", " ", "=", 
           RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"KeyExistsQ", "[", 
                 RowBox[{"#1", ",", "\"\<Value\>\""}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"rule", "[", "\"\<From\>\"", "]"}], ",", 
                   "stateId"}], "}"}], "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Term", "[", 
                    RowBox[{"#1", "[", "\"\<Type\>\"", "]"}], "]"}], ",", 
                   RowBox[{"lastId", "+", 
                    RowBox[{"First", "[", "#2", "]"}]}], ",", 
                   RowBox[{"#1", "[", "\"\<Value\>\"", "]"}]}], "}"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"rule", "[", "\"\<From\>\"", "]"}], ",", 
                   "stateId"}], "}"}], "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Term", "[", 
                    RowBox[{"#1", "[", "\"\<Type\>\"", "]"}], "]"}], ",", 
                   RowBox[{"lastId", "+", 
                    RowBox[{"First", "[", "#2", "]"}]}]}], "}"}]}]}], 
               "\[IndentingNewLine]", "]"}], "&"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Take", "[", 
              RowBox[{"input", ",", 
               RowBox[{"Length", "[", "terms", "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"transition", " ", "=", " ", 
           RowBox[{"Substitute", "[", 
            RowBox[{"matchTransitions", ",", "transition"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"cuttedInput", " ", "=", " ", 
           RowBox[{"Drop", "[", 
            RowBox[{"input", ",", 
             RowBox[{"Length", "[", "terms", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
            "transition", ",", "rest", ",", "cuttedInput", ",", "lastIndex"}],
             "}"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MapUntil", "[", 
     RowBox[{"f_", ",", "expr_", ",", "test_"}], "]"}], ":=", 
    RowBox[{"Drop", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"NestWhileList", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"test", "[", 
                RowBox[{"f", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], "&&",
               " ", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[NotEqual]", 
               "1"}]}], ")"}]}], "}"}], "&"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "expr", ",", "True"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "&"}]}], "\[IndentingNewLine]", 
        "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatchTerminals", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"state_", ",", "stateId_"}], "}"}], ",", "lastId_", ",", 
     "input_", ",", "grammar_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"possibleTransitions", ",", "matched"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"possibleTransitions", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"grammar", ",", 
         RowBox[{"KeyValuePattern", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<From\>\"", "\[Rule]", "state"}], "}"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matched", " ", "=", " ", 
       RowBox[{"Last", "[", 
        RowBox[{"MapUntil", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MatchTerminalsWithRule", "[", 
            RowBox[{"stateId", ",", "lastId", ",", "input", ",", "#"}], "]"}],
            "&"}], ",", "possibleTransitions", ",", 
          RowBox[{
           RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "matched", "]"}], ";"}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.757274783650526*^9, 3.757274820428228*^9}, {
   3.757274862544322*^9, 3.757275103606566*^9}, {3.7572751636565237`*^9, 
   3.757275164811874*^9}, {3.7572751964583693`*^9, 3.757275196915545*^9}, {
   3.757275248182845*^9, 3.757275305590396*^9}, {3.7572755185338383`*^9, 
   3.757275525223351*^9}, {3.757275562775797*^9, 3.757275570631586*^9}, 
   3.757276113821259*^9, {3.757276918159042*^9, 3.7572770037161493`*^9}, {
   3.75728418007928*^9, 3.7572842206198187`*^9}, {3.757287044508272*^9, 
   3.757287046411515*^9}, {3.7572872857087393`*^9, 3.757287300671541*^9}, {
   3.757287362543298*^9, 3.757287362659718*^9}, {3.7572874347766237`*^9, 
   3.7572874349241343`*^9}, {3.7572874783326197`*^9, 3.75728747843075*^9}, {
   3.7572875128295393`*^9, 3.757287518510971*^9}, {3.7572894865818453`*^9, 
   3.75728948864775*^9}, {3.757358932698401*^9, 3.757358952178666*^9}, {
   3.757358985741022*^9, 3.757358989712109*^9}, {3.757359643749208*^9, 
   3.7573596496516743`*^9}, {3.757359690226437*^9, 3.7573596984694967`*^9}, {
   3.7577015909094152`*^9, 3.757701632528507*^9}, {3.7577029124528008`*^9, 
   3.7577030244891577`*^9}, {3.757703073074065*^9, 3.757703075078184*^9}, {
   3.7577031093317966`*^9, 3.757703113940316*^9}, {3.757703245654786*^9, 
   3.757703245855764*^9}, {3.7577032941945972`*^9, 3.757703296627157*^9}, {
   3.757703411503927*^9, 3.7577034138585777`*^9}, {3.7577036175904703`*^9, 
   3.757703633547387*^9}, {3.757703760883068*^9, 3.757703830680175*^9}, {
   3.757704333388521*^9, 3.757704335579052*^9}, {3.757704448889593*^9, 
   3.757704449106048*^9}, {3.757704517873886*^9, 3.7577046238877153`*^9}, {
   3.7577047304257717`*^9, 3.7577047306601686`*^9}, {3.757706426428527*^9, 
   3.757706450360586*^9}, {3.757706490330243*^9, 3.757706490622726*^9}, {
   3.757709390136578*^9, 3.7577094288164988`*^9}, {3.7577094599477177`*^9, 
   3.757709468534696*^9}, {3.757709534401555*^9, 3.757709545184486*^9}, {
   3.757709605535029*^9, 3.757709682226736*^9}, {3.757709819069147*^9, 
   3.757709876650505*^9}, {3.75770995313941*^9, 3.7577099542666388`*^9}, {
   3.757710616283051*^9, 3.757710654877925*^9}, {3.7577112623004704`*^9, 
   3.757711262767686*^9}, {3.7590867185694103`*^9, 3.759086734516678*^9}, 
   3.75908701267911*^9},
 CellLabel->
  "(Debug) In[82]:=",ExpressionUUID->"48f5ec51-854c-4046-8362-e0b917d47448"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Parse", "[", 
     RowBox[{"input_", ",", "grammar_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pGrammar", ",", " ", "stack", ",", "transitions", ",", "next", ",", 
        "inputBuffer", ",", "lastId", ",", "parseTree", ",", "parseSymbol", 
        ",", "toStack"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pGrammar", " ", "=", " ", 
        RowBox[{"MapAt", "[", 
         RowBox[{"NonTerm", ",", "grammar", ",", 
          RowBox[{"{", 
           RowBox[{"All", ",", 
            RowBox[{"Key", "[", "\"\<From\>\"", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"stack", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"parseTree", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"lastId", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"inputBuffer", " ", "=", " ", "input"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"parseSymbol", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "pGrammar", "]"}], "[", "\"\<From\>\"", 
           "]"}], ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"inputBuffer", ",", "parseSymbol"}], "}"}], " ", "=!=", 
          " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "None"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"First", "[", "parseSymbol", "]"}], "]"}], " ", "===", 
             "NonTerm"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "transitions", ",", "next", ",", "inputBuffer", ",", 
                "lastId"}], "}"}], " ", "=", " ", 
              RowBox[{"MatchTerminals", "[", 
               RowBox[{
               "parseSymbol", ",", "lastId", ",", "inputBuffer", ",", 
                "pGrammar"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"parseTree", ",", "transitions"}], "]"}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"GetArgument", "[", 
                 RowBox[{"First", "[", "parseSymbol", "]"}], "]"}], " ", 
                "\[Equal]", " ", 
                RowBox[{
                 RowBox[{"First", "[", "inputBuffer", "]"}], "[", 
                 "\"\<Type\>\"", "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"inputBuffer", " ", "=", 
                 RowBox[{"Drop", "[", 
                  RowBox[{"inputBuffer", ",", "1"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"next", " ", "=", " ", 
                 RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "next", "]"}], ">", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Push", " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"parseSymbol", ",", "toStack"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"First", "[", "next", "]"}], ",", 
                RowBox[{"Rest", "[", "next", "]"}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"stack", " ", "=", " ", 
              RowBox[{"Join", "[", 
               RowBox[{"stack", ",", "toStack"}], "]"}]}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Pop", " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "stack", "]"}], " ", ">", " ", "0"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"parseSymbol", ",", "stack"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Last", "[", "stack", "]"}], ",", 
                   RowBox[{"Drop", "[", 
                    RowBox[{"stack", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "}"}]}], ";"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"parseSymbol", " ", "=", " ", "None"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"parseTree", ",", "1"}], "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParseTree", "[", 
    RowBox[{"input_", ",", "grammar_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"parseTree", ",", "startProduction"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"parseTree", " ", "=", " ", 
       RowBox[{"Parse", "[", 
        RowBox[{"input", ",", "grammar"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"startProduction", " ", "=", " ", 
       RowBox[{"First", "[", 
        RowBox[{"First", "[", "parseTree", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"TreePlot", "[", 
       RowBox[{"parseTree", ",", "Automatic", ",", "startProduction", ",", 
        RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.757287153826024*^9, 3.7572872216771708`*^9}, {
   3.757287634689281*^9, 3.7572876934867487`*^9}, {3.757287725455359*^9, 
   3.757287824962241*^9}, {3.7572878564582787`*^9, 3.757287879362458*^9}, {
   3.7572879118394012`*^9, 3.757288160008748*^9}, {3.757288349761772*^9, 
   3.757288351613283*^9}, {3.7572889289313383`*^9, 3.757289005745718*^9}, {
   3.757289165081707*^9, 3.757289166406535*^9}, {3.757289360893189*^9, 
   3.757289409590063*^9}, {3.757340091531893*^9, 3.7573400925674057`*^9}, {
   3.757340156334832*^9, 3.7573401565282784`*^9}, {3.757340515890152*^9, 
   3.757340526180696*^9}, {3.757340562484044*^9, 3.7573405975335827`*^9}, {
   3.757340933022827*^9, 3.757340933437621*^9}, {3.757340966854559*^9, 
   3.7573409700190067`*^9}, 3.757341013479683*^9, {3.757341133565576*^9, 
   3.757341133750214*^9}, {3.7573413629451227`*^9, 3.7573413752743187`*^9}, {
   3.757341421584483*^9, 3.757341423787003*^9}, {3.7573415600769033`*^9, 
   3.757341586136511*^9}, {3.757341624460498*^9, 3.757341624623155*^9}, 
   3.757341695002104*^9, {3.7573417542240133`*^9, 3.757341791794108*^9}, {
   3.757341964907411*^9, 3.757342100584084*^9}, {3.757342146356031*^9, 
   3.757342149031186*^9}, {3.7573422320844507`*^9, 3.757342233882634*^9}, {
   3.757342986668407*^9, 3.757342991181703*^9}, {3.757343021725061*^9, 
   3.7573430245026827`*^9}, {3.757348186509583*^9, 3.75734818726821*^9}, {
   3.757348432609365*^9, 3.757348438598989*^9}, {3.757348542730608*^9, 
   3.7573487161025267`*^9}, {3.757348807780157*^9, 3.757348807877275*^9}, {
   3.757348853901032*^9, 3.75734890920122*^9}, {3.757349127318986*^9, 
   3.7573491325688753`*^9}, {3.757349183127816*^9, 3.75734920603309*^9}, {
   3.757349279727099*^9, 3.757349320836172*^9}, {3.75735707187536*^9, 
   3.757357072643874*^9}, {3.757357112790221*^9, 3.757357193156868*^9}, 
   3.7573574231479273`*^9, {3.757359302539564*^9, 3.757359334814144*^9}, {
   3.757359366158173*^9, 3.757359383080202*^9}, {3.757359435585299*^9, 
   3.7573594511022797`*^9}, {3.757359492657642*^9, 3.757359600688477*^9}, {
   3.757359935887082*^9, 3.757359976604569*^9}, 3.757360016542276*^9, {
   3.75736006648175*^9, 3.757360068159026*^9}, {3.757701549727418*^9, 
   3.757701555250287*^9}, {3.7577037078609962`*^9, 3.757703708043736*^9}, {
   3.757705080342566*^9, 3.757705378744836*^9}, {3.7577054100903473`*^9, 
   3.757705486613831*^9}, {3.757706700406754*^9, 3.7577067250799437`*^9}, {
   3.757706774280291*^9, 3.757706881682398*^9}, {3.757706948416572*^9, 
   3.757706954048917*^9}, {3.75770700973498*^9, 3.757707010367838*^9}, 
   3.757708591061474*^9, 3.7577100591345367`*^9, {3.757711446222785*^9, 
   3.7577114490659313`*^9}, {3.757712040489437*^9, 3.757712047454317*^9}, {
   3.759086811192363*^9, 3.759086816240169*^9}, {3.759087082254992*^9, 
   3.759087084889018*^9}, {3.759087151559237*^9, 3.759087193896905*^9}},
 CellLabel->
  "(Debug) In[91]:=",ExpressionUUID->"2cf6f8d1-ea3f-4462-bbc9-ba4759efb938"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementation", "Chapter",
 CellChangeTimes->{{3.757707693055922*^9, 
  3.7577076948058662`*^9}},ExpressionUUID->"9764d62a-13d8-4273-861c-\
c2aab0ea6f24"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/tJ/1/DXD8OZG2OYidUmLKWDok6+v+j0w5pOcmTuwdzSy6Is9gx1xK7TGu5r
9QYR4lWN97+5qr921qZuwrt6JTqvvWfmml5LwtIOKOoYxxj1Rea0cmHsEUME
0dwMYWGoqQV7LffXdMKung+HdOdp/ubHtva0Crpkcg5IczsEr2rv881VvVWk
bvKmeqXOrDUGG/WV+bSW2eP+wzVUqgdcvXyX7Ptr6GRXDx9DBvz9Y1vsWwVx
SW2ot12DqiNzk77nkN82ckU7frypMtq+iDZKV6adMc5q5+xiUHUZbpKNhlNu
s1jS64p2P2I4RcPNRW1Quk5Dd4rWUv7qK8xvLcPe/QeuqVQ8uHqZu6YmMLO3
8LlSSe/N+V7G5QVtcPjwewpcJIZZ78qp1tGwV9hUXRRPWn1xDq1cxmJoJsnu
kIXkNVMJn3nKchv2Zb6H3HEwu/LSvB/GQCcZDcce0feXon7/NH3Pit+Yqdfi
Zco9OYkmipbMzbvPSK/V5DgN2clDQ3Bgz5DaKD1CSNQ+i79YLlOJ/Iv3Iyn9
W2u7857PAR4Z/373V2+cGo5gfwnNYb3+MiLG4apsjM+mjUz8ahlXCy3U6PYO
vid3ZHBBYxE20AlZQ8k/sk3706Mz/rQftJX8HLf3w8HWiZFShmZ9y1Js0Caw
tIOCOkatZjUOWoljlvy7CJpbrO3+Hj4HHhntuMuv3k40HLGfLPVlFrRx4MPv
r1PQ1WbxrrwaHZcbrltzdg2iusyNoEvGmVGdX8sVtPvxpmEtTHOTRW2UuE47
o/9uua6t9W01F+e0wkXqQ1nGtEMWhur3N+ZYaA9t0u98Xr8N3/+V52sG/9Bp
tWQTQd36GKQLS5+jVPZms9k1UEkfSv1ULnMn2NBAZO0ZiqNdJ9boG8ha3Vo5
31yuD6SYK5fhHnzLEA+y9jDU0Y5Oa+5bH+OtjH0W43nuSSY1UdBybsG9SSXi
qJRK8q89cajSkZUJhlKrryxk+LxYvW9YasOXzcuZV3uL6Xljr+oM099S8l6Q
VL+5RxnbsC7uI2YWvYc0cD1nTO4NLK7V1MTOblHkvgEdmuvf86FMjvuS2/pr
EstarTRpSGafm0FTu/cI0sV56Zp0+3Qvmtd4h5nnpHLlnibQZ1n+/T3auyF4
KAv7y0PWdVWg6LXRuH6j4pSvM0q3b7ia73Nyms0yrrsbx8KWc83t45HGkBAP
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
raa+Ekz7Gs3wi9aXzuCjpdBqujYNaq2gZo9JjBwazI1SXYz/w2ugz4Xu3e6e
DN7xyMIhln3DUv9WnZtJU5kDX2xJz0/OoDM+YbUVrXbxWbSaRVstaDWpHuKC
WqOo2YNJI4cSXLqGLjUW/c9KmZ6+Dk1ptSds71cDJ5+DZD9tHVmLq1a0WtHY
wfPFSTMx5MLRiTSW1aX/9sL382RzOTSUczkakuPiDPemZN5kz0x3akn2BFkP
8gJBuaPstJqGW8HtUNT+mv1mtFru8fE0VORpNd16WnMUTSZyMlfLo9R7nJnb
CqVNFZr2DWJ92C62LptIr/7LuKzr2KorrBg2gwMmhxYVFyyda2pMVsUQNHQ+
sUZbs/cMoW6eftBmcGHzDwSHxpJeIiQWt/shKvUFApopcJ4SlR+DoqY4o2gW
oN9jpbowl1bStWCVpn0JWh/Grq3LmNirP8sul7wu16YfYoyLkoZf7zHec6gl
NWwAjd0COZu3985NTs1+20g35hW/uhuNPIL1a34W8zJVD6nr6KKQ0y7YsL83
M9qPd+ROjI4wHKGOnU1zRRMmnsxF+yiVlAdW7Hvaui6GTqs1VLqz5E7e/WR3
+fXzpvRc/7dh7UJzi+B2Cmp/vd+MVsvl+PiGKIxaLXVdFxRy4/qpdES03zvI
nUYTYU2rSeVK/rUnDjb2eK1IKOW6iQWtZtGnzKGbk9nMD8GhxJb+pNKdr/6T
uV4D2ZZh4XQrvmGxf0vj8rcfVsLuPT+O6xeBNST93AMH+UcsuG5qrNRwfcGH
KOoMYbeuj2vuc3hCc+Ty9iy+pbKen0VbLWk13RLyr/R0sMHeawUJzyDVdHNV
m38IJjQ2vUS7W/S/Mq9Dg1aT1+zHNqO8U8WvplsjD4KvPksdWYmrxbVa7nHG
N1Tka7XiseNh9nPESXMxREpzbislNlWa0jdoPWG7trJsYi/6L7sspa4iJmgo
8wtOYkhdodUEryZlo9XU3I3+janu1bGRudA/JIKr106ytG9jbG1dGLg6ioTk
GNYOcEFmU5tOQeHEZ0ld+/wCPOrUpGn3cQRHJKHJvUHoBE+aOCiQVXbCbUAw
UcZ75zV3VtCxsh2Orq1p4+6BV+fP6DPcn3WnUwzx0dy52lTi9iygV31b6fpt
JBsOXTbsa1VdIPjLznw+eDzTZvgy4sthLI42xlpVNAHvOaBQvsP0MyX1VBG7
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
pyv/2ZL+kXy+me6Gpt0EvrxR/54Z7xTUvceqMI7FPTVox4RXrFMycqeg7j1u
hXGL6anRMiY8657/19B6tRx2vuKKptN09ubW+GdjJlvGuaB5/HW+LesQLe4f
DeQkRRI0zYuO2oq5nWhzczu/UXEmyQkXGl0XU5yZTMKFe9clqfl651y864wh
1Xj4vM3+3HqetD6N1KJajEx309Buwpc00OSUHbNftkykk+LOn3deIzt2Ib3V
/OUxeScZ1cVoJqsVkRD4lJp71AxzuvbaSWvUolqMFNQtRuIW90SjHVM1Z2xZ
zVarf72atWtR3TQnicigaXh11OLQeQizgqO52FK+U7ax+qmQt8UPh8r5XzMs
veZZNasZckiKDGKaV0d13zszZFYw0S3mwAohfqumuw/0Dhejg5k1pLN63W/H
wMmbOFs2kVCazLrh6mf6tkNZ+vV5Mu/c4falBA6ELmHijE0V31lQTNK6kbho
PZl3sGIddWEifx3aBjvXUaxPNvV7pqzWiVe3/UJBSTG//hzN6rFdUJTuvBld
Iw9Z1D+W7do6hjvb0XboUr4+n8mdO7e5lHCA0CUTmbEptbx/yf9yEp7PL2T9
3pNczipCX5rH5YMrGOqsoeuCHyrmhvL5cpInzy9cz96Tl8kq0lOad5mDK4bi
rOnKgh/unUEyZTVNn9lsjYkl9lA8qTXGbIrOrGSwo0LXCR9z9GoBxflXiFk9
hsc1bRi+Ltk0XmNB/1iae5zgiX1w0ejo4j2XkNj0BuZ2fgNjNrundMTORt3H
OQcb2Gw3UzraYaN0Zc7BB9lv1FOL6pFLXjccZ7u2DF36Necz73Dn9iUSDoSy
ZOIMNlV8gUZx0jpGumjxnHewYh14IYl/HUobO1dGrU82ZbOKrNbp1W38UlBC
8a8/E716LF0Uhe5vRlfnISvWolqMTPJ8noXr93LychZF+lLyLh9kxVBnNF0X
UFlmltVsjaNVltU0fZi9tWyt/CHiU3OrziVr1aLemMvx4In0cdGg6+LN3JBY
0lvszyTUVz8m+h8/YqDazj1nbuXH7ELu3LrAkS/DOFD5G10WXfOsldVukXs8
mIl91Oys64L33BBiW+6BFUJYqOm/X62Q9NgQ5o6ZzbaKRRKGW4dZ5deD1rY2
pnXjNrbo3J9l8pqj5eso8o+/ywBdKwa/f7LWeI8+7QvGqX29buB7HM+vvA+0
5hp0GxS3Z5m3I7V2/2Nh/1g2fnLr8Cr8erTG1sb0nDa2Otyfncyao6bvIyg6
uY6JXu44Vu57+f474D4qkNjbVT0aJ9dNxMvdsep5yp9L/Ww+KjCW23X2wZTV
qp7PrhsBcTVn0vRc3fcOI93tsal4n7a6rvh+GEtm1RrkxvvHkrQwZvgFEBaX
Uad/vi9qVts12U19rxo8Zn/XwGa7mOxmi43Gg9nfNcdn/Lq1qBYjh1f50aO1
bY1j686zk9dw1FSMvDtAR6vB73OydjHyxTg1n+oG8p6pGMvvA615P4SN4saz
83aQWvNgW7EW1WJk3UQv3B0r9920/w7uowiMvV2dryyq2WrlWa3q+ezoFhBX
Y6zQOrWoN6QRNsOPgLA4MqxajE3JTP2UUXPnib+NwcPBpqoN7Dv/ic0Xq8cl
G7vmlT+NVbJaJmlhM/ALCCPu4TmwQohGNN/vFhjIz0jiVPwpktKyKPwd92lV
zoHO3nuBxPijxCWkkmWNy5Mhn4ykU8SfSiItq9DMGjQjRdnppJyN51icuv9X
881/14CxiOz0FM7GHyNOfa6r+fd547w+h7Rz8cSdOM8veS3si5OKb5J0JoXb
jdxnVnwziTMpt3/XfX5NyZCfQdKpeE4lpZH1+4rRNAc6ey8XEuM5GpdAqjWK
sdFaLCuzbNJTzhJ/LE7d/6uYLzMLa9ZSLbkWm4k+N129DsURn5hGrtmDe//X
PCHEo+lh/o2p+u4DFeKBq+8+UCGEEOI+SVYTwgokqwkhhGgiD3NWM6RHs/aD
texPk8kE0czKv7P0A9buT3sofi9JCCHEw+NhzmpCCCGEEP/tJKsJIYQQQrRc
ktWEEEIIIVouyWpCCCGEEC2XZDUhhBBCiJZLspoQQgghRMslWU0IIYQQouWS
rCaEEEII0XJJVhNCCCGEaLkkqwkhhBBCtFyS1YQQQgghWi7JakIIIYQQLZdk
NSGEEEKIlkuymhBCCCFEyyVZTQghhBCi5ZKsJoQQQgjRcklWE0IIIYRouSSr
CSGEEEK0XJLVhBBCCCFaLslqQgghhBAtl2Q1IYQQQoiWS7KaEEIIIUTLJVlN
CCGEEKLlkqwmhBBCCNFySVYTQgghhGi5JKuJxugzT/DZ8v9lgq8Po1/yZ9rc
DcQXNPdeCSGEEI+G5slqBZyOWMnKiDPcecCvLH4b441IXuumRenohf+ct1ka
MJs/v7iQ3VnGpnnBgtNErFxJxBmpDCGEEKJMs2Q1401CR2nRjt5MZhN1+cIa
9CQG9kNpNYKPL+ofyCsab4YySqtl9OZMpDSEEEIIyWqiIbn8088B5blgLhse
zCtKVhNCCCFqe1BZzZCfQ17l0IyFWU1/8yjr3/TB080Je117PJ8PYMfPRbW2
yd3/Nj7ei4i6XUDy9qWM7d+ZNjon3HpO5JNUPcbrO5k7aiafJZ0nbFIvXF16
8drOX8g5tRa/bs649ltAdJaR4twc7jZBOCg8tZoRnZzp8uIGkkrr3YpTq0fQ
ybkLL25Isv5OWMqQT05ejfEz4zU2jFTb6YXPyK732BjIPPYxs0b0pL2jguLU
Cc9BQxhW1ia15kmN5CR8zsIX+9G5jT1aR1c6ew5hwtLdXKmRAy3JasVX9rHy
FS+6ujig1bWl+5Cp/DUmg1ojf7n7edvHm0VRtylI3s7Ssf3V19Xh5NaTiZ+k
qtsWk5tzV/KgEEKIFq+ps5o++xzbA/3p1+klwjO+Z/bjtjz22GNmHra4zfpW
7UEr9iv7O+b3csCxx3jeD49k3671vDHIGaXbHL7Prdp7ssJ90SpDmf+uDx06
PM0bwduIXDMON6Uv758rxXB5LUN0PRk7/o+MXraBJc+puW/IJPy9xhC4aSFe
Dm2YtLuAy2tH4D74VYIifyLXamNIRq5t9MHB5jFsnMaz9df6NrvGRh8HbB6z
wWn8Vmu9uOX02ZzbHoh/v068FJ6l/kM+W/zszbeT0p+V56tCN9kHF9JHZ4fL
U9NZHbGXA9G72Ti9FxqtNxuvG6u3i13CgFYa2nm9xl8jotgXtZVPVs1jnN8q
TpSo+StmNo/bmqsL9WHrxqxvTZVhvLGLqV0VdGpdrPxiL9GRn/LemC5o7T2Z
+212VfYyZoXjq1UYOv9dfDp04Ok3gtkWuYZxbgp93z9HqeEya0e4M/jVICJ/
yuUBDRsKIYQQv1lTZbXSzJNELPPD09keN69prN6bQp7+V36OO0RszG4CBiko
gxezJyaW2NiyxyGOpVT2tSWcWd4Hpc1oNl2pHi3Rp6xmsNKa8WroMW1XkdVs
bNG08yY48a7pr4++RVdtjaymqBlo5D+4ZCjl3IonUTTtGBeRgbHkEHPcdYz5
LBtD1lm+WvEyfV21uPbzJ3D7ObKtsUSr6BIHNq5h86Gr6rtqaLMDbFyzmUNX
79mq8CoJhyuPkbnHYRKv1ztg17DSTE5GLMPP0xl7Ny+mrd5LSl7ZkdVz8z+H
1XbawYL+ajs98w57K1/v8CmuVN4DWhhHQA8Nuqf+won8yietaJOaWe3uDyzo
psHhqfc5XWh+V4y//kzcoVhidgcwSFEYvHgPMZWveegYKeUDe0UceasbmlbD
+XtqjfdcnMiHg7QoT67gbMU/m7KaDbZqW3sHJ1JeGSVHeaur1pTV1HSWdfYr
VrzcF1etK/38A9l+LpsHsypPCCGEsJy1s1pxxjE2L/Klu5MDnYfMIvjAxbr3
ejY2B1qawPLeGjRPvMCiFStYUfl472V6Kxp6LP03pi65IhfYuuAbeqVqbMSQ
Hs3alRuIvWEwZTV7N6ZG5VGWQZI+Goi28ywOlO1UyWHmeejwLR9Lqvjb3CT2
rJrCoA5anD39WBZxkszfGYWswZQ16xlvKn9oa+2/RYozOLZ5Eb7dnXDoPIRZ
wQe4aO62S8NV1o9QsH/xc8wNCd6Nfg03O1de2ZlT41/rZrWS2Dm427XipS9u
Nzrn2OAcaOlJ3vHUYP982D11Y+DSmudQlMEEpZjSlimr2eLiG1o9x2pIJ3rt
SjbE3qgxjmYgN2kPq6YMooPWGU+/ZUSczKQZm1wIIYSoxVpZzXAzjg1zRtJF
p6H9M28SEptGPUMojWe1oiimtLFF26kvQ4cNY1itx3AmBJ+pndVqzbfds1/l
c6D9CEws68NNWc3ReyPlm5vJalW7WJDK/jXTGOBiR6vuviwKP93Amq2HhOEm
cRvmMLKLDk37Z3gzJJa0ehuJRrKanp9WDVLz0VDW1VxwZqZNciJewt6uO4uP
NzSyWPHXDWW1om+YqrZH25n7q+bKK93dNgEHOw/mHTa9himrafHeeN3CNWlG
ClL3s2baAFzUXNnddxHhp7Mt+kshhBCiKVltXE2fTeKOQPz7t0Vp3YMXAsI4
eq3I/LaVWW1UqPmsVvID8z00tPbfScNfudpUWe0uV2JCmOvzBI5aN7ymBhGV
nNcs69CNv8bz6Qc1xhbrPFayJeGuhc+mJztxB4H+/WmrtKbHCwGEHb1GPa3U
SFYr5dQyTzTa0Wy+VfPIFHNmed9a69UKI6fgbOvCn3c3/gW6lVltVKiZrFZe
F3Y4jv+KvNp/xY1PRqHV9GF5QkWK/61Z7e4VYkLm4vOEI1o3L6YGRZGc97CH
cyGEEP8NrL5ezZhHclQQU73c0Dq4M+z1YPanFtzTX+axpey7IAYHkWJ2gVA+
30x3Q9NuAl/eaKi/tHJWM+SQFBnENK+O6r53ZsisYKLNTg7+FsVkJidwobHF
b8WZJCdcqLNGrvw+Vu97xxZrPnx4e3+u+eesl5G85CiCpnrhpnXAfdjrBO9P
peDeQ9hgVjOQtm4oisaTd05Wzxjmn/yAp1vZ8Jh2JBuuVawqvPk5Y9vY4er3
BRmNxZ+8Lfg5KAwOSjGzdiyHna+4ouk0nb0137Ixky3jXNA8/jrfVsRWS7Oa
ISeJyKBpeHXUVswHR5ufDxZCCCGaSdPdB3qHi9HBzBrSGXulHQMnb+Js1Xyb
nh/VzKQoPZm59UeyC+9w68IRvgw7QHrFdFpp8jqGO9vRduhSvj6fyZ07t7mU
cIDQJROZsSm1oh+3Vla7Re7xYCb2Uft7XRe854YQm97Q5KCljGTvnkJHOxuU
rnM4WF8GMGaze0pH7GwUus45aIXXtdydi9EEzxpCZ3uFdgMns+lsjffdyHo1
/Y+rGKS1o4PvWk5l3iY58j2GP96V8f7P4aB4sboqiBeRsOoZWtu58mzANhIy
CigpucPt1Di+/ufBWt/ZoT4pHw1UUHrOZOuP2RTeucWFI18SdiC9fI1Z0ZmV
DHZUj9OEjzl6tYDi/CvErB7D45o2DF+XXLXOrNGsZszlePBE+rho0HXxZm5I
LFZpciGEEMLKmv771QpJjw1h7pjZbKux4MuYe4K/jfEo/z6L8jXyNvZ0/tNm
Llb12wZuHV6FX4/W2FZsY2Orw/3Zyaw5ml37PtD7zmqZpIXNwC8gjLiMe1dC
3Q81q+2ajJutDRqP2XzXQFbbNdlNfZ8aPGZ/Z8XXt1xheiwhc8cwe1uNNVqN
ZLWyueLETRPpZm+jto+aRzs8zeytKWruXcIf1Hw+/V81wo8xi+PrpvBUBwWb
yvsi1Pfr7PUhZ2ot5DeSe+JvjPFwqNrOxr4zf9p8seJ+AD1X973DSHf7iv9v
g62uK74fxpJZ83vaGstqhjTCZvgREBaHVZtcCCGEsLLm/e12PbnpicTHxZOY
lmv++xIM+WQknSL+VBJpWYUP4fdgFXMz6Qwptxu5s7D4JklnUmhss5aoOCuV
hNPJ3LRkXKo4m8vn/03ciQSSr+bWf7+lPpf0xHji4hNJyzVTGfoc0s6p///E
eX7Je/iqQgghhLBU82Y1IYQQQgjREMlqQgghhBAtl2Q1IYQQQoiWS7KaEEII
IUTLJVlNCCGEEKLlkqwmhBBCCNFySVYTQgghhGi5JKsJIYQQQrRcktWEAP2l
b/i/D0KIuf4Av1dXn8mJz5bzvxN88Rn9Ev7T5rIhvvHftxdCCPFoaZ6sVsDp
iJWsjDiD/Ex2C1ZwmoiVK4k489/bSvr8PO4YoSRuEd3sn+ZvF9SsZswnr84P
2VuZ8QaRr3VDq3TEy38Oby8NYPafX2Th7qwmekE554QQ4mHVLFnNeJPQUVq0
ozeT2cRdovj9jDdDGaXVMnpzpvnf1HzYGS4R4tORni8Hc/jgCvo5Ps+G0//i
L6M8cPf/qklfWp8YSD+lFSM+vmj+t9WsTc45IYR4aElWE/X5r89qxjx+2vMR
k/q3xd6pNTo7J9q0tqfj0zNZc+BSk7507j/9cFCeI/jyA5pzlXNOCCEeWg8q
qxnyc8irHECwsN/Q3zzK+jd98HRzwl7XHs/nA9jxc1GtbXL3v42P9yKibheQ
vH0pY/t3po3OCbeeE/kkVY/x+k7mjprJZ0nnCZvUC1eXXry28xdyTq3Fr5sz
rv0WEJ1lpDg3h7tN0IcVnlrNiE7OdHlxA0n1/lB5IadWj6CTcxde3JBk/Z2w
lCGfnLzqUR7Lspqem0fX86aPJ25O9ujae/J8wA5qN1Mu+9/2wXtRFLcLktm+
dCz9O7dB5+RGz4mfkKo3cn3nXEbN/Iyk82FM6uWKS6/X2PlLDqfW+tHN2ZV+
C6LJKsolx9qNZMjhxx0BPOdqy2OP2WDXaRQf7EvF2qvGatW/ejSvbRiJVvsC
n2XX/34Mmcf4eNYIerZ3RFGc6OQ5iCHDvFkUlVWrPYw5CXy+8EX6qcfUXuuI
a2dPhkxYyu4rNXKgRedcMVf2reQVr664OGjRte3OkKl/JSaj5shfY21Jk51L
QgjxqGrqrKbPPsf2QH/6dXqJ8Izvmf14WZ/4mJmHLW6zvlV7i4r9yv6O+b0c
cOwxnvfDI9m3az1vDHJG6TaH73Or9p6scF+0ylDmv+tDhw5P80bwNiLXjMNN
6cv750oxXF7LEF1Pxo7/I6OXbWDJc2ruGzIJf68xBG5aiJdDGybtLuDy2hG4
D36VoMifyLXaUIfaJ2/0wcHmMWycxrP11/o2u8ZGHwds1KzgNH6rtV7ccvps
zm0PxL9fJ14Kz6I4ZjaP25prI/Vh68asb6taiezv5tPLwZEe498nPHIfu9a/
wSBnhW5zvqe6mbII99WiDJ3Puz4d6PD0GwRvi2TNODeUvu9zrtSgHv8h6HqO
ZfwfR7NswxKeU3PfkEn+eI0JZNNCLxzaTOLr/7eWEe6DeTUokp+s0Uil/yF4
eFs09l0YPeNFujkM5JVZz9FBo/D4+M/u//m5p/7VzwT5W/ywN1v/Cv1Xnq+a
DzVmH2RhHx12Lk8xfXUEew9Es3vjdHpptHhvvF6V1YzZsSwZ0ApNOy9e+2sE
Ufui2PrJKuaN82PViRI1OMVYeM4ZubFrKl0VndqWK/libzSRn77HmC5a7D3n
8m1lprSoLZviXBJCiEdXU2W10syTRCzzw9PZHjevaazem0Ke/ld+jjtEbMxu
AgYpKIMXsycmltjYsschjqVkV/RBJZxZ3gelzWg2Xan+TK9PWc1gpTXj1dBj
2q4iq9nYqn2VN8GJd01/ffQtumprZDVFzUAj/8ElQynnVjyJomnHuIgMjCWH
mOOuY8xn2RiyzvLVipfp66rFtZ8/gdvPkW2NhURFlziwcQ2bD11V31VDmx1g
45rNHLp6z1aFV0k4XHmMzD0Ok3i93gG7hpVmcjJiGX6ezti7eTFt9V5S8owY
f/2ZuEOxxOwOYJCiMHjxHmIqX+/QMVIq++2SMyzvo9Bm9Caqm0lPyurBKK3L
smnt/t3GVkM772BMzVTC0be6oq2R1RQbJ0b+4xKG0nOseFJR23QcERlGSg7N
wV03hs9u3eLsVyt4ua8rWtd++Adu59x9NVIpKVtXs/nUrxSfehdP3XD+8UsJ
N46sJ3jvtft43nrq31g2VvwfDsfGsGNBfxTlGd7ZW92Op65UjuYVEhfQA43u
Kf5yIr/qOY1Z4fhqa2a1u/ywoBsah6d4/3Sh+R0xWnjOFR3hrW4aWg3/O6k1
yqk48UMGaRWeXHGWUtNONNKWNN25JIQQjyhrZ7XijGNsXuRLdycHOg+ZRfCB
i3XvO2tsPqY0geW9NWieeIFFK1awovLx3sv0VjT0WPpvU79RmdVsXfANvULl
R3hDejRrV24g9obBlNXs3ZgalUdZjkj6aCDazrM4ULZTJYeZ56HDN7z63jtD
bhJ7Vk1hUActzp5+LIs4SebvjELWYMqa9YxxlT+0tfbfIsUZHNu8CN/uTjh0
HsKs4ANcNHNzYGNzoKUJy+mt0fDEC4uq20h9vPdybzUP92DpvysOXEX/buvi
S2jVvJyB9Oi1rNwQyw2DKavZu03F1ExJfDRQS+dZBzA10zw8dL7l41KmP80l
ac8qpgzqgNbZE79lEZy8z0Yqz4Pafnxw/v5ChUX1r773q+tHoNi/yOfmxlrv
RvOamx2ur+wkp8Y/18lqJbHqZw07Wr30Bbcbm3Ns5JwrPfkOnhp7ng+7p60N
l1jzXFnGCyJFjwVtWeNPW9i5JIQQDytrZTXDzTg2zBlJF52G9s+8SUhsGvV8
0m88qxVFMaWNLdpOfRk6bBjDaj2GMyH4TO2spvVm43XznZVpDrQfgYllHY0p
qzl6b6R8czNZrWoXC1LZv2YaA1zUvrC7L4vCT9PA0qKHg+EmcRvmMLKLDk37
Z3gzJJa0ehup8axWFDWFNrZaOvUdek8bqY/hEwg+UzuraSuPe90dM82B9gvE
1ExlWc2xKpPUyWpVO1hA6v41TBvggl2r7vguCud0MzXSb6r/RrKa/qdV5eOZ
Q9dVf/4oUyer5UTwkr0d3Rcfb3DM1vTHDZ9zRd9MxcWuLTP3F9/zf+6ybYID
dh7zOFyCBW1p5qX/G88lIYR4gKw2rqbPJnFHIP7926K07sELAWEcvVZkftvK
fmNUqPmsVvID8z00tPbf2cga76bKane5EhPCXJ8ncNS64TU1iKjkvGa5F9L4
azyffrCi1rhV7cdKtiTctfDZ9GQn7iDQvz9tldb0eCGAsKPXqKeVqrLaqFDz
Wa3kh/l4aFrjv7ORlfhNlNXuXokhZK4PTzhqcfOaSlBUcvk8Y7P4LfXfSFYr
PbUMT01ZRr5V67gXn1lO35rr1QojmeJsi8ufdzd+L0Qj51x5W9o5Mv6rvHv+
7gafqH+n6bOchLLo/ZuzWss5l4QQ4mFl9fVqxjySo4KY6uWG1sGdYa8Hsz+1
4J5rcx5b/Byq51XqyOeb6W5o2k3gyxsNXdWtnNUMOSRFBjHNq6O6750ZMiuY
aHOTg79JMZnJCVxobMFOcSbJCRfqrOspv4/V+96xxZoPH97en2v+OetlJC85
iqCpXrhpHXAf9jrB+1Op8/WveVvwc1AYHJRi/jvA8r9hupuGdhO+pOFmsmZW
M5CTFEnQNC86aivmGaPNzTM2E4vqv+GsZkhbx1BFg+c7J6maMsw/yQdPt8Lm
MS0jN1wzPZ+avz4f2wY7Vz++yGgs/TRyzuXs5BVXDZ2m76VmNRkztzDORcPj
r39L+ScCS7Nak5xLQgjxaGq6+0DvcDE6mFlDOmOvtGPg5E2crZoU0vOjmpkU
pSczt/5IduEdbl04wpdhB0ivmPQpTV7HcGc72g5dytfnM7lz5zaXEg4QumQi
MzalVmQHa2W1W+QeD2ZiHxc0ui54zw0hNr2ByUGLGcnePYWOdjYoXedwsL6u
ypjN7ikdsbNR6DrnoBVe13J3LkYTPGsIne0V2g2czKazNd63/kc1MykoPWey
9cdsCu/c4sKRLwk7kF4xN1dK8rrhONu1ZejSrzmfeYc7ty+RcCCUJRNnsCm1
IhRYKauFXTpG8MQ+uGh0dPGeS0hsegPzjM2tofpvZL2aetxXDdJi18GXtacy
uZ0cyXvDH6freH+eU7Oz1+rq7FyUsIpnWtvh+mwA2xIyKCgpUdsglbiv/8nB
mt/Z0eg5V8SZlYNxVLoy4eOjXC0oJv9KDKvHPI6mzXDWJVs6n21sonNJCCEe
XU3//WqFpMeGMHfMbLbVWKRizD3B38Z4lH+fRfkaeRt7Ov9pMxeruhcDtw6v
wq9Ha2wrtrGx1eH+7GTWHM2ufR/ofWe1TNLCZuAXEEZcxr3rde6HmtV2TcbN
1gaNx2y+ayCr7Zrspr5PDR6zv7Pi61uuMD2WkLljmL0tu+aOkXvib4zxKPs+
kYo2sO/MnzZfrF5HZbjF4VV+9GhtW7GNDbY6d56dvIaj93zPw31ntYRQZvgF
EBaXgTVbqWmZq/9GsprqbuImJnazLz+mNkoHnp69lZTc4yz5g5qpp/+rRkZV
z4Hj65jyVAeUynNJbQONsxcfnqm9kL/Rc05/lX3vjMTd3qbi/9ui6+rLh7GZ
1e1tQVs2zbkkhBCPrub97XY9uemJxMfFk5iWa36ezZBPRtIp4k8lkZZVyMP3
dU3F3Ew6Q8rtRm6AK75J0pkUGtusWehzSU+MJy4+kbRc83O5hvwMkk7Fcyop
jazCh6+VWqTiLFITTpN805JxqWKyL5/n33EnSEi+Sm69ddT4OafPSeNcfBwn
zv9CnjSlEEI0u+bNakIIIYQQoiGS1YQQQgghWi7JakIIIYQQLZdkNSGEEEKI
lkuymhBCCCFEyyVZTQghhBCi5ZKsJoQQQgjRcklWE+JeBjIOrmfl37/lalN+
v5g+kxOfLed/J/jiM/ol/KfNZUN8o7/sKYQQ4hHTPFmtgNMRK1kZcabl/I6j
qKvgNBErVxJx5tFqJePtSKa6OzPi7xfMfz+zVV7kBpGvdUOrdMTLfw5vLw1g
9p9fZOHurCZ6QTnnhBDiYdUsWc14k9BRWrSjN5PZ2E9Oi2ZjvBnKKK2W0Zsz
eXSaKY/YeX+g1VMfcLYJfyJJnxhIP6UVIz6+2HR5sCY554QQ4qElWU3U51HM
aoWnltOvlSeLjjTtXGTuP/1wUJ4j+PID+hEnOeeEEOKh9aCymiE/h7zKAQQL
+w39zaOsf9MHTzcn7HXt8Xw+gB0/F9XaJnf/2/h4LyLqdgHJ25cytn9n2uic
cOs5kU9S9Riv72TuqJl8lnSesEm9cHXpxWs7fyHn1Fr8ujnj2m8B0VlGinNz
uNsEfVjhqdWM6ORMlxc3kFTvbzQWcmr1CDo5d+HFDUnW3wlLGfLJyase5bEs
q+m5eXQ9b/p44uZkj669J88H7KB2M+Wy/20fvBdFcbsgme1Lx9K/cxt0Tm70
nPgJqXoj13fOZdTMz0g6H8akXq649HqNnb/kcGqtH92cXem3IJqsolxymqKR
KpX+xP8NaY3HzG/ItvLL1Kp/9Whe2zASrfYFPmvghQyZx/h41gh6tndEUZzo
5DmIIcO8WRSVVas9jDkJfL7wRfqpx9Re64hrZ0+GTFjK7is1cqBF51wxV/at
5BWvrrg4aNG17c6QqX8lJqPmyF9jbUmTnUtCCPGoauqsps8+x/ZAf/p1eonw
jO+Z/bgtjz32mJmHLW6zvqVy2smY/R3zezng2GM874dHsm/Xet4Y5IzSbQ7f
51btPVnhvmiVocx/14cOHZ7mjeBtRK4Zh5vSl/fPlWK4vJYhup6MHf9HRi/b
wJLn1Nw3ZBL+XmMI3LQQL4c2TNpdwOW1I3Af/CpBkT+Ra7WhDrVP3uiDg81j
2DiNZ+uv9W12jY0+Dtg8ZoPT+K3WenHL6bM5tz0Q/36deCk8i+KY2Txua66N
1IetG7O+rWolsr+bTy8HR3qMf5/wyH3sWv8Gg5wVus35nupmyiLcV4sydD7v
+nSgw9NvELwtkjXj3FD6vs+5UoN6/Ieg6zmW8X8czbINS3hOzX1DJvnjNSaQ
TQu9cGgzia//31pGuA/m1aBIfrJeI1UwkLZ5DK4dxrMlw3rPXav+1c8E+Vv8
sDdb/wr9V56vmg81Zh9kYR8ddi5PMX11BHsPRLN743R6abR4b7xeldWM2bEs
GdAKTTsvXvtrBFH7otj6ySrmjfNj1YkSNTjFWHjOGbmxaypdFZ3aliv5Ym80
kZ++x5guWuw95/JtZaa0qC2b4lwSQohHV1NltdLMk0Qs88PT2R43r2ms3ptC
nv5Xfo47RGzMbgIGKSiDF7MnJpbY2LLHIY6lZFf0QSWcWd4Hpc1oNl2p/kyv
T1nNYKU149XQY9quIqvZ2Kp9lTfBiXdNf330Lbpqa2Q1Rc1AI//BJUMp51Y8
iaJpx7iIDIwlh5jjrmPMZ9kYss7y1YqX6euqxbWfP4Hbz5FtjYVERZc4sHEN
mw9dVd9VQ5sdYOOazRy6es9WhVdJOFx5jMw9DpN4vd4Bu4aVZnIyYhl+ns7Y
u3kxbfVeUvKMGH/9mbhDscTsDmCQojB48R5iKl/v0DFSKvvtkjMs76PQZvQm
qptJT8rqwSity7Jp7f7dxlZDO+9gTM1UwtG3uqKtkdUUGydG/uMShtJzrHhS
Udt0HBEZRkoOzcFdN4bPbt3i7FcreLmvK1rXfvgHbuecVRqpbNhpB5M6uaiv
n2qV9WNm699YNlb8Hw7HxrBjQX8U5Rne2VvdjqeuVM67FhIX0AON7in+ciK/
eh+zwvHV1sxqd/lhQTc0Dk/x/unCet6Yhedc0RHe6qah1fC/k1qjnIoTP2SQ
VuHJFWcpNe1EI21J051LQgjxiLJ2VivOOMbmRb50d3Kg85BZBB+4WPe+s8bm
Y0oTWN5bg+aJF1i0YgUrKh/vvUxvRUOPpf829RuVWc3WBd/QK1R+hDekR7N2
5QZibxhMWc3ejalReZTliKSPBqLtPIsDZTtVcph5Hjp8w6vvvTPkJrFn1RQG
ddDi7OnHsoiTZP7OKGQNpqxZzxhX+UNba/8tUpzBsc2L8O3uhEPnIcwKPsBF
MzcHNjYHWpqwnN4aDU+8sKi6jdTHey/3VvNwD5b+u+LAVfTvti6+hFbNyxlI
j17Lyg2x3DCYspq921RMzZTERwO1dJ51AFMzzcND51s+LmX601yS9qxiyqAO
aJ098VsWwcn7aSRjDt+++T+0Gvwh5+7zfgKL6l9971fXj0Cxf5HPzY213o3m
NTc7XF/ZSU7N3bw3q5XEqp817Gj10hfcbmzOsZFzrvTkO3hq7Hk+7J62Nlxi
zXNlGS+IFD0WtGWNP21h55IQQjysrJXVDDfj2DBnJF10Gto/8yYhsWnU80m/
8axWFMWUNrZoO/Vl6LBhDKv1GM6E4DO1s5rWm43XzXdWpjnQfgQmlnU0pqzm
6L2R8s3NZLWqXSxIZf+aaQxwUfvC7r4sCj9t9TVMD5zhJnEb5jCyiw5N+2d4
MySWtHobqfGsVhQ1hTa2Wjr1HXpPG6mP4RMIPlM7q2krj3vdHTPNgfYLxNRM
ZVnNsSqT1MlqVTtYQOr+NUwb4IJdq+74Lgrn9O9opLvxS+mj8yTg6O//Novf
VP+NZDX9T6vKxzOHrqv+/FGmTlbLieAlezu6Lz7e4Jit6Y8bPueKvpmKi11b
Zu6/N6zeZdsEB+w85nG4BAva0sxL/zeeS0II8QBZbVxNn03ijkD8+7dFad2D
FwLCOHqtyPy2lf3GqFDzWa3kB+Z7aGjtv5OG78Zrqqx2lysxIcz1eQJHrRte
U4OISs5rlnshjb/G8+kHK2qNW9V+rGRLwl0Ln01PduIOAv3701ZpTY8XAgg7
eo16Wqkqq40KNZ/VSn6Yj4emNf47G7lnsomy2t0rMYTM9eEJRy1uXlMJikou
n2f8TUr+Q5CXE13+dx+/3k8D/5b6bySrlZ5ahqemLCPfqnXci88sp2/N9WqF
kUxxtsXlz7sbOU9o9Jwrb0s7R8Z/lXfP393gE/XvNH2Wk1AWvX9zVms555IQ
QjysrL5ezZhHclQQU73c0Dq4M+z1YPanFtxzbc5ji59D9bxKHfl8M90NTbsJ
fHmjoau6lbOaIYekyCCmeXVU970zQ2YFE21ucvA3KSYzOYELjS3YKc4kOeFC
nXU95fexet87tljz4cPb+3PNP2e9jOQlRxE01Qs3rQPuw14neH8qBfcewrwt
+DkoDA5KMb+GK/8bprtpaDfhSxpuJmtmNQM5SZEETfOio7ZinjHa3DyjJfRc
2jAKF7eJbLV0kKgxFtV/w1nNkLaOoYoGz3dOUjVlmH+SD55uhc1jWkZuuGZ6
PjV/fT62DXaufnyR0dj+N3LO5ezkFVcNnabvpWY1GTO3MM5Fw+Ovf0v5JwJL
s1qTnEtCCPFoarr7QO9wMTqYWUM6Y6+0Y+DkTZytmhTS86OamRSlJzO3/kh2
4R1uXTjCl2EHSK+Y9ClNXsdwZzvaDl3K1+czuXPnNpcSDhC6ZCIzNlWu/7ZW
VrtF7vFgJvZxQaPrgvfcEGLTG5gctJiR7N1T6Ghng9J1Dgfr66qM2eye0hE7
G4Wucw5a4XUtd+diNMGzhtDZXqHdwMlsOlvjfet/VDOTgtJzJlt/zKbwzi0u
HPmSsAPpFXNzpSSvG46zXVuGLv2a85l3uHP7EgkHQlkycQabUitCgZWyWtil
YwRP7IOLRkcX77mExKY3MM/YOOP1L5no5oJPSFN8H21D9d/IejX1uK8apMWu
gy9rT2VyOzmS94Y/Ttfx/jynZmev1dXZuShhFc+0tsP12QC2JWRQUFKitkEq
cV//k4M1v7Oj0XOuiDMrB+OodGXCx0e5WlBM/pUYVo95HE2b4axLtnQ+29hE
55IQQjy6mv771QpJjw1h7pjZbKuxSMWYe4K/jfEo/z6L8jXyNvZ0/tNmLlZ1
LwZuHV6FX4/W2FZsY2Orw/3Zyaw5ml37PtD7zmqZpIXNwC8gjLgMa35ZvZrV
dk3GzdYGjcdsvmsgq+2a7Ka+Tw0es7+z4utbrjA9lpC5Y5i9LbvmjpF74m+M
8Sj7PpGKNrDvzJ82X6xeR2W4xeFVfvRobVuxjQ22OneenbyGo/d8z8N9Z7WE
UGb4BRAWl8F9t5J6zP/1Whdaea0isdHFXvfDXP03ktVUdxM3MbGbffkxtVE6
8PTsraTkHmfJH9RMPf1fNTKqeg4cX8eUpzqgVJ5LahtonL348EzthfyNnnP6
q+x7ZyTu9jYV/98WXVdfPozNrG5vC9qyac4lIYR4dDXvb7fryU1PJD4unsS0
XPNjG4Z8MpJOEX8qibSsQh6+r2sq5mbSGVJuN3IDXPFNks6k0NhmzUKfS3pi
PHHxiaTlmh+BMuRnkHQqnlNJaWQVPgStpGbMpCOHSbha35qyFqA4i9SE0yTf
tGRcqpjsy+f5d9wJEpKvkltvHTV+zulz0jgXH8eJ87+Q9xA0pRBC/Ldr3qwm
hBBCCCEaIllNCCGEEKLlkqwmhBBCCNFySVYTQgghhGi5JKsJIYQQQrRcktWE
EEIIIVouyWpCCCGEEC2XZDUhhBBCiJZLspoQQgghRMslWU0IIYQQouWSrCaE
EEII0XJJVhNCCCGEaLkkqwkhhBBCtFyS1YQQQgghWi7JakIIIYQQLZdkNSGE
EEKIlkuymhBCCCFEyyVZTQghhBCi5ZKsJoQQQgjRcklWE0IIIYRouSSrCSGE
EEK0XJLVhBBCCCFaLslqQgghhBAtl2Q1IYQQQoiWS7KaEEIIIUTLJVlNCCGE
EKLlkqwmhBBCCNFySVYTQgghhGi5JKsJIYQQQrRczZrV9Jmc+Gw5/zvBF5/R
L+E/bS4b4guaZ1+EeFgZc4gLnsmry6JINzT3ztRkJCcumJmvLiOqZe2YEEI8
VJotqxlvEPlaN7RKR7z85/D20gBm//lFFu7OaqIXLOB0xEpWRpzhThO9ghBW
VXCaiJUriTjTSMXqz/NBfwXb9jPYV/hgds0yes5/0B/Ftj0z7nvH5PwVQjy6
miur6RMD6ae0YsTHF9Ur+gNgvEnoKC3a0ZvJND6IFxTi/hhvhjJKq2X05kwa
K9nS7Muk3ih6IPv1m5Rmczn1Bve9Z3L+CiEeYc2V1XL/6YeD8hzBlx/Q3Ihc
68VD5rdktf96cv4KIR5hDyqrGfJzyKsaQDNybcNItNoX+Cy7/guvIfMYH88a
Qc/2jiiKE508BzFkmDeLorJq9V3GnAQ+X/gi/Tq3wV7riGtnT4ZMWMruKzVy
oEXX+mKu7FvJK15dcXHQomvbnSFT/0pMRs2Rv1z2v+2D96Iobhcks33pWPqr
r6tzcqPnxE9IVTctzv3/2TsPoKiuN24LbKFYsGHBEo2SGCuisUQFjC1GMZjY
NRrR2FDR2DHoP4klxt6iJjE2FI01UWQsiAHFNkFQVD4V0REBB9AR+IBvd+f5
7i4ddtnFgGI8z8wd3eXuOeee857z/k69iaSUhT9JDWFx19pUqd+b1WGZxdy2
mK61q1C/92qKua2MUfMsMVn3b8xOD7q5zME/9SnBa7+i67tVsbapTZtBK/g7
MX9GGcv/koRlQgpjduLRzYU5/qk8DV7LV13fpaq1DbXbDGLF34kF9ZHqMWdW
jsXFwY6KSitqOHyM564bRcaLNMmX2Tq5J83rVJJs1poajVrRoXNXRmzON36s
juXsitF0bVoDa7mcirUdcOzYWWdT8fkiNabVNI/28LVzZzp3zrqcx+3iYaEb
My79iHvXHsz+M6loAOkhLHFzZsi68Ny0qR6fYeVYFxzsKqK0qoHDx57sulHC
UTHNI/Z87Zybrs7O49hVOGGUMP9N1GompV+TzOWtk+nZvA6VpPy3rtGIVh06
03XEZm6pShZW0uHpuDhPYX/cc8J3evFJy7pUtqqIXdMBrMtqDEgsk8ZAIBC8
TZS1VlMlXGbnfHda1O7DZskRPfu1L8oKFahQ5JLT0vtqrs/QJBxncjMrLGzb
MHzxNg4cPcLeNcN5T6bAec3D3HZck+DPtFY2yKo7Mep/29h/aD/b1/nwdb++
+JzPkNrKE3jUMdcTn/Yyx270MUkh6ELike9QGsitaNLfm60HjuC3aRY96ytQ
OoznWI6m1MSzuYcCeacJfONSk5rtvmLpDj+W9LND3nwelzPV3FnWFfu2Q1jk
d52kUhw21DxYg4ulGRXMKtJ/+1NDd/FgjQuWZhUwq9gfg7eVGSoSLu9kvnsL
avfZjFZf3frhQ+QKF8ZPbIWtvTOTV+3Cd81ImlnJeHdaEBnZ6Tae/6aGZRrq
Wz/woVyBy/iJtLK1x3nyKnb5rmGkZHeyd6cRlBOYJoE/J7yHpXUT+s/bjN8h
X1Z+5UgVeSPG/ZVPA6VcZFHHKljYOOA2dyP7jhxl/7aJtLOW03zeZTKzwzo+
uRlWFra0Gb6YbQeOcmTvGoa/J0PhvEantdJPeFDHXJ+9Spe5HaOPZVtsYhCb
F8xl7tyZuDnIkHdYyu3C9pb+NzMc5Ni4ruN+gb9peOr7BTWVbfj2H1X2Y/7J
hPcssW7Sn3mb/Tjku5KvHKsgbzSOv/RIPYNoEgnavEBK11xmujkg046fF0mY
iflvcv01Nf0pXFzUkSoWNji4zWXjviMc3b+Nie2ss+tvScLSEL+5Bwp5JyZ8
40LNmu34aukO/Jb0w07enHlSYOo7y+hq35Yhi/y4XpqNgUAgeKsoK62WGRvM
tpl9caiixM5pGIsPRJCs0fZVrxHgf4JdE1sil7dnxgF//P21VwAhUTl7QFMJ
9GyCzKoNc84/y0tr/GZ6KPJrtRROTWyEzLIN8y4YWLusecqNwJP4n9iLp6Mc
edup7DuRE+dJzkYkZIWVdppJjWTYdPmRyHxjUelXFuKokPPB3EvZvjZLq5mZ
y6juvJQrKdovMzgzqQGK7LZeHX+J3+d+RvOqCqq2cGf+zssklMqivDRuH13D
kg0niS5OlKTd5uiaJWw4GV1Qu6RGExqQ8+z6rgCuPHzZgbhMYoO3MbOvA1WU
djgNW8yBiKxxNZ2+MjND0WQke6OzM0ITx6aPFSi6reKBtgBMyn8TwzKRLK1g
hpmiCSP3Rmf3EzTEbfoYhaIbq7IDy7g4m2byynRfG5U3NqaKYHFbOZX6b+ep
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
Kq7/5Ip9/Y/o37keLXsPoJldY0b7xZkcb/QvbtSvUZ0q9U3TaurYawTo2uyT
BEUm8vxuSPZnqa0LjZZaJw1Jt85LbV0AF+/nzdfoK1dN8m3+1tpmQAh3X+T7
LP32Wk4jaVCrpREbHkzQ5fs8DcjSauuMabXM5zy4FszfVx8Uqs+UoN4Zqzsv
0W4U044W63vSYqU2NYjL958SoNNq64rRasX5UcN1NPfX2nI/9i2uNpZ0W3BM
ak/OEpGQd6PBelsCraY3DHUs1wKy7OtkUCSJz+8SEpDTvoUSnaodWrrFeclu
Ai7eN/l5XgVlq9UkO7y6jD4jd2b5MdU9/Kb0ou+Udez7YzuL3JvTuNs3HI1R
S5IuDN9vulPXpj6DF/3AcKcayCoPZE+ROY1UwrbN4ZuVuzjkt4Yxbd+hw9RD
PJQMT5MWjd+YJsjl7fnuZiaqqBX0+ciLg5HJWZpPE8dfXl1wHruWvQe2MLFD
Ez7ZEKn7m+rhedaNakHlSi5M+XEuXtM9GdWpDpWaTea3vcuYOW06U4a1o2Yl
RxaEpEvlKaV3pit1rergMm42M7wmM8rlHayrtWfmX7FZtlvErgyn3SiZT/Ad
UgtFzjiK6jnXfNojV7qxIyUrr29sGsQn49ezf/9mpkv996G7pZYu/jpHlrjz
jnUdxh7XNtbpRB1byKfv2FCjlxdL587Ea5IbzWzrMWjXw9w6l3p1JQO6j2GN
ny/Lv3CgSs336DpgODN3RxWq46lEB6/Gva6cd0f+zPH8Wq3pQGbOGM/EqRPo
915lavXbyj1tORVJk5T6G5sY9Ml41u/fz+bp3Wk6dLfB9Y0G07bzEtd8v6F7
XRvqD17ED8OdqCGT+m17kon7y4suzmNZu/cAWyZ2oMknG4hUlbzcte3jw/Pr
GNWiMpVcpvDjXC+me46iU51KNJv8G3uXzWTa9CkMa1eTSo4L0P1Eu85Fb/wa
EsN8+aZ7XWzqD2bRD8NxqiGj8sA9FDD71GiCV7tTV/4uI38+XlCrGchj3c/C
tjHnm5XsOuTHmjFteafDVA4ZMDaD92rSiPYbQxO5nPbf3SRTFcWKPh/hdTCS
ZCn9SVL6Z7rWxaqOC+Nmz8Br8ihc3rGmWvuZ/BWrMvx8qWFsm/MNK3cdwm/N
GNq+04Gphx5m2VbmDTYN+oTx6/ezf/N0ujcdyu5Uw9/rs6fi2hrSozi28FPe
salBL6+lzJ3pxSS3ZtjWG8Suh2XcEGdcY6FjNXr//NDk+UX1vT/439pzPHup
CDU8/uVTqjefyyWTxOELrq7sTW0LM8ys3mOsX7TJmlJ992f6NuyEz+YpvNfQ
xHG1jCjW9bRF1nA8J7STpmmRrOtTHVmd4eyLy4pZk3wUj/bD2ftEXXy5Sil9
4juEWopWLMxqJHl+zYf2ciVuO7J7Unq0miYuAO9Pe+Hxky9//L6ESX3ep5LS
lfWPDWs1xbt9mDBpMlOnjsH1nUrUdv2ekOxKa1q9M1Z3NLxMu/HUYDtanO+R
4gnw5tNeHvzk+we/L5lEn/croXRdj94sKMaPGqy7hW1Fp9Xm00Wh4KN5+bRa
seWrr/z0aLViw8ggal1PbGUNGX/iufTkaUSu60N1WR2G74vLsnVNMkc92jN8
7xOTn+dVUOpazcySui070blzZzp3ak9zexus3HZIWk1F+JKO2H74A7dyzDb9
EvNaKajSPWsNoypiMW3l1nRZHklmZhw3wh8WGTNJvzCXrsP3kJj9+fm+QVK+
2zPOP3sQIzmASQ6WNPLYyQ7PL1l9I6+l0TzZRA+runic0Iaq5u6PnbF29OF6
dnck/eBwqsqd8LmeFav6/k+SLSn56Mc7WWWovsOyjpY4fHNB91l13Yc2CjtG
HHyeEwF+w+yRN5zIqTSK2JXRtBdLJsEzHAqsT3r2a1+UOVpNpfUBTZl4KsuQ
1HfWsNQ3K12aB6vopqyd58ekuraphwJ5lxXc04WVyuFRdlj12MQTTVa617hW
od3/bujqnyZhJ+5Vbei5+bF+/5JxjqmNlbT+Nix7HDRLRyjsR/JH9thLyuGR
1LR0Zk2MRk+aVFxb6EjTiaey2hUpn9cs9UXv0iNjaVNFsLitHOsuy4nMzCTu
RjgP055Iz2tFXY8TOntS3/2RztaOUjmrXqrctXr34PCqyJ0k29H9JKu9UCg/
4sc7mdn5v4yOlg58cyFTZxeG41cRsbgtcusuLI/MJDPuBuEPiw6AZJybSmNl
a74NyxuTKjaP0y8wt+tw9uQZG4NsZdiP86eItRm9N5mASQ5YNvJg5w5Pvlx9
I5//1q4XaYPCbgR51cCPYfZyGkrlmab3+Z5xYW5XhudFyL5Bkr+2H4e2Kqiu
LcSxqVSHsoyBO2uWojVlQ9/rsydjbY0mTmoLFHK6rLiXZbOphxllZ0WPTU9e
ao2WSWieEjCtNfbdlnGtBAvIMoNn0LyHAb9pKKrHZ9m67Du8J35K62a9WHz2
qQnPpeKfxe2p1XwQHn0a0X74JFzr2TNw5xPjEapus75XQ7ouu06KlF6TtZrE
iz+/wt7qI1ZkL9ZPl2y9iVV7vr+Z9Vl9czlffXtJsjnj5arNKwdljlZD20jS
V1mMVtM84vfP6tHxh5u5czi6dlmr1WINazVl629z22H1nZU4V1TQyvsKqpLU
O2N1p8TtRorBdrQ436N59Duf1evIDzdzc0BXH7VaTV8WFOdHi6ujRUjbzWeW
lgzYlZMzxsvXuFYzIYwXf/KVvRUfrbib1TdMl/xXEyvaf38z67P6Jsu/+lbX
tynR85QxZT4HmnQQjwm7SVFdZUHLwms61dz64UPkii6svK+WbGYtLpZa+zG4
koDTExtSp8tY5hTYZ+rN1gt5GZh8ciJNJb3uuPBaoT5hKg/CbhCXqSHl/lk2
DGmCouFkcpKbfmQU1S17s+Vp9u1p+/iikk2++fRUdrpZYTf6mK7uaLWlk7I+
E/NtQEn/6ytqK9qyKFxVyK5MS7thjGg1TSIHR9mjqNWRcWtP8yA1iafZczqa
h2twtsyn1XjKlt5KlDoNnRX2315NsHT6Hze0Yeu0l4Lm87LXn6nv8mNna0mL
/aN/Tjpbq7XxuV5Aq1m+N4sL2QWQeWEW71m2wSdbaxRMk9RPPDgKe0UtOo5b
y+kHqSQ91TMnmxtXMWmT2t61Lpa6tjG/FaU+COOG1E/XpNzn7IYhNFE0zLXT
kpa7VqsdGVUdy95byPvJF1SyGUjeT3biZmXH6GPpRuLX8Giti9TWSDqlGN+W
pdXa5OpLY3msXXPTsE4Xxs4ptB9764UiGtike5NPMrGpAoXjQq4VqFRan+GE
sv7EfPuw0vnrq9oo2i4iXKXn+TJOM7FhHbqMnVNwv7j3VrRVQZN4kFH2Cmp1
HMfa0w9ITXqK1pQNfa8r9vz2ZEJbw9Mt9M7vwzP/xquJJU7ZfYAiaF4QG3WH
O3dyriiiE0qy5uw5oUtcaeg0g5PxJVODL6PV1DHH+WnuDCZ92Zc29SUNNf0Q
MfqHVAugSXxMbFo6J8e9g/PKaDKTpM9GxxFURK7uTkPXlWi7xpkl1GpkhjK7
mZXUfmj7ehri983CtUU1PpgTKtXxDEK8PVit68wbL9eSajV11HI6WbfEO9/+
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
hBBCaC/RaiGEEEII7SVaLYQQQgihvUSrhRBCCCG0l2i1EEIIIYT2Eq0WepH/
85/X7F/+8pfyhz/8oZx33nnl0EMPLdttt11ZddVVy5xzzlmmnHLKMv7445ex
xx67/Ou//mv5zGc+U/7bf/tvfbH99//+38tYY41VvvrVr5bvfve7ZbLJJiuz
zjpr+dnPflY233zzsv/++5fTTz+93H///eWdd96p5zKEEEJ7iVYLvcBf//rX
8txzz5Urr7yy6rLTTjut/vzNb35Tdtlll7LHHnuUfffdtxx80MHlsMMOK0cc
ccQ/bUceeWQ5+uij+2I76qij/r/jP/yww8tvD/5t2W+//cqee+5Zdt1113ru
9t5773LOOefU15x//vnl4YcfLn/729/K3//+925/5SGEEP4f0WqhrbCbvfTS
S+XGG28s991334c6baeddiqbbLJJWXfddcsWW2xRjjnmmHLuueeWa6+9ttx7
z73l6aefLi+//HJ54403qt3oz3/+c19pj8bm+O6775Y//elP5ZVXXinPPftc
efCBB+u5vPDCC8sJJ5xQdtxxx7LWWmuV9ddfv2y//fblwAMPrOfxkUceKTff
fHO1Wb7//vvdPpwQQuh7otVC26A1aIwXX3yxPPHEE+W3v/1tWWqppcr8889f
1ltvvWpT+/3vf19ee+21vtJgg43zTM89+uijVb/9+te/LossskiZbbbZys47
71zuvPPO8sc//rGeZ3bNEEII3SFaLbQN+uuuu+4qu+22W1lhhRXKRhttVE49
9dRy9913VzsbHcfe88EHHyTW6lPg3DnXbHBvv/12tUWyqV166aVVt4n9Y7+8
5JJLqqaLLg4hhO4QrRbaAtsNf93tt99e7TrbbLNNjTO74YYbaqzae++91+1d
7Dj0EB3KnvXWW28N+ef7Dl599dVyxx13lJNPPrnGtLFlXn311fU7iH0thBCG
nmi10AbYeGgEuYnLLrts1QdnnXVWtaP1EwO1kri7bvL666+X66+/vtrWVlll
lXLxxRdX21vsayGEMLREq4U2IPeQ/23jjTcuE088cbntttv60obDpvbss8+W
yy67rDz00EPd3p3qZ+b/FMe26KKL1rg2Ws33FUIIYWiIVgvdRrwUbbb11ltX
TSBWTfxUP8ai0UE0quOXv9ptmpg2unHbbbet9jXfzzPPPNPtXQshhL4hWi10
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
nJlzQYOpQaJmG/uZc7fpppvW2iFq6jp3zpM8izHJeQghhNA5otVCL9LU+eAn
FcumRplaZWp+yCPVX3zSSSct3/rWt8oXv/jF8pnPfKaMNdZY9fc2bP/yL//S
sf350pe+VL7whS+Ur3/962WCCSYoU089dZl77rnLSiutVLUZexoNx7/M7hZC
CKHdRKuFXkW8u5g1fczVTFNDlv6Q36mPAFuSvASajXZZf/316/+7vfHnTj75
5LXubyfeny94qqmmKt/+9rfLYostVnsjqDWsv4I6vXyb4tDUbouPM4QQ2k+0
WhguiEtTK5afVE8nNraFF1642tl+8Ytf1L7jbYA/d6aZZqp9tTqF419yySWr
PU1fe3F9Yvqa/gghhBB6h2i10MuIrVKfXw8pWkRtWz2cZp111rrRKXvttdeH
vTjbwFBoNbmdeoL+8pe/LDPMMEOZZZZZql4Vm8buJvYvuZ0hhNAbRKuFXqSp
38+Pd80115SNNtqoTDnllOV//a//Vb7//e9Xf6d+oAN7RrWFodBqDeraXnfd
dVWnTTTRRDWGbbbZZqs5GHyh9iV5BCGE0G6i1UKvwdfJTrbnnntWP5/YL9pH
H3W9ztmN5BzQKeq8to2h1GqOX+0S8XwXXnhhzb+g1aaYYoqywAIL1FodanTo
GR9CCKGdRKuFXkAMvNwBdSjUm1CzVSya2vryB9SiEI8mZr7tdqKh1GoDoV3v
vffecsIJJ9R6HYsvvniZZ555ap1hfmK9vdRhCyGE0C6i1UJbkeepf4H8Rb0p
aZtlllmmTDfddNU2tOaaa5Zjjjmm+vJ6KfaqW1ptIOLZjj/++LL66quXaaed
tsw888w1to1v9I477qg5CL10TkMIYTgTrRbaRtOjUv/PU045pfaWGmecccp/
/Md/lB//+Mdll112qbU5erXeRBu0WgNb27XXXlvzMcT5ffWrX606WN1cftP0
XA0hhO4TrRbaAk3wxz/+sVx88cVliy22qH3b2Xxmn3322p9AvTQ9ktRT0zuq
7b7Oj6JNWo0mptfYJtUU1ruLVlOfTV9Q+6he3dtvv93tXQ0hhL4lWi10kyb2
/bbbbivHHXdc1WjyBdREU29j8803L8cee2zNJZDzORxsPG3SagOh2fib+UZp
Y3V0xbOtuOKKZZ999qk9QhPPFkIIQ0+0WugG7GLsY3I2TzvttBrrLi9x+umn
L3POOWfVbPpaqm073GirVhsI/yftzDeqR5V4NrWF+UbljdJsiWcLIYShIVot
DDVsaffff3+11cwxxxzl85//fBl77LFrXqJcAfazNtbaGCx6Qas1sHmKZ1tl
lVXK9773vVq/jo/U9ySeMIQQQueJVgtDAe2lt4Ba+uwz6ujLE6DPdthhh5rn
KV+AvYaWGc70klZr4tl8d+eee27Zdtttq1abZpppyqKLLlp23XXXxLOFEEKH
iVYLnULNWr2MxDmpf6YOGm3G17nSSiuVHXfcsZx++unVxqYW63CIRRsdekmr
DYRmu/vuu2v84IYbbli12rzzzlttbvvtt1/tH6HGSgghhMElWi0MJk2ugPpd
ehvpP6m/kXgnfSlpNbaYm266qbz22mvd3t2u0KtabSDi2Wi2lVdeufZA+MlP
flLr3Ylxo+doNvXxQgghfHqi1cJgwvZy4403ll/96le199OXv/zl8p3vfKes
s8465ZJLLqn90/vFfvZRDAetBt+jfqtXX3111Wzi2f793/+9/PSnP606Tg+J
EEIIn55otfBpYT9Rc4MfTL8iuZzi0RrfmNh08U7saPqt9zvDRauBHZVe0//r
rLPOKltvvXWNZ3MNsKHuvvvu1c6WfqMhhDDmRKuFMUHPAPpLXY099tij9k0X
v6QmF5/n3nvvXWva6qHeqzVrO8Vw0moDYVOVZ3DUUUeV9ddfvyyyyCI1ns21
ccABB1TNnni2EEL45ESrhdFFrsArr7xSNdrll19eNZr+nFNOOWWNRVOL64gj
jqiPJ1bpoxmuWm0gjz32WK3rscIKK5Qf/ehH9XjXWmutmgcs31d/ilwjIYQw
ekSrhdFF7dpTTz21/PznPy/jjjtu+drXvlZmnHHGstNOO1U/l5yC9I8cNf2g
1VwDroVXX321XHHFFTWeTb9R14xax3IQEs8WQgijR7Ra+Cia/pyXXnpp7RPJ
v0ljzDXXXNXHxW4in5OfUzxSfJ2jRz9otQbxifJJ1GU544wzylZbbVVzD9hh
9RLbc889E88WQgijIFotDKSpuaFH+sknn1y23377stxyy9X+nEsttVStq3XY
YYeVG264oeq46LNPTj9ptYHIQdCfip983XXXLQsvvHCZb775anyj+nvXX399
vaZCCCH8M9FqAXIFXnjhhdq7W76Afpzm0ammmqrWztLL++yzzx6W/TmHmn7V
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
d/J3/o//8T9q3meb49NGpG1aDXSu/dIv9KSTTipvv/12t3cphL4lWq3zRKuF
0Fn0IafTfvSjH32YR9Dm+LQRaaNWe/HFF8vJJ59c+4Wq5XHBBRd0e5dC6Fui
1TpPtFoInUH9NH5POk18Gnua+DT9pHqJNmo19Tr0B1133XVrPwP7p2ZufKEh
DD3Rap0nWi2EwYfd7Lrrrqs6baqppqp9Pi+66KKerDHRRq2Gd955p9x44411
//QLPfzww6svtBfPcQi9TLRa54lWC2HwaXTaZz/72arTeik+bUTaqtUa9tpr
rzLTTDNV+xrbmj4HIYShI1qt80SrhTC4XHbZZbWv5xRTTFH9nvpItb0ux8fR
dq2mn/uWW25ZfvCDH9T9fPDBB7u9SyH0FdFqnSdaLYTBQXwae9rqq69efvrT
n5YVVlih6rRei08bkbZrtT//+c+159TSSy9dJp988nLMMceUl156qdu7FULf
EK3WeaLVwkchfpvO0NuH7eKee+4pd9xxR60/etNNN5UbbrihXH/99VWf9OPm
+MVLORfOiVzEDTbYoEw33XTV70k/DIdY97ZrNTz33HPluOOOK9/73veqTVPu
bfqFhjA0RKt1nmi18FF88MEH5Q9/+EOd98Rtb7/99mWNNdaoc/f0009ffU7j
jjtu+cpXvlI+97nP1disftj08PzqV79adYF7Z+aZZ659j9SOWGqppcomm2xS
zj///GHTr7IXtBqeeuqpWhNlkkkmqd9BL/udQ+glekmrGRd+//vfl7PPPrsc
eeSRZY899qi1tc1tfCHGcOP5vPPOW+aaa64y55xztmKbZZZZyhe/+MU67w72
ezvO+eefvyy22GJl2WWXrePoOuusU7bddtuyzz77lGOPPbbaHh566KHy7rvv
dvsr7Gv4kV544YWaqyhWmy5TE971u9VWW5Vdd9219l886qijyimnnFLOOuus
ct5551Vbku9Qj8vLL7+8LzZ1WB0zPXbuueeWM844o/zud78rBx10UPnNb35T
Nt9883qdr7/++mXHHXes5/KII44oN998c81d/Otf/9rtr/sT0StazRjCvrnQ
QguV2WefvRx88MHpFxrCENBWreb+V9tHDPGJJ55Y/UDmLmMDDbLnnnuW3Xff
vc5vO++8cx2/jdfbbbddnff6adt6663rce+www513nJOdtttt3p+aIL99tuv
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
a/7pJt7eWrDpT6G+Hj1srOk1XEf84a4v1wWtb2wb7FgWa2NzhfPE3ssP82nu
MfYC17it2/bvwaS5d81f5lj1opv4htDbdEOriWngJ+JHsfbvNjST/eDzYxth
O2NbMkeJ2bFeUaeb/mJrltPHnuD55iZ+w5lmmqm+7uGHHq7+FeOJGFrztxwf
upSPif+FjYM2bGsdWufDnG6f+c7C6EHbir00T7VFh7M/mN9cd2o1gV6g19jb
Zptttmrbaa57eX3mQOO93/1voPZikzMnW6e4xuk787XX02ptrmPmuMRWiSd0
73aDZqyRd6KnqRzKGWaYoWod9fZ6CZrTOMlnYI3i52DbVb2Xc2bNaC3se7Ou
+LT5X8Zx14JtOPZdYEvj2zHP0mzu1dRy7G26pdUmmGCCGgfZhjmt8f/zxfJb
skM0OdDGI9rMnLbccsvV8YKtnx9IDoKYE3Y1usaavan7ZhxhTzOHWdOwqbFf
sNXJu5Y/1dYxwnFbn7nHxQaH0YNNSp8va/62fLdNHih7bxO/0sx/bCBsvK5h
+tJmv33/tFpTR3lUWs090gtajT5VF2HSSSet92o3cN59J/IijSm02hxzzFG/
H+u3XoKd1TXyzW9+s47lzu9gx6I5X64pNl6+DeOq7dPWJrS+5rO3Dcfee84N
O4L1GTsCGzr7d+hduqXV9KVmV2tTjIZ5iI/HmNDY+2gW+6tvQhMrS7vRdeKv
3Q/+FvcjRmMg7BL8pmwb5nHaTryQNXWbtZrx0T7Tn3xgYfRo6uabh63724Br
TMwlmx9/pXWIGqT8Vq5F/jfXphgj16q1iu/f+sLxGONHptXcB/ygXk/jsTm3
XavxocljUp9YXE+3YPNo4rtoe+fNd0Ef9xK0ujHCteV6GOx1t2vXuod9yJrC
vcWmZry1vjD20ouuW9ep69jawjUI17h1ijWz57ienXd+D/8zZtvknLgexA02
dV4cm3vCHMWW571gXvA/rzFXuNfZnttYD4eeZXOwv+wD5rXQu3QrXk3embgu
cQhtwX6pQ6XOmPW3+gtNvwT+Ij5M85Pxgl/TONJoNfeCcWEgtJrXuF+MI15n
bdN2rWbuNZbJAefHDaOH+Uoso15o8uFo/G7T1PKX70CnmV9cu65JetwcJeeA
frOx/RrjzYViuK+++up/0l58445NXIA5z/qE9pCDwtbW1twCc7T6oXPPPXe9
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
3XTTsuGGG5b111+/rLfeeq3Zxh133DL99NN37P0d869+9auyxRZblG222abs
tNNOZd999y1HHnlkOeOMM8oVV1xRHnzwwfLaa691+2sMPUq0WuglotU6T7Ra
wOuvv14eeeSRcv3115dLLrmkXHTRReXiiy+u+mO//farGm3rrbcuG26wYVlz
zTXLKqusUn7+85+XJZdcsiy22GJ9tS2xxBJlueWWKyuttFJZffXVy/rrrV91
229+85uy995713n2zDPPLJdddlm54IILytVXX13uueeeOu/+n4xnYTSIVgu9
RLRa54lW618++OCD8s4775R33323/OEPfyjnnXdetZcttNBCZYoppqi2qY02
2qjsueee5Xe/+125/PLLy/333V+eevKp8tJLL5U33nijvtb79BPvv/9+efPN
N8vLL79cnn322fLQgw+VG66/oZx++unV9rjllluW+eefv0w00UTlJz/5SVl7
7bXLscceW+67777yl7/8pZ5zP0P4KKLVQi8RrdZ5otX6k7/+9a/lueeeKyec
cELZbLPNyqqrrlr9ewcffHA566yzyg033FAeeOCB8swzz9T54tVXX61+0ffe
e6/8+c9/rq//29/+Vv7+97/3na3IMdOnzgHN9f5775e333672ibdT87ro48+
Wm6//fZqmzzqqKOqBnaO6Tb32t13313PYwgjI1ot9BLRap0nWq2/oKv448Sg
HXTQQTUGX7zVYYcdVi688MJy//331/mBvazfNNhg4tzRcmLW6LZrrrmmxvzt
uuuuZfvtty977bVXOemkk8rNN99cdXAIA7n33nvLcccdV+/DENpOL2k199QL
L7xQY4rvuOOOcuONN9Y4FTErYn/Mg+eff371M7VpM398+9vfLmuttVZHP8ex
i91xLi699NJy1VVXVduNc8V+8/zzz1ffUOgcb731Vr0u2XnY0sSdsaPdeeed
1Z8ZOgvf6ZNPPllOOeWUGt+2xhpr1PPvnnD9hxBCL9Jmrcb/Y+xt4nX4QGgO
eWDG32233basttpqZb755iszzDBDmWyyycp3v/vd8h//8R/ly1/+cvnSl77U
N5tj/s53vlMmmWSSMt1009VzsvLKK1e/kPie0047ra4j+dj4l/jZbOwSYXBw
jTq/cjfnnXfeat95/PHHB/Uz2JJsPsv94Wfzv/DPiPeTfzDTTDPVPNqHH364
7+L+QgjDg7ZqNRri6aefrraipoaBfDB5YfSHeZBP8cQTTyznn3d+ta2xsV13
3XXlpptuKrfddluNZemHzbE6ZsfuHIhPZ1/j/xGTsccee9RzRrs5fzQun5x5
7Iknnqhzfub6T88tt9xSjjnmmDLBBBPUGDXXr7XGYEJreE+6w/cult69Qn+H
f8Z5eeWVV6pNUy7HBhtsUGPbotdCCL1Gm7Qa+xn/hTgfWkMtg913373myNnU
V5LrRYuYF81Tni9XTM4Y/555zBjdT9qjidtx7M6Bc2GOUruLHfLWW2+t9ajk
GTqHzfl0bsVQqR/Bh/rYY48ldmMMcP7FoDmnK6ywQj2vrstOaAJ+vKOPPrrm
JljH8HGzj47pZ7lmxOnT7MOxVhkN695w7a+zzjrVvmbskKMQ+g/rUnnF4tTM
MSH0Cm3QavK8+Ir46NiG2IHY0NZdd92qLcRdeVwsUOwHYw5N0ehh9VfFvZu7
2NvYKZ1n+lcNsMG2Bw1n6CQ+ZtermMRO1djwnr///e/L0ksvXU4++eRap833
5bsa088TQ8cmS6/73ocrzhFbp2ud1mWXDP2H6929M88885TNN9+827sTwmjT
ba3WxNzI1bLunXPOOWtMNnvBYKzzB8b32Jr6B/1kd/s42OD4UflFxVipv8qP
2tSLCKPGWkMOgTqtzuVg01yvbKbui2WWWaauawbW82jsR2pU2GiT5vtrrv+m
/kVTD8T/xHSdc845NReCvWnEGDi/e42teU1z73iu/zc/m/dt673FzizPZ+GF
F65rwtBfuE5pdHWWf/SjH9UxL4ReoZtazbhurhBXZb278847V1+dMVWM9mBo
Be/R5CSI73Gvtnk+GWqa86PGl5oHasKrF+874W9L7sGooVMWWGCBGlfZCT+i
a5U9gL5wj8w111w1VpNtlO/S4+4jflFxnTY1xvi1m9ezx7En8NPSlOyA8lXF
E4hlZBNU40I8l/guNmx+QveMa8KxiUmg55p7h6b3mHvW++q54DlttX3TuvKj
xxtvvLrPob8Qp8CXcMABB5RFFlmk3gch9Ard0mrGc1pALr15jt/TPMDOM5jw
nYpNYDsQ32PuYXMY0/mEf0t8jxr0g72v3YY+vuuuu2q/I31+zO3i49s697YF
Wm322Wcvu+22W0d8x7SRa41NzWewC8lhYIu2rqG3mz5VJ514Uo33ZHvj6/OY
71Wcp/uAVhGn09RxoffUItt4443rHEZ/sdnR73yjhxxySDn77LPrvXP44YeX
I444orz26mtVw9sHn8NWJTebnpOz0tbrxT473q997Ws1Fyn0D9Yd7gt+T2sR
dvAdd9yx27sVwmjTDa1mzLTGvfLKK2v9o+WXX77OOYMd4+P9zD1yH8034nvU
ZuOrGdP5RMw+ewT7g7iv4YZz5hjFC4qTd97Erid+7aOh1eQZ0irO3WBDq7lm
xZPJe2aDZgO11mHHMw/98pe/rLVZXn/t9Xpts6vRauxjtJe1EJ3W+DYbnyo7
M/3FLsYOx74qV8fnicffZJNN6vu7Z8W07b7b7uXOO+4sb/3prVo3x3G7F9Sa
pe3UNWurVqNZrQ0nnHDC2NX6DNcmm7R4UnEKxjd5wdby1t9tvWZDaOiGVjO/
mDfESOtNPdg5AwPnIvOIeUzuz8BYtYExPM3WaMUm/qepYdXE8Pif96Ff2DHM
gSPGwPm9eU0TT9QwsCaWnwM/s004DnYVPi3fj++KLTGMHN+j3lHW6ey2nYqH
pIfkfzRzDFzj7GNiPNVg8bmuLXYDMWhqR7N/savpuTTiftGWbGae08TaNdpQ
vRear7m+2Vw9jx1N3wXv3zzeduy/3gZ0qXgl67bQP7BHL7rootUuIJ9qmmmm
KT/+8Y+rH9R1kbVoaDvd0GrmD3OL3jt6DQyMVx4MvB9bgLWz+FGxCfw/7GHs
BuYyNgkxWfw/TXxPE29snjJvyRsTw+M+Zz/no7W/4nvkQbBjiPeh2dzr5j1z
QBPfwy4hTqiB74ktgn6Ud+lzTz311EE77sGi0bGOxbHrLZ68uY/GuaLfaVvX
G/3UibyMkWk1NgG1VtTf1dec7ci1O/PMM9faIV7DHuZac+2OqKvcJ96Tf5Pt
Ac2awz2z4YYbfpjX6n7aZ599ag0Yn9NLWo1t2P2qRrT70vwc+gfft+vbHOD6
5TOwntELLvUFQi/QDa0mBkp8NN3Sib4v5hWx2OYWWkxMjdgr9yi7mNgf47aN
T4kmEzMnpo2NhM1AnI7H6Coai02B/aKZ98yX7A58Uf5Pq/HpmvPYN2g7x+c9
7Iu5m4bjv/J55lXvI0aorehjyoYy44wzVj0aRg5tQ8u6nvj0xcSYGwbbZjoy
reZ6pbe22Wabej35vmgsNQnEr3mMr54PlA2BPbhZdzQ9SflWxZl5Phuq69jr
xMfVGLj/XNPIW3A9y2ngI+X35WO1Zmlzno452L6KT7M+pC3F6qXfV3/hGnCt
8xfYrEGsq+L/DL1CN7SauUPOtHU5G9Zg496jneT9mJvkuLE1sOfxv/r8pZZa
qs5rxmz2sGWXXbZqNX/TdDvssENdgw30mbrH+ZHUj2VvMq+x03m9scBcbT6k
Bc3T9Nj+++9f7rv3vrqu955yLGlIaznzh3mzrTgmMeN6Vznu8PG4bvgIJ5po
oqrZaaDBrC3MlsVOO+Iax/VO/1uXiMmxLmG3FZvlmvW4NYbH5BCwjbnW5ZA2
vdusTbzG+oPWo+No9abeoXWG654dudFm1jHWGm3VasYW50k+AS0rB1D8ahvj
DsLQwhfungmhV+iGVpNHMPnkk1cd1ck4AXMNm5j1k99BR4kpYg+gmcwz7ARs
b/xY5i/zrfmKrWTEecjYT1/RmbQgmvgefk9zQqPtaD3vpT4CDSh+2+O9gmOi
N2k1voIwavg/+ch/+tOfVu1Erw1VTT/a+uPupxH76zYMjO90nTb7O+J790L9
loFxo+5VunWqqaaqMeXxe4YQepVuaDW2KPG97FBibTrFyLQaGwLbhFgFdi12
NraCSSedtPp0Gi22xRZb1HitEe3j6lh5HV9Qo1+auUGPBbYzNjR/s12wgfCf
mh97TaupS8I+JMZHffwwaugd15c1O5/biiuuWL93NrdO9zVyzX2cP2dgzsxA
LTZiP/iR6cpRvXdbcO/xD8ulkO+x6qqr1nWVdVkzBoQQQq/RDa1mzOQbFF8j
nuvT1NAY1eeMqNXYB/hA5QLxCZlT+X/kBPGJigliL5P3wCfEvsaXJMbFY3yX
5mJx5I1PSFyPOZqfif6UL0DvOUZzhteZA+Up9EKt7MZO2MQj0aBNfFQYNc6f
2jB85M4hvziNzo/ITkm7i5t0zfSC/mkrzrP7mV1czCifrDWUe8z9a53kPkx8
Wgih1+mGVqN3jK3mLjGeTfzWYM9b7Bhyf6yrB9o0fBZ9Zv6kx2g0/ip5AuZP
m1hqY776UuKr1TUwv9JcbGtieLzW+/CzmAvY5Njc/J8uY5MaWBtA7Sn70mZ8
B3QavUqnifV76KGHOlI3bLgzMN/YNeFastHwTd6KerZ87dYP4inperZf9qGB
vaDaGhPWKRobX+PXrf7Z19+o9x67PHu8mqbyIOhf6yZrP2sw9634CnZvrw8h
hF6nW30LzD1yC+VOjzvuuFUbDHadg4F5ASPz+ZgDbCM+r9ma3CHzxMAeiY0/
SKx3k0cwYo017ztiL6te6EPqO2Cn2HLLLasPj9bthf1uO64Jtl02Wnmi+t6O
P/745Yc//GGt/6c2Gx1Pv91z9z01brLJhelUL/g24/5xb9Fm8sYfuP+Bcs3V
11Tdax1kjTfLLLOUccYZp0w99dQ1/7apxTGyeLsQQuhluqnV2LrEQekXrreA
9bH8s6FiVDE4TWzPR8X3NPVuR6YFeyW+ZyA0Gvuh70O+oNxP31HmvcGBtmc/
Yw+SdyI/kS2Xn10+pboZ9LFYSmsYucpqA6pvI1ehnzZadsEFFyxLLrlkzZ1W
Z941yf7NHs9uRveKP5CrKs9bHgf7b67XEMJwo5u92xsbDpuatbIYMLFR4nys
pfmBQmdhv9CTgB9arJ3vgGYQk8em0YmaruEf8MXz57FdsqeJc2Rbo9uaGsxi
Kpt6zZ3cvvvd75bZZput458zuptjZmuUW62mrzgEMQV8x3ph0We0WafzNUII
oQ10U6uh8TWar8TxiOfhf2NrYHcwHvMdieEZ0acYPhmNLZBPl0YW88MuIb9C
7J5zTyOoQUUn51z3D3SaHOYQQgjto9ta7cP9+PvfP7QzsCvMOuustV7+aqut
VrWE3DmxO73mV2wTzp0YIHGCbDhquM8000xl+umnrxpNrmf6rfQn0WohhNBe
2qLV0OTfi2GTP6cmlZoHfCLiVdSrFUNMy4kx5iuVj/+HJ/7wYRw2rdGpGiBt
pamxwfboHIj5UxtNXJSaIvJP+TfldIqBUnOKHU3tbnFTnu+c83kmb64/iVYL
IYT20iatNhD+TjY2sddqYvCH6nekT4zYYnYgNUb9tIlpEd8jvkW8lU2sTz9s
zfE6drUhnIu99tzrw3Njc86a2m/8nn6qdyDWvcmPCP1LtFoIIbSXtmq1EaEl
2MzUolLflr2NVlP/oLG5LbroomWOOeYok002Wfn85z9fayKocdtr27TTTlu+
8IUvlLHHHrsey6iez4/JZ6xf98ILL1yWXnrp6jvedNNNq24Try4eWw6HXMQQ
RiRaLYQQ2kuvaDU0tTDYgdjd+Ots/H/Npl4tO5yaberUDnysVzZ5mepuqZ3B
njim79OcH+fKOevHmqph9IhWCyGE9tJLWm10uOWWW2oPxummm66ceeaZ3d6d
MUL8v3pz5k99wBPvHzpNtFoIIbSX4aTV1FriG9WHXa8ZeQe9CJsYncmfqQ6q
OD36LYROEa0WQgjtZThpNXmjG2ywQY1TE5+lt2KvwpYmX0A82mKLLVZ7G9Jw
IXSCaLUQQmgvw0mr6Xkw++yzl8UXX7zmkPZ6bJa+Ofoe/vu//3utE6xHZAid
IFothBDay3DQauLm9TcQp6aPoD40wyHf0TGcffbZtUe1HolyJtJ3K3SCaLUQ
Qmgvw0GrqQF76KGHlrnnnrvWeX3qqaeGTR9L9c/YC9Xu0GdAbbQQBptotRBC
aC+9rtVoMnpmkUUWKfPPP385+OCDu71Lg4rjoz2XXHLJMvPMM5dtt9225hkk
LzQMJtFqIYTQXnpdq+lJxU/43e9+t2y88ca11+VwQ07B+eefX+add96q1y68
8MKaexDCYBGtFkII7aXXtZrcTzVj1fo/7rjjqj90uCFHgiaVF6o/gbxQPQjU
uA1hMIhWCyGE9tLLWk09tWOOOabGculLftttt3V7lzqKWLX11luvfO973yv7
7bdfeeyxx7q9S2GYEK0WQgjtpZe1Gm2mpgXtcs4555RXXnml27vUUeSAOs6p
p5661iY55ZRTyrvvvtvt3QrDgGi1EEJoL72s1diW1OjQs138fa/XUxsdHKf8
ifHGG6+sueaaw96WGIaGaLUQQmgvvajV5EY++uijZeWVV65a7fjjjx8W9dRG
h/fff7889NBDZbnllqs117bbbrsao5e80PBpiFYLIYT20otajTY5/PDDaz01
eQVqdvRTnL28UP7PBRdcsMwzzzy1n1a/aNXQGaLVQgihvfSaVvvggw+qH5Df
c7755isHHnhgt3epK9Bm5tbpp5++1l6TF/qXv/yl27sVepRotRBCaC+9ptXU
rhBfL59go402qj3N+xGxeTfffHPNC/3a175WY9j+8Ic/dHu3Qo8SrRZCCO2l
17SaWPrVVlut5kIee+yxfV0T9o033ihnnHFGmWmmmao/+LTTTku/0DBGRKuF
EEJ76SWtRpvQZ5NPPnlZa621kgP5nzzxxBNljz32KJNOOmm1sd1yyy3d3qXQ
g0SrhRBCe+klrXbHHXdUv6d+Uv1QT210kFPR9EPVf2r77bdPXmj4xKy00krD
rpduCCEMF3pJqx1wwAFlrrnmqrqEPoke+QfqeJx55pm1X6g6Hpdeeumw7LUV
Osdrr72WayaEEFpKL2g19dQef/zxsuqqq9Z6avygqVHxX9CsL774YvVhzTLL
LGXppZcuDzzwQF/VMQkhhBCGK72g1az3jzrqqFpLTP1b+Y70W/hnrrnmmhrH
J0c2eaEhhBDC8KDtWk09taeffrostthiVavtv//+3d6l1qI36Nlnn1172bM/
nn766dU/GkIIIYTepe1aTf6Auvz6X+rTftddd3V7l1qLmmtsafqkjj/++GXd
ddctd955Z7d3K4QQQgifgrZrtdtvv7388pe/LFNNNVU5+uijE6c2CtRXE6u2
1FJLlTnmmKP85je/qT7kfuhrH0IIIQxH2qzV6DJ92aeYYoqyxhprlFtvvbXb
u9QT6Bf6u9/9rsw///w1N/SSSy7p65rBIYQQQi/TZq3G37nJJpuU73znO+Ws
s85KPbVPAJ277bbblmmmmaYss8wy5cEHH0w+RgghhNCDtFmrHXTQQTWfYOGF
F65xWKmnNvo4VzfccENZZ511yv/+3/+7HHLIIbXnfQghhBB6izZqNfYfvZP0
/ZTPqF5H4tQ+OeqbnnrqqWWGGWao/lC9Q5MXGkIIIfQWbdRqYuHVu9WPfMUV
V6x1cFPXdcx47LHHys4771wmmWSSmkerT1cIIYQQeoe2aTW+u2eeeaYsscQS
Vavtu+++3d6lnqbpF8qu9pOf/KTsuOOONVc0eaFhZLgu1DQMIYTQHtqm1V59
9dVy/vnn1/pgG2ywQexAg4AauXyhYv/U8bj88svT+zH8f4g9cF3oV/aXv/yl
27sTQgjh/9E2rUab6ZM05ZRT1ji1N998s9u71POwVT7//PM1L1S/0J///Oc1
LzR+5dAgx5qGl8/jvttnn32i6UMIoSW0SaupAaYuGJ22+uqrl5tvvrnbuzSs
uPLKK8svfvGL2i/0sMMOS15o+JCXX365XHrppbWPrHvQeoleo+lDCCF0lzZp
tbvvvrv86le/Kt/61rfKmWeeWeePfoZPSmzZG2+8UX3DzsdLL71UXnjhhQ83
9rLR3eQZmIvV8OALPeGEEz7R69u4DTwXfHd//OMf67lyzt55553YDj8hbLDO
2eGHH1722muvctFFF3V7l0IIoe9pk1ajI9TZX2ihhWruZ7/HOIsze/TRR2s/
1COPPLLssssuZf3116+1beebb74y22yzlemnn772av/BD35QJppooo/dJphg
gvKNb3yjfPazny1f/OIXy7jjjjvK17Rxc6yTTjppmW666crMM89c4/D01FJL
Tk+tQw89tPawv//++1Pr5RPgfqNx77nnnnqd0WoPP/xwt3crhBD6njZoNfYj
uYr8nuqpWdP3W5waW4b81yuuuKLqsnPPPbf+3HXXXctuu+1W9txzz+qTOvDA
A8shvz2kbr/97W/rRuOqdUuj9MPmWJtj93v9++DflgMPOLDmDTtXzhlt69xc
cMEF5Zhjjqk2ImsA11vyYP9/3INq8G288cZ1vbT33nuXZ599ttu7FUIIfU8b
tJr4ZX0/2UeWX3756qvrB9+VXDt+u1tuuaU89NBD5eqrr646lW1IDqye9Ztu
umnVbHpseZzN4+mnnq6+PjYQ507/z37q6UBnOXfsjjS9uHg69/777i/XX399
tUPSZttss03V/+uuu2759a9/XXWb3qh6YNx2223l6aefTm3gATgvtJrzxkZJ
71577bXd3q0QQuh7uq3VaIznnnuuLLnkktWmxnY03KE1aCzxZ/ozyL1jx6BV
11tvvXLaaafV2D19B/pJgw02zXmmg9kpt9hii1pnbtZZZ6065L777qs6j5+0
3/3tI6I/GX271VZbdXtXQgih7+m2VhMHzkcllopOYe8YztAPfHCOk17QR4vt
TP2zO++8s+pW9jI5BfHVfTqauq5sZ/SY/AP6jN1N/RI5sX7yO6c+8D/z+9//
vuy33371Gg0hhNBduq3V6BM+qimmmKL6+uiU4QrtxZamhtxOO+1UdQKf53XX
XVc1Gr3waWGHo03U42BP4ufzubHP/QO+U/5j9WCOO+64ajuSe3zjjTdWLdcP
vveRwb5Lw6rlwg8q5o/PmN89hBBCd+mmVuOfUjdiqqmmKqusssqwrqfGZsOG
eO+999ZatOKB5CqqwTGY0ILXXHNNueyyy2os/a233lq125hqNdrm9ddfr+8r
Pmw44ftQc4491/VHl/CJ9qN9Tb6nmNHtt9++ajR5BWL7+OFDCCF0l25qNbqF
/0/tiNNPP73aO4YjjS9OXVE5A+pNyBEYbBuOz7npppuqFjz66KOrnYRWo7HG
VKvRafy1V111VbXRDTd8L/TI7LPPXhZffPGq3Zyrfoxfs3Zq6talx1QIIbSH
bmo19RfEei+wwAI195OvbjiiJitf75ZbblmWXnrp6gM1Lw62/Yb9jG1o5ZVX
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
W7Zs2bJla+f2fwE0vLQ1
    "], {{0, 658}, {619, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{619, 658},
  PlotRange->{{0, 619}, {0, 658}}]], "Input",ExpressionUUID->"86fcd7fb-b71d-\
45d4-a557-59f8dbaa391e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tokenSymbols", " ", "=", " ", 
   RowBox[{"CreateTokens", "[", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\< \>\"", ",", "\"\<Whitespace\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<*\>\"", ",", " ", "\"\<*\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<+\>\"", ",", " ", "\"\<+\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<(\>\"", ",", " ", "\"\<(\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<)\>\"", ",", " ", "\"\<)\>\""}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.757707294752634*^9, 3.757707329734219*^9}, {
  3.757708239562243*^9, 3.757708247301545*^9}, {3.759086501427743*^9, 
  3.759086507555414*^9}},
 CellLabel->
  "(Debug) In[98]:=",ExpressionUUID->"478722ae-2361-477f-afb1-f1ba00b38f86"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tokenSymbolsNFA", " ", "=", " ", 
   RowBox[{"SimplifyMachine", "[", 
    RowBox[{"Apply", "[", 
     RowBox[{"RegexUnion", ",", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Regex", "[", 
          RowBox[{
           RowBox[{"#", "[", "\"\<Symbol\>\"", "]"}], ",", 
           RowBox[{"#", "[", "\"\<Name\>\"", "]"}]}], "]"}], "&"}], ",", 
        "tokenSymbols"}], "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tokenSymbolsDFA", " ", "=", " ", 
   RowBox[{"NFAToDFA", "[", "tokenSymbolsNFA", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellLabel->
  "(Debug) In[94]:=",ExpressionUUID->"15acb236-56b7-4cc1-b451-d8875433ab43"],

Cell[BoxData[
 RowBox[{
  RowBox[{"idLiteral", " ", "=", " ", 
   RowBox[{"Regex", "[", 
    RowBox[{
     RowBox[{"NFAToDFA", "[", 
      RowBox[{"RegexConcatenation", "[", 
       RowBox[{
        RowBox[{"RegexDigits", "[", "]"}], ",", 
        RowBox[{"RegexStar", "[", 
         RowBox[{"RegexDigits", "[", "]"}], "]"}]}], "]"}], "]"}], ",", 
     "\"\<id\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.757707435613834*^9, 3.757707445582955*^9}, {
  3.757707552599408*^9, 3.7577075680345592`*^9}},
 CellLabel->
  "(Debug) In[96]:=",ExpressionUUID->"f2c94aaa-b307-41d2-9aa5-afcde986fc64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tokens", " ", "=", " ", 
  RowBox[{"Tokenize", "[", 
   RowBox[{"\"\<56*(23+1+6)\>\"", ",", "tokenSymbolsDFA", ",", "idLiteral"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7577075887691603`*^9, 3.757707619469573*^9}, {
  3.757710161500033*^9, 3.757710163165203*^9}, {3.7577113871881037`*^9, 
  3.75771138942542*^9}, {3.757712097580559*^9, 3.7577120987472267`*^9}, {
  3.759095430758589*^9, 3.759095430992938*^9}},
 CellLabel->
  "(Debug) In[99]:=",ExpressionUUID->"3a4b5cb8-85ab-443d-8f69-d704df1dd23a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"id\"\>"}], ",", 
     RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"56\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"*\"\>"}], "\[RightAssociation]"}],
    ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"(\"\>"}], "\[RightAssociation]"}],
    ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"id\"\>"}], ",", 
     RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"23\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"+\"\>"}], "\[RightAssociation]"}],
    ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"id\"\>"}], ",", 
     RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"1\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"+\"\>"}], "\[RightAssociation]"}],
    ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"id\"\>"}], ",", 
     RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"6\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\")\"\>"}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.757707632094186*^9, 3.757708017309382*^9, 3.757708255185412*^9, 
   3.7577083513956738`*^9, 3.757710164314489*^9, 3.757711390387309*^9, 
   3.757712099833054*^9, 3.757712232228537*^9, 3.758052507637743*^9, {
   3.759086525606614*^9, 3.759086538202701*^9}, 3.759095436889572*^9, 
   3.759095491434111*^9},
 CellLabel->
  "(Debug) Out[99]=",ExpressionUUID->"8ae06777-90ef-49bb-aba4-4cb62173ecfa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"grammar", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<From\>\"", "\[Rule]", "\"\<E\>\""}], ",", 
       RowBox[{"\"\<To\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "[", "\"\<T\>\"", "]"}], ",", 
          RowBox[{"NonTerm", "[", "\"\<E'\>\"", "]"}]}], "}"}]}], ",", 
       RowBox[{"\"\<Code\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Add\>\"", ",", "t", ",", 
              RowBox[{"#1", "[", "\"\<Value\>\"", "]"}], ",", 
              RowBox[{"#2", "[", "\"\<Value\>\"", "]"}]}], "}"}]}], "}"}], 
          "&"}], ")"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<From\>\"", "\[Rule]", "\"\<E'\>\""}], ",", 
       RowBox[{"\"\<To\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Term", "[", "\"\<+\>\"", "]"}], ",", 
          RowBox[{"NonTerm", "[", "\"\<T\>\"", "]"}], ",", 
          RowBox[{"NonTerm", "[", "\"\<E'\>\"", "]"}]}], "}"}]}], ",", 
       RowBox[{"\"\<Code\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Add\>\"", ",", "t", ",", 
              RowBox[{"#1", "[", "\"\<Value\>\"", "]"}], ",", 
              RowBox[{"#2", "[", "\"\<Value\>\"", "]"}]}], "}"}]}], "}"}], 
          "&"}], ")"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<From\>\"", "\[Rule]", "\"\<E'\>\""}], ",", 
       RowBox[{"\"\<To\>\"", "\[Rule]", "EmptyString"}], ",", 
       RowBox[{"\"\<Code\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"_", ",", "_", ",", "_", ",", "_"}], "}"}]}], "}"}], 
          "&"}], ")"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<From\>\"", "\[Rule]", "\"\<T\>\""}], ",", 
       RowBox[{"\"\<To\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "[", "\"\<F\>\"", "]"}], ",", 
          RowBox[{"NonTerm", "[", "\"\<T'\>\"", "]"}]}], "}"}]}], ",", 
       RowBox[{"\"\<Code\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Mul\>\"", ",", "t", ",", 
              RowBox[{"#1", "[", "\"\<Value\>\"", "]"}], ",", 
              RowBox[{"#2", "[", "\"\<Value\>\"", "]"}]}], "}"}]}], "}"}], 
          "&"}], ")"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<From\>\"", "\[Rule]", "\"\<T'\>\""}], ",", 
       RowBox[{"\"\<To\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Term", "[", "\"\<*\>\"", "]"}], ",", 
          RowBox[{"NonTerm", "[", "\"\<F\>\"", "]"}], ",", 
          RowBox[{"NonTerm", "[", "\"\<T'\>\"", "]"}]}], "}"}]}], ",", 
       RowBox[{"\"\<Code\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Mul\>\"", ",", "t", ",", 
              RowBox[{"#1", "[", "\"\<Value\>\"", "]"}], ",", 
              RowBox[{"#2", "[", "\"\<Value\>\"", "]"}]}], "}"}]}], "}"}], 
          "&"}], ")"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<From\>\"", "\[Rule]", "\"\<T'\>\""}], ",", 
       RowBox[{"\"\<To\>\"", "\[Rule]", "EmptyString"}], ",", 
       RowBox[{"\"\<Code\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"_", ",", "_", ",", "_", ",", "_"}], "}"}]}], "}"}], 
          "&"}], ")"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<From\>\"", "\[Rule]", "\"\<F\>\""}], ",", 
       RowBox[{"\"\<To\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Term", "[", "\"\<id\>\"", "]"}], "}"}]}], ",", 
       RowBox[{"\"\<Code\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Value\>\"", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"_", ",", "_", ",", "_", ",", "_"}], "}"}]}], "}"}], 
          "&"}], ")"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<From\>\"", "\[Rule]", "\"\<F\>\""}], ",", 
       RowBox[{"\"\<To\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Term", "[", "\"\<(\>\"", "]"}], ",", 
          RowBox[{"NonTerm", "[", "\"\<E\>\"", "]"}], ",", 
          RowBox[{"Term", "[", "\"\<)\>\"", "]"}]}], "}"}]}], ",", 
       RowBox[{"\"\<Code\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Value\>\"", "]"}], ",", 
            RowBox[{"#", "[", "\"\<TACode\>\"", "]"}]}], "}"}], "&"}], 
         ")"}]}]}], "|>"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{
  3.757708463418523*^9, {3.7590867432739067`*^9, 3.7590867662770243`*^9}, {
   3.75909493383667*^9, 3.759095011563183*^9}, {3.759095499913177*^9, 
   3.759095504428954*^9}, {3.7590957054350243`*^9, 3.7590957150507708`*^9}, {
   3.7590957720748463`*^9, 3.759095860393667*^9}, {3.759095903496615*^9, 
   3.7590959044409227`*^9}, {3.7590959445944433`*^9, 
   3.759095962593631*^9}},ExpressionUUID->"2acc6ca5-763c-47d1-84db-\
b9bd9d839b1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParseTree", "[", 
   RowBox[{"tokens", ",", "grammar"}], "]"}], " "}]], "Input",
 CellChangeTimes->{3.757712085869459*^9},
 CellLabel->
  "(Debug) In[109]:=",ExpressionUUID->"81e6ce23-a996-4ea6-b3c8-e42aa594bd86"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQ/e51X1Xu/r/2yi+udG2Xk3K4W66yVXDDB/tnG29O
328u7sCw4c/8lHRWBxg/x/XxxvOZB+1XVd9bcjxAxIGnnafkpdF/OB8mnwum
BR0cm4NajCe9hvOnSIn1/Uz5CefbPvs+KcaPwwFdfYLchdr1rLxw9TD+4UrG
tTkNTA4wPsRd1+2fg2l2h/AnUrMZ69gcYHwGKMgDm88IVf/cHsaHyb8Ai3+3
h8mj8r/D1edCaRgfEl4CcD7EXX/h+leCw4XFAcZHlX+OJv8cGg9ccPVzQk4X
LH/D74Bqngiaebxw/TnQcITxYfIwf8LkYXxU857bw+IDrg8a/7D4BQCRXQ6P

    "], {
     {RGBColor[0.5, 0., 0.], 
      LineBox[{{1, 2}, {1, 3}, {2, 4}, {2, 5}, {3, 35}, {4, 6}, {5, 7}, {5, 
       8}, {5, 9}, {8, 10}, {8, 11}, {8, 12}, {9, 34}, {11, 13}, {11, 14}, {
       13, 15}, {13, 16}, {14, 19}, {14, 20}, {14, 21}, {15, 17}, {16, 18}, {
       20, 22}, {20, 23}, {21, 26}, {21, 27}, {21, 28}, {22, 24}, {23, 25}, {
       27, 29}, {27, 30}, {28, 33}, {29, 31}, {30, 32}}]}, {InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"E\"\>", ")"}], ",", "1"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 1], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"T\"\>", ")"}], ",", "2"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 2], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"E'\"\>", ")"}], ",", "3"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 3], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"F\"\>", ")"}], ",", "4"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 4], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"T'\"\>", ")"}], ",", "5"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 5], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Term", "(", "\<\"id\"\>", ")"}], ",", "6", 
          ",", "\<\"56\"\>"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 6], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Term", "(", "\<\"*\"\>", ")"}], ",", "7"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 7], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"F\"\>", ")"}], ",", "8"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 8], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"T'\"\>", ")"}], ",", "9"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 9], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Term", "(", "\<\"(\"\>", ")"}], ",", "10"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 10], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"E\"\>", ")"}], ",", "11"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 11], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Term", "(", "\<\")\"\>", ")"}], ",", "12"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 12], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"T\"\>", ")"}], ",", "13"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 13], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"E'\"\>", ")"}], ",", "14"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 14], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"F\"\>", ")"}], ",", "15"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 15], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"T'\"\>", ")"}], ",", "16"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 16], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Term", "(", "\<\"id\"\>", ")"}], ",", "17", 
          ",", "\<\"23\"\>"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 17], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{"EmptyString", ",", "18"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 18], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Term", "(", "\<\"+\"\>", ")"}], ",", "19"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 19], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"T\"\>", ")"}], ",", "20"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 20], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"E'\"\>", ")"}], ",", "21"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 21], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"F\"\>", ")"}], ",", "22"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 22], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"T'\"\>", ")"}], ",", "23"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 23], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Term", "(", "\<\"id\"\>", ")"}], ",", "24", 
          ",", "\<\"1\"\>"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 24], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{"EmptyString", ",", "25"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 25], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Term", "(", "\<\"+\"\>", ")"}], ",", "26"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 26], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"T\"\>", ")"}], ",", "27"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 27], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"E'\"\>", ")"}], ",", "28"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 28], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"F\"\>", ")"}], ",", "29"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 29], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonTerm", "(", "\<\"T'\"\>", ")"}], ",", "30"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 30], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Term", "(", "\<\"id\"\>", ")"}], ",", "31", 
          ",", "\<\"6\"\>"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 31], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{"EmptyString", ",", "32"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 32], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{"EmptyString", ",", "33"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 33], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{"EmptyString", ",", "34"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 34], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{"EmptyString", ",", "35"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 35]}}],
   Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGBQBmIQ/e51X1Xu/r/2yi+udG2Xk3K4W66yVXDDB/tnG29O
328u7sCw4c/8lHRWBxg/x/XxxvOZB+1XVd9bcjxAxIGnnafkpdF/OB8mnwum
BR0cm4NajCe9hvOnSIn1/Uz5CefbPvs+KcaPwwFdfYLchdr1rLxw9TD+4UrG
tTkNTA4wPsRd1+2fg2l2h/AnUrMZ69gcYHwGKMgDm88IVf/cHsaHyb8Ai3+3
h8mj8r/D1edCaRgfEl4CcD7EXX/h+leCw4XFAcZHlX+OJv8cGg9ccPVzQk4X
LH/D74Bqngiaebxw/TnQcITxYfIwf8LkYXxU857bw+IDrg8a/7D4BQCRXQ6P

     "]]& ],
  AspectRatio->1.1338934190276817`,
  FrameTicks->None,
  ImageSize->{918., Automatic},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{{3.759095446134478*^9, 3.7590954580009823`*^9}, 
   3.759095496834633*^9, 3.759095723218137*^9},
 CellLabel->
  "(Debug) Out[109]=",ExpressionUUID->"b7b8235a-794c-455f-ba7f-a12ce24d4864"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[GeometricTransformationBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQbfN5Je+P9X/sjz//JZGqIeGwY6FlfJ3RO/tzXbdL
I5RFHSA0qwOMzwAFV3X3XPKWE4Kq/2cP48Pkd4LF+Rwg5r6wR+X/QONzOKCr
h4nD1MP4EHuY4Pog9t+zvwYVn7BZ2Fc0icXhGoq6HfYnoObsd5HaU6j7Gs5H
lX+BJv/C3nlaV9brVT/h6oVZW3733WdygPH/ST96suUdN5xvGnByA8vW/3D9
PEmL581+wuoA48PkYeEEk4fxUc1DDwcOB/mWHU9Wz+dwmPg56XvOXiEHAH6g
yuo=
     "], {
      {RGBColor[0.5, 0., 0.], 
       LineBox[{{1, 2}, {1, 3}, {2, 4}, {2, 5}, {3, 28}, {4, 6}, {5, 7}, {5, 
        8}, {5, 9}, {8, 10}, {8, 11}, {8, 12}, {9, 27}, {11, 13}, {11, 14}, {
        13, 15}, {13, 16}, {14, 19}, {14, 20}, {14, 21}, {15, 17}, {16, 18}, {
        20, 22}, {20, 23}, {21, 26}, {22, 24}, {23, 25}}]}, {InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"E\"\>", ")"}], ",", "1"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 1], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"T\"\>", ")"}], ",", "2"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 2], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"E'\"\>", ")"}], ",", "3"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 3], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"F\"\>", ")"}], ",", "4"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 4], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"T'\"\>", ")"}], ",", "5"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 5], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Term", "(", "\<\"id\"\>", ")"}], ",", "6", 
           ",", "\<\"56\"\>"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 6], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Term", "(", "\<\"*\"\>", ")"}], ",", "7"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 7], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"F\"\>", ")"}], ",", "8"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 8], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"T'\"\>", ")"}], ",", "9"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 9], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Term", "(", "\<\"(\"\>", ")"}], ",", "10"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 10], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"E\"\>", ")"}], ",", "11"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 11], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Term", "(", "\<\")\"\>", ")"}], ",", "12"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 12], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"T\"\>", ")"}], ",", "13"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 13], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"E'\"\>", ")"}], ",", "14"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 14], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"F\"\>", ")"}], ",", "15"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 15], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"T'\"\>", ")"}], ",", "16"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 16], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Term", "(", "\<\"id\"\>", ")"}], ",", "17", 
           ",", "\<\"23\"\>"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 17], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{"EmptyString", ",", "18"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 18], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Term", "(", "\<\"+\"\>", ")"}], ",", "19"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 19], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"T\"\>", ")"}], ",", "20"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 20], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"E'\"\>", ")"}], ",", "21"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 21], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"F\"\>", ")"}], ",", "22"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 22], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonTerm", "(", "\<\"T'\"\>", ")"}], ",", "23"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 23], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Term", "(", "\<\"id\"\>", ")"}], ",", "24", 
           ",", "\<\"1\"\>"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 24], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{"EmptyString", ",", "25"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 25], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{"EmptyString", ",", "26"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 26], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{"EmptyString", ",", "27"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 27], InsetBox[
        FrameBox[
         RowBox[{"{", 
          RowBox[{"EmptyString", ",", "28"}], "}"}],
         Background->RGBColor[1, 1, 0.8],
         FrameStyle->RGBColor[0.94, 0.85, 0.36],
         StripOnInput->False], 28]}}], {{0.044309085857448416`, 
    0.009712491791187716}}],
   Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGCQAWIQbfN5Je+P9X/sjz//JZGqIeGwY6FlfJ3RO/tzXbdL
I5RFHSA0qwOMzwAFV3X3XPKWE4Kq/2cP48Pkd4LF+Rwg5r6wR+X/QONzOKCr
h4nD1MP4EHuY4Pog9t+zvwYVn7BZ2Fc0icXhGoq6HfYnoObsd5HaU6j7Gs5H
lX+BJv/C3nlaV9brVT/h6oVZW3733WdygPH/ST96suUdN5xvGnByA8vW/3D9
PEmL581+wuoA48PkYeEEk4fxUc1DDwcOeHzAwhsAeJPJdA==
     "]]& ],
  AspectRatio->1.3151918984428583`,
  FrameTicks->None,
  ImagePadding->{{0., 1.}, {1., 0.}},
  ImageSize->{592., Automatic},
  PlotRange->{{-0.43644449569586624`, 3.928000461262797}, {-0.754931019582039,
    6.794379176238351}},
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{{3.759095162353766*^9, 
  3.759095166722986*^9}},ExpressionUUID->"1cf87f16-fc6f-4bf3-8b45-\
f566183284cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"parseTree", " ", "=", " ", 
   RowBox[{"Parse", "[", 
    RowBox[{"tokens", ",", "grammar"}], "]"}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.757712288753446*^9, 3.757712295372877*^9}, {
  3.759087308749361*^9, 3.759087310582172*^9}},
 CellLabel->
  "(Debug) In[172]:=",ExpressionUUID->"d9e19462-2ed4-4cdd-82fa-98a46a304918"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"depthFirstScan", " ", "=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"Last", "[", "\[IndentingNewLine]", 
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"DepthFirstScan", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Graph", "[", "parseTree", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NonTerm", "[", "\"\<E\>\"", "]"}], ",", "1"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<PostvisitVertex\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sow", "[", "#", "]"}], "&"}], ")"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.757712303406907*^9, 3.757712319271488*^9}, {
   3.757712402690097*^9, 3.757712436090761*^9}, {3.757712495451662*^9, 
   3.757712497135003*^9}, {3.757712535617786*^9, 3.757712535792206*^9}, {
   3.758052523270585*^9, 3.758052550159257*^9}, {3.758052734115679*^9, 
   3.758052747866054*^9}, 3.758052780479733*^9, {3.7580533796730623`*^9, 
   3.758053410769062*^9}, {3.758053509413167*^9, 3.7580535287621*^9}, {
   3.758053657413247*^9, 3.758053661751783*^9}, {3.758053722375634*^9, 
   3.7580537338191547`*^9}, 3.7580540929088087`*^9, 3.758054980613995*^9, 
   3.759087318486473*^9},
 CellLabel->
  "(Debug) In[173]:=",ExpressionUUID->"78da905f-707e-4314-8181-223aaf07b161"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Term", "[", "\<\"id\"\>", "]"}], ",", "6", ",", "\<\"56\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"F\"\>", "]"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Term", "[", "\<\"*\"\>", "]"}], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Term", "[", "\<\"(\"\>", "]"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Term", "[", "\<\"id\"\>", "]"}], ",", "17", ",", "\<\"23\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"F\"\>", "]"}], ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"EmptyString", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"T'\"\>", "]"}], ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"T\"\>", "]"}], ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Term", "[", "\<\"+\"\>", "]"}], ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Term", "[", "\<\"id\"\>", "]"}], ",", "24", ",", "\<\"1\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"F\"\>", "]"}], ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"EmptyString", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"T'\"\>", "]"}], ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"T\"\>", "]"}], ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"EmptyString", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"E'\"\>", "]"}], ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"E'\"\>", "]"}], ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"E\"\>", "]"}], ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Term", "[", "\<\")\"\>", "]"}], ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"F\"\>", "]"}], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"EmptyString", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"T'\"\>", "]"}], ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"T'\"\>", "]"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"T\"\>", "]"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"EmptyString", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"E'\"\>", "]"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NonTerm", "[", "\<\"E\"\>", "]"}], ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.758053411184317*^9, 3.758053514369686*^9, {3.758053647977211*^9, 
   3.758053661961804*^9}, 3.7580537368101482`*^9, 3.7580549813213663`*^9, 
   3.7590873192047043`*^9},
 CellLabel->
  "(Debug) Out[173]=",ExpressionUUID->"9b434586-0023-4525-b76d-aba9829a9dec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteCases", "[", 
  RowBox[{"depthFirstScan", ",", 
   RowBox[{"x_", "/;", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NonTerm", "[", "\"\<F\>\"", "]"}], ",", 
        RowBox[{"NonTerm", "[", "\"\<T'\>\"", "]"}], ",", 
        RowBox[{"NonTerm", "[", "\"\<T\>\"", "]"}], ",", 
        RowBox[{"NonTerm", "[", "\"\<E\>\"", "]"}], ",", 
        RowBox[{"NonTerm", "[", "\"\<E'\>\"", "]"}], ",", "EmptyString"}], 
       "}"}], ",", "x"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7580537587272243`*^9, 3.758053760960915*^9}, {
  3.758053848814808*^9, 3.758053895348702*^9}, {3.7580539334309607`*^9, 
  3.758053945987487*^9}},
 CellLabel->
  "(Debug) In[116]:=",ExpressionUUID->"29b857ec-ce69-4da9-bfb0-0435e3d6724b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Term", "[", "\<\"id\"\>", "]"}], ",", 
   RowBox[{"Term", "[", "\<\"*\"\>", "]"}], ",", 
   RowBox[{"Term", "[", "\<\"(\"\>", "]"}], ",", 
   RowBox[{"Term", "[", "\<\"id\"\>", "]"}], ",", 
   RowBox[{"Term", "[", "\<\"+\"\>", "]"}], ",", 
   RowBox[{"Term", "[", "\<\"id\"\>", "]"}], ",", 
   RowBox[{"Term", "[", "\<\")\"\>", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.75805389589156*^9, {3.758053937335103*^9, 3.758053946584972*^9}},
 CellLabel->
  "(Debug) Out[116]=",ExpressionUUID->"b345fbb0-2c60-4059-a341-0ec7f6baa213"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1023},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 99, "Title",ExpressionUUID->"d1ca6f13-3dc9-4753-8e1a-6160422fec5d"],
Cell[CellGroupData[{
Cell[765, 29, 159, 3, 70, "Chapter",ExpressionUUID->"a9651e77-d6d2-4a54-9ff9-ceba4ac659e9"],
Cell[CellGroupData[{
Cell[949, 36, 217, 4, 65, "Subchapter",ExpressionUUID->"21a9500e-0fd4-4842-9564-1968489f3e69"],
Cell[1169, 42, 2000, 49, 315, "Input",ExpressionUUID->"31d7f42a-029d-48ad-a73a-d3afc3746dd0",
 InitializationCell->True],
Cell[3172, 93, 6837, 154, 1660, "Input",ExpressionUUID->"12bae02c-f6f8-47ab-9ab5-f8b6ebb6a3ce",
 InitializationCell->True],
Cell[10012, 249, 8247, 178, 2385, "Input",ExpressionUUID->"a7881061-cda5-4880-93b1-dea8fe53412d",
 InitializationCell->True],
Cell[18262, 429, 16630, 355, 3057, "Input",ExpressionUUID->"680049cd-df21-43fa-aec4-f635d6151bc8",
 InitializationCell->True],
Cell[34895, 786, 2441, 62, 469, "Input",ExpressionUUID->"18e97e79-dd4c-4401-9d37-c7849cf9ddef",
 InitializationCell->True],
Cell[37339, 850, 10862, 243, 2385, "Input",ExpressionUUID->"8ce2d6db-5913-4394-bbf7-b9e791eb5e48",
 InitializationCell->True],
Cell[48204, 1095, 5568, 121, 1090, "Input",ExpressionUUID->"c2db15b0-7525-46b7-aaf5-dbf41f2c0288",
 InitializationCell->True],
Cell[53775, 1218, 4797, 108, 1090, "Input",ExpressionUUID->"0ad7f988-a0ee-4393-9822-32b09524ddfa",
 InitializationCell->True],
Cell[58575, 1328, 3751, 81, 897, "Input",ExpressionUUID->"78b93a45-c595-4808-a5eb-376b998b90df",
 InitializationCell->True],
Cell[62329, 1411, 20594, 443, 5697, "Input",ExpressionUUID->"b7c7c195-cdf9-449c-857c-99e973ed93a0",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[82960, 1859, 169, 3, 49, "Subchapter",ExpressionUUID->"3b519190-0088-4cf5-bc8c-eba64cf01b88"],
Cell[83132, 1864, 2107, 47, 366, "Input",ExpressionUUID->"415452a1-d59a-4d74-9820-866b75e2c230",
 InitializationCell->True],
Cell[85242, 1913, 3659, 93, 780, "Input",ExpressionUUID->"ecb51c45-66ee-4b33-a5df-86b968dffa26",
 InitializationCell->True],
Cell[88904, 2008, 6289, 135, 1255, "Input",ExpressionUUID->"f34515cd-4153-4c7f-acc6-0f2fe37ad4bf",
 InitializationCell->True],
Cell[95196, 2145, 3947, 92, 1090, "Input",ExpressionUUID->"414991df-16ec-4376-92c4-3229bd4568cc",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[99180, 2242, 155, 3, 49, "Subchapter",ExpressionUUID->"d07c23e9-1d59-4e51-ac14-31d0660d35e2"],
Cell[99338, 2247, 990, 28, 71, "Input",ExpressionUUID->"d141a225-5d1a-48c0-9caa-0ee703961ea8",
 InitializationCell->True],
Cell[100331, 2277, 1018, 28, 71, "Input",ExpressionUUID->"dd1a2e4b-3d9f-46b9-b5c8-8985b121e954",
 InitializationCell->True],
Cell[101352, 2307, 11512, 277, 1543, "Input",ExpressionUUID->"33941b84-ca61-4ed5-848e-153c6f0dacbc",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[112901, 2589, 156, 3, 49, "Subchapter",ExpressionUUID->"491b6222-dc01-403a-a304-3cbf3275f40d"],
Cell[113060, 2594, 12752, 305, 1198, "Input",ExpressionUUID->"48f5ec51-854c-4046-8362-e0b917d47448",
 InitializationCell->True],
Cell[125815, 2901, 9447, 195, 1014, "Input",ExpressionUUID->"2cf6f8d1-ea3f-4462-bbc9-ba4759efb938",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135311, 3102, 161, 3, 70, "Chapter",ExpressionUUID->"9764d62a-13d8-4273-861c-c2aab0ea6f24"],
Cell[135475, 3107, 111280, 1829, 671, "Input",ExpressionUUID->"86fcd7fb-b71d-45d4-a557-59f8dbaa391e"],
Cell[246758, 4938, 1095, 27, 232, "Input",ExpressionUUID->"478722ae-2361-477f-afb1-f1ba00b38f86",
 InitializationCell->True],
Cell[247856, 4967, 741, 20, 71, "Input",ExpressionUUID->"15acb236-56b7-4cc1-b451-d8875433ab43",
 InitializationCell->True],
Cell[248600, 4989, 628, 16, 47, "Input",ExpressionUUID->"f2c94aaa-b307-41d2-9aa5-afcde986fc64",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[249253, 5009, 531, 10, 31, "Input",ExpressionUUID->"3a4b5cb8-85ab-443d-8f69-d704df1dd23a"],
Cell[249787, 5021, 1902, 45, 35, "Output",ExpressionUUID->"8ae06777-90ef-49bb-aba4-4cb62173ecfa"]
}, Open  ]],
Cell[251704, 5069, 5905, 146, 301, "Input",ExpressionUUID->"2acc6ca5-763c-47d1-84db-b9bd9d839b1a",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[257634, 5219, 248, 6, 31, "Input",ExpressionUUID->"81e6ce23-a996-4ea6-b3c8-e42aa594bd86"],
Cell[257885, 5227, 10774, 277, 1058, "Output",ExpressionUUID->"b7b8235a-794c-455f-ba7f-a12ce24d4864"]
}, Open  ]],
Cell[268674, 5507, 9046, 226, 791, "Input",ExpressionUUID->"1cf87f16-fc6f-4bf3-8b45-f566183284cd"],
Cell[277723, 5735, 365, 8, 31, "Input",ExpressionUUID->"d9e19462-2ed4-4cdd-82fa-98a46a304918"],
Cell[CellGroupData[{
Cell[278113, 5747, 1480, 29, 216, "Input",ExpressionUUID->"78da905f-707e-4314-8181-223aaf07b161"],
Cell[279596, 5778, 3156, 91, 105, "Output",ExpressionUUID->"9b434586-0023-4525-b76d-aba9829a9dec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282789, 5874, 802, 18, 55, "Input",ExpressionUUID->"29b857ec-ce69-4da9-bfb0-0435e3d6724b"],
Cell[283594, 5894, 587, 13, 35, "Output",ExpressionUUID->"b345fbb0-2c60-4059-a341-0ec7f6baa213"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

